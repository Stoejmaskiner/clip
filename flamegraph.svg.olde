<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="694" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="677.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="677.00"> </text><svg id="frames" x="10" width="1180" total_samples="12635"><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (6 samples, 0.05%)</title><rect x="0.0000%" y="597" width="0.0475%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="6"/><text x="0.2500%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (3 samples, 0.02%)</title><rect x="0.0475%" y="597" width="0.0237%" height="15" fill="rgb(217,0,24)" fg:x="6" fg:w="3"/><text x="0.2975%" y="607.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (6 samples, 0.05%)</title><rect x="0.0871%" y="597" width="0.0475%" height="15" fill="rgb(221,193,54)" fg:x="11" fg:w="6"/><text x="0.3371%" y="607.50"></text></g><g><title>core::sync::atomic::fence (6 samples, 0.05%)</title><rect x="0.0871%" y="581" width="0.0475%" height="15" fill="rgb(248,212,6)" fg:x="11" fg:w="6"/><text x="0.3371%" y="591.50"></text></g><g><title>epoll_wait (11 samples, 0.09%)</title><rect x="0.1345%" y="597" width="0.0871%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="11"/><text x="0.3845%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (29 samples, 0.23%)</title><rect x="0.0000%" y="613" width="0.2295%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="29"/><text x="0.2500%" y="623.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (3 samples, 0.02%)</title><rect x="0.2295%" y="597" width="0.0237%" height="15" fill="rgb(207,160,47)" fg:x="29" fg:w="3"/><text x="0.4795%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (31 samples, 0.25%)</title><rect x="0.2533%" y="597" width="0.2454%" height="15" fill="rgb(228,23,34)" fg:x="32" fg:w="31"/><text x="0.5033%" y="607.50"></text></g><g><title>[libc.so.6] (11 samples, 0.09%)</title><rect x="0.4986%" y="597" width="0.0871%" height="15" fill="rgb(218,30,26)" fg:x="63" fg:w="11"/><text x="0.7486%" y="607.50"></text></g><g><title>base::core::Object::decrementRefCount (4 samples, 0.03%)</title><rect x="0.5857%" y="597" width="0.0317%" height="15" fill="rgb(220,122,19)" fg:x="74" fg:w="4"/><text x="0.8357%" y="607.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="0.6252%" y="597" width="0.0237%" height="15" fill="rgb(250,228,42)" fg:x="79" fg:w="3"/><text x="0.8752%" y="607.50"></text></g><g><title>epoll_wait (4 samples, 0.03%)</title><rect x="0.6490%" y="597" width="0.0317%" height="15" fill="rgb(240,193,28)" fg:x="82" fg:w="4"/><text x="0.8990%" y="607.50"></text></g><g><title>[[heap]] (59 samples, 0.47%)</title><rect x="0.2295%" y="613" width="0.4670%" height="15" fill="rgb(216,20,37)" fg:x="29" fg:w="59"/><text x="0.4795%" y="623.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (6 samples, 0.05%)</title><rect x="0.6965%" y="597" width="0.0475%" height="15" fill="rgb(206,188,39)" fg:x="88" fg:w="6"/><text x="0.9465%" y="607.50"></text></g><g><title>[libc.so.6] (7 samples, 0.06%)</title><rect x="0.7440%" y="597" width="0.0554%" height="15" fill="rgb(217,207,13)" fg:x="94" fg:w="7"/><text x="0.9940%" y="607.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (8 samples, 0.06%)</title><rect x="0.8152%" y="597" width="0.0633%" height="15" fill="rgb(231,73,38)" fg:x="103" fg:w="8"/><text x="1.0652%" y="607.50"></text></g><g><title>core::sync::atomic::fence (4 samples, 0.03%)</title><rect x="0.8469%" y="581" width="0.0317%" height="15" fill="rgb(225,20,46)" fg:x="107" fg:w="4"/><text x="1.0969%" y="591.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::on_main_thread (6 samples, 0.05%)</title><rect x="0.8864%" y="597" width="0.0475%" height="15" fill="rgb(210,31,41)" fg:x="112" fg:w="6"/><text x="1.1364%" y="607.50"></text></g><g><title>[[stack]] (31 samples, 0.25%)</title><rect x="0.6965%" y="613" width="0.2454%" height="15" fill="rgb(221,200,47)" fg:x="88" fg:w="31"/><text x="0.9465%" y="623.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (4 samples, 0.03%)</title><rect x="0.9418%" y="597" width="0.0317%" height="15" fill="rgb(226,26,5)" fg:x="119" fg:w="4"/><text x="1.1918%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (5 samples, 0.04%)</title><rect x="0.9735%" y="597" width="0.0396%" height="15" fill="rgb(249,33,26)" fg:x="123" fg:w="5"/><text x="1.2235%" y="607.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (10 samples, 0.08%)</title><rect x="1.0210%" y="597" width="0.0791%" height="15" fill="rgb(235,183,28)" fg:x="129" fg:w="10"/><text x="1.2710%" y="607.50"></text></g><g><title>core::sync::atomic::fence (6 samples, 0.05%)</title><rect x="1.0526%" y="581" width="0.0475%" height="15" fill="rgb(221,5,38)" fg:x="133" fg:w="6"/><text x="1.3026%" y="591.50"></text></g><g><title>[anon] (21 samples, 0.17%)</title><rect x="0.9418%" y="613" width="0.1662%" height="15" fill="rgb(247,18,42)" fg:x="119" fg:w="21"/><text x="1.1918%" y="623.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (13 samples, 0.10%)</title><rect x="1.1239%" y="597" width="0.1029%" height="15" fill="rgb(241,131,45)" fg:x="142" fg:w="13"/><text x="1.3739%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (36 samples, 0.28%)</title><rect x="1.2268%" y="597" width="0.2849%" height="15" fill="rgb(249,31,29)" fg:x="155" fg:w="36"/><text x="1.4768%" y="607.50"></text></g><g><title>[libc.so.6] (10 samples, 0.08%)</title><rect x="1.5117%" y="597" width="0.0791%" height="15" fill="rgb(225,111,53)" fg:x="191" fg:w="10"/><text x="1.7617%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="1.5750%" y="581" width="0.0158%" height="15" fill="rgb(238,160,17)" fg:x="199" fg:w="2"/><text x="1.8250%" y="591.50"></text></g><g><title>[unknown] (112 samples, 0.89%)</title><rect x="1.5908%" y="597" width="0.8864%" height="15" fill="rgb(214,148,48)" fg:x="201" fg:w="112"/><text x="1.8408%" y="607.50"></text></g><g><title>[unknown] (99 samples, 0.78%)</title><rect x="1.6937%" y="581" width="0.7835%" height="15" fill="rgb(232,36,49)" fg:x="214" fg:w="99"/><text x="1.9437%" y="591.50"></text></g><g><title>[unknown] (92 samples, 0.73%)</title><rect x="1.7491%" y="565" width="0.7281%" height="15" fill="rgb(209,103,24)" fg:x="221" fg:w="92"/><text x="1.9991%" y="575.50"></text></g><g><title>[unknown] (86 samples, 0.68%)</title><rect x="1.7966%" y="549" width="0.6806%" height="15" fill="rgb(229,88,8)" fg:x="227" fg:w="86"/><text x="2.0466%" y="559.50"></text></g><g><title>[unknown] (77 samples, 0.61%)</title><rect x="1.8678%" y="533" width="0.6094%" height="15" fill="rgb(213,181,19)" fg:x="236" fg:w="77"/><text x="2.1178%" y="543.50"></text></g><g><title>[unknown] (55 samples, 0.44%)</title><rect x="2.0419%" y="517" width="0.4353%" height="15" fill="rgb(254,191,54)" fg:x="258" fg:w="55"/><text x="2.2919%" y="527.50"></text></g><g><title>[unknown] (36 samples, 0.28%)</title><rect x="2.1923%" y="501" width="0.2849%" height="15" fill="rgb(241,83,37)" fg:x="277" fg:w="36"/><text x="2.4423%" y="511.50"></text></g><g><title>[unknown] (22 samples, 0.17%)</title><rect x="2.3031%" y="485" width="0.1741%" height="15" fill="rgb(233,36,39)" fg:x="291" fg:w="22"/><text x="2.5531%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.13%)</title><rect x="2.3427%" y="469" width="0.1345%" height="15" fill="rgb(226,3,54)" fg:x="296" fg:w="17"/><text x="2.5927%" y="479.50"></text></g><g><title>[unknown] (13 samples, 0.10%)</title><rect x="2.3744%" y="453" width="0.1029%" height="15" fill="rgb(245,192,40)" fg:x="300" fg:w="13"/><text x="2.6244%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="2.3823%" y="437" width="0.0950%" height="15" fill="rgb(238,167,29)" fg:x="301" fg:w="12"/><text x="2.6323%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="2.4139%" y="421" width="0.0633%" height="15" fill="rgb(232,182,51)" fg:x="305" fg:w="8"/><text x="2.6639%" y="431.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.4535%" y="405" width="0.0237%" height="15" fill="rgb(231,60,39)" fg:x="310" fg:w="3"/><text x="2.7035%" y="415.50"></text></g><g><title>base::core::Object::beforeDestruction (3 samples, 0.02%)</title><rect x="2.4772%" y="597" width="0.0237%" height="15" fill="rgb(208,69,12)" fg:x="313" fg:w="3"/><text x="2.7272%" y="607.50"></text></g><g><title>base::core::Object::decrementRefCount (10 samples, 0.08%)</title><rect x="2.5010%" y="597" width="0.0791%" height="15" fill="rgb(235,93,37)" fg:x="316" fg:w="10"/><text x="2.7510%" y="607.50"></text></g><g><title>cfree (6 samples, 0.05%)</title><rect x="2.5801%" y="597" width="0.0475%" height="15" fill="rgb(213,116,39)" fg:x="326" fg:w="6"/><text x="2.8301%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (2 samples, 0.02%)</title><rect x="2.7305%" y="581" width="0.0158%" height="15" fill="rgb(222,207,29)" fg:x="345" fg:w="2"/><text x="2.9805%" y="591.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="2.7305%" y="565" width="0.0158%" height="15" fill="rgb(206,96,30)" fg:x="345" fg:w="2"/><text x="2.9805%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.04%)</title><rect x="2.7463%" y="581" width="0.0396%" height="15" fill="rgb(218,138,4)" fg:x="347" fg:w="5"/><text x="2.9963%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.04%)</title><rect x="2.7463%" y="565" width="0.0396%" height="15" fill="rgb(250,191,14)" fg:x="347" fg:w="5"/><text x="2.9963%" y="575.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (60 samples, 0.47%)</title><rect x="2.6276%" y="597" width="0.4749%" height="15" fill="rgb(239,60,40)" fg:x="332" fg:w="60"/><text x="2.8776%" y="607.50"></text></g><g><title>core::sync::atomic::fence (40 samples, 0.32%)</title><rect x="2.7859%" y="581" width="0.3166%" height="15" fill="rgb(206,27,48)" fg:x="352" fg:w="40"/><text x="3.0359%" y="591.50"></text></g><g><title>epoll_wait (4 samples, 0.03%)</title><rect x="3.1025%" y="597" width="0.0317%" height="15" fill="rgb(225,35,8)" fg:x="392" fg:w="4"/><text x="3.3525%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::on_main_thread (10 samples, 0.08%)</title><rect x="3.1342%" y="597" width="0.0791%" height="15" fill="rgb(250,213,24)" fg:x="396" fg:w="10"/><text x="3.3842%" y="607.50"></text></g><g><title>pthread_self (3 samples, 0.02%)</title><rect x="3.2212%" y="597" width="0.0237%" height="15" fill="rgb(247,123,22)" fg:x="407" fg:w="3"/><text x="3.4712%" y="607.50"></text></g><g><title>[unknown] (273 samples, 2.16%)</title><rect x="1.1080%" y="613" width="2.1607%" height="15" fill="rgb(231,138,38)" fg:x="140" fg:w="273"/><text x="1.3580%" y="623.50">[..</text></g><g><title>read (3 samples, 0.02%)</title><rect x="3.2450%" y="597" width="0.0237%" height="15" fill="rgb(231,145,46)" fg:x="410" fg:w="3"/><text x="3.4950%" y="607.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (14 samples, 0.11%)</title><rect x="3.5378%" y="501" width="0.1108%" height="15" fill="rgb(251,118,11)" fg:x="447" fg:w="14"/><text x="3.7878%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="3.6249%" y="485" width="0.0237%" height="15" fill="rgb(217,147,25)" fg:x="458" fg:w="3"/><text x="3.8749%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="3.6249%" y="469" width="0.0237%" height="15" fill="rgb(247,81,37)" fg:x="458" fg:w="3"/><text x="3.8749%" y="479.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (21 samples, 0.17%)</title><rect x="3.8069%" y="485" width="0.1662%" height="15" fill="rgb(209,12,38)" fg:x="481" fg:w="21"/><text x="4.0569%" y="495.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (2 samples, 0.02%)</title><rect x="4.0839%" y="469" width="0.0158%" height="15" fill="rgb(227,1,9)" fg:x="516" fg:w="2"/><text x="4.3339%" y="479.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (17 samples, 0.13%)</title><rect x="3.9731%" y="485" width="0.1345%" height="15" fill="rgb(248,47,43)" fg:x="502" fg:w="17"/><text x="4.2231%" y="495.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::MainThreadExecutor&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;&gt;&gt;::execute (13 samples, 0.10%)</title><rect x="4.1393%" y="469" width="0.1029%" height="15" fill="rgb(221,10,30)" fg:x="523" fg:w="13"/><text x="4.3893%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (2 samples, 0.02%)</title><rect x="4.3609%" y="453" width="0.0158%" height="15" fill="rgb(210,229,1)" fg:x="551" fg:w="2"/><text x="4.6109%" y="463.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="4.3609%" y="437" width="0.0158%" height="15" fill="rgb(222,148,37)" fg:x="551" fg:w="2"/><text x="4.6109%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="4.3767%" y="453" width="0.0158%" height="15" fill="rgb(234,67,33)" fg:x="553" fg:w="2"/><text x="4.6267%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="4.3767%" y="437" width="0.0158%" height="15" fill="rgb(247,98,35)" fg:x="553" fg:w="2"/><text x="4.6267%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.08%)</title><rect x="4.3926%" y="453" width="0.0791%" height="15" fill="rgb(247,138,52)" fg:x="555" fg:w="10"/><text x="4.6426%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.08%)</title><rect x="4.3926%" y="437" width="0.0791%" height="15" fill="rgb(213,79,30)" fg:x="555" fg:w="10"/><text x="4.6426%" y="447.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::on_main_thread (61 samples, 0.48%)</title><rect x="4.1235%" y="485" width="0.4828%" height="15" fill="rgb(246,177,23)" fg:x="521" fg:w="61"/><text x="4.3735%" y="495.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (44 samples, 0.35%)</title><rect x="4.2580%" y="469" width="0.3482%" height="15" fill="rgb(230,62,27)" fg:x="538" fg:w="44"/><text x="4.5080%" y="479.50"></text></g><g><title>core::sync::atomic::fence (17 samples, 0.13%)</title><rect x="4.4717%" y="453" width="0.1345%" height="15" fill="rgb(216,154,8)" fg:x="565" fg:w="17"/><text x="4.7217%" y="463.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (122 samples, 0.97%)</title><rect x="3.6486%" y="501" width="0.9656%" height="15" fill="rgb(244,35,45)" fg:x="461" fg:w="122"/><text x="3.8986%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.6142%" y="501" width="0.0158%" height="15" fill="rgb(251,115,12)" fg:x="583" fg:w="2"/><text x="4.8642%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.6142%" y="485" width="0.0158%" height="15" fill="rgb(240,54,50)" fg:x="583" fg:w="2"/><text x="4.8642%" y="495.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.6142%" y="469" width="0.0158%" height="15" fill="rgb(233,84,52)" fg:x="583" fg:w="2"/><text x="4.8642%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.6142%" y="453" width="0.0158%" height="15" fill="rgb(207,117,47)" fg:x="583" fg:w="2"/><text x="4.8642%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="4.6142%" y="437" width="0.0158%" height="15" fill="rgb(249,43,39)" fg:x="583" fg:w="2"/><text x="4.8642%" y="447.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (2 samples, 0.02%)</title><rect x="4.6300%" y="453" width="0.0158%" height="15" fill="rgb(209,38,44)" fg:x="585" fg:w="2"/><text x="4.8800%" y="463.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (6 samples, 0.05%)</title><rect x="4.6300%" y="469" width="0.0475%" height="15" fill="rgb(236,212,23)" fg:x="585" fg:w="6"/><text x="4.8800%" y="479.50"></text></g><g><title>cfree (3 samples, 0.02%)</title><rect x="4.6537%" y="453" width="0.0237%" height="15" fill="rgb(242,79,21)" fg:x="588" fg:w="3"/><text x="4.9037%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="4.6617%" y="437" width="0.0158%" height="15" fill="rgb(211,96,35)" fg:x="589" fg:w="2"/><text x="4.9117%" y="447.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (10 samples, 0.08%)</title><rect x="4.6300%" y="485" width="0.0791%" height="15" fill="rgb(253,215,40)" fg:x="585" fg:w="10"/><text x="4.8800%" y="495.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::on_main_thread (4 samples, 0.03%)</title><rect x="4.6775%" y="469" width="0.0317%" height="15" fill="rgb(211,81,21)" fg:x="591" fg:w="4"/><text x="4.9275%" y="479.50"></text></g><g><title>base::core::Object::decrementRefCount (12 samples, 0.09%)</title><rect x="4.6300%" y="501" width="0.0950%" height="15" fill="rgb(208,190,38)" fg:x="585" fg:w="12"/><text x="4.8800%" y="511.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (20 samples, 0.16%)</title><rect x="4.7329%" y="501" width="0.1583%" height="15" fill="rgb(235,213,38)" fg:x="598" fg:w="20"/><text x="4.9829%" y="511.50"></text></g><g><title>core::sync::atomic::fence (18 samples, 0.14%)</title><rect x="4.7487%" y="485" width="0.1425%" height="15" fill="rgb(237,122,38)" fg:x="600" fg:w="18"/><text x="4.9987%" y="495.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="4.9228%" y="485" width="0.0237%" height="15" fill="rgb(244,218,35)" fg:x="622" fg:w="3"/><text x="5.1728%" y="495.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (264 samples, 2.09%)</title><rect x="3.4112%" y="517" width="2.0894%" height="15" fill="rgb(240,68,47)" fg:x="431" fg:w="264"/><text x="3.6612%" y="527.50">[..</text></g><g><title>read (77 samples, 0.61%)</title><rect x="4.8912%" y="501" width="0.6094%" height="15" fill="rgb(210,16,53)" fg:x="618" fg:w="77"/><text x="5.1412%" y="511.50"></text></g><g><title>[unknown] (70 samples, 0.55%)</title><rect x="4.9466%" y="485" width="0.5540%" height="15" fill="rgb(235,124,12)" fg:x="625" fg:w="70"/><text x="5.1966%" y="495.50"></text></g><g><title>[unknown] (70 samples, 0.55%)</title><rect x="4.9466%" y="469" width="0.5540%" height="15" fill="rgb(224,169,11)" fg:x="625" fg:w="70"/><text x="5.1966%" y="479.50"></text></g><g><title>[unknown] (70 samples, 0.55%)</title><rect x="4.9466%" y="453" width="0.5540%" height="15" fill="rgb(250,166,2)" fg:x="625" fg:w="70"/><text x="5.1966%" y="463.50"></text></g><g><title>[unknown] (70 samples, 0.55%)</title><rect x="4.9466%" y="437" width="0.5540%" height="15" fill="rgb(242,216,29)" fg:x="625" fg:w="70"/><text x="5.1966%" y="447.50"></text></g><g><title>[unknown] (63 samples, 0.50%)</title><rect x="5.0020%" y="421" width="0.4986%" height="15" fill="rgb(230,116,27)" fg:x="632" fg:w="63"/><text x="5.2520%" y="431.50"></text></g><g><title>[unknown] (52 samples, 0.41%)</title><rect x="5.0890%" y="405" width="0.4116%" height="15" fill="rgb(228,99,48)" fg:x="643" fg:w="52"/><text x="5.3390%" y="415.50"></text></g><g><title>[unknown] (42 samples, 0.33%)</title><rect x="5.1682%" y="389" width="0.3324%" height="15" fill="rgb(253,11,6)" fg:x="653" fg:w="42"/><text x="5.4182%" y="399.50"></text></g><g><title>[unknown] (25 samples, 0.20%)</title><rect x="5.3027%" y="373" width="0.1979%" height="15" fill="rgb(247,143,39)" fg:x="670" fg:w="25"/><text x="5.5527%" y="383.50"></text></g><g><title>[unknown] (13 samples, 0.10%)</title><rect x="5.3977%" y="357" width="0.1029%" height="15" fill="rgb(236,97,10)" fg:x="682" fg:w="13"/><text x="5.6477%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="5.4689%" y="341" width="0.0317%" height="15" fill="rgb(233,208,19)" fg:x="691" fg:w="4"/><text x="5.7189%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="5.4769%" y="325" width="0.0237%" height="15" fill="rgb(216,164,2)" fg:x="692" fg:w="3"/><text x="5.7269%" y="335.50"></text></g><g><title>[libc.so.6] (10 samples, 0.08%)</title><rect x="5.5797%" y="501" width="0.0791%" height="15" fill="rgb(220,129,5)" fg:x="705" fg:w="10"/><text x="5.8297%" y="511.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (996 samples, 7.88%)</title><rect x="3.2687%" y="533" width="7.8829%" height="15" fill="rgb(242,17,10)" fg:x="413" fg:w="996"/><text x="3.5187%" y="543.50">[BitwigPlug..</text></g><g><title>epoll_wait (713 samples, 5.64%)</title><rect x="5.5085%" y="517" width="5.6431%" height="15" fill="rgb(242,107,0)" fg:x="696" fg:w="713"/><text x="5.7585%" y="527.50">epoll_w..</text></g><g><title>[unknown] (694 samples, 5.49%)</title><rect x="5.6589%" y="501" width="5.4927%" height="15" fill="rgb(251,28,31)" fg:x="715" fg:w="694"/><text x="5.9089%" y="511.50">[unknow..</text></g><g><title>[unknown] (680 samples, 5.38%)</title><rect x="5.7697%" y="485" width="5.3819%" height="15" fill="rgb(233,223,10)" fg:x="729" fg:w="680"/><text x="6.0197%" y="495.50">[unknow..</text></g><g><title>[unknown] (674 samples, 5.33%)</title><rect x="5.8172%" y="469" width="5.3344%" height="15" fill="rgb(215,21,27)" fg:x="735" fg:w="674"/><text x="6.0672%" y="479.50">[unknow..</text></g><g><title>[unknown] (666 samples, 5.27%)</title><rect x="5.8805%" y="453" width="5.2711%" height="15" fill="rgb(232,23,21)" fg:x="743" fg:w="666"/><text x="6.1305%" y="463.50">[unkno..</text></g><g><title>[unknown] (640 samples, 5.07%)</title><rect x="6.0863%" y="437" width="5.0653%" height="15" fill="rgb(244,5,23)" fg:x="769" fg:w="640"/><text x="6.3363%" y="447.50">[unkno..</text></g><g><title>[unknown] (600 samples, 4.75%)</title><rect x="6.4028%" y="421" width="4.7487%" height="15" fill="rgb(226,81,46)" fg:x="809" fg:w="600"/><text x="6.6528%" y="431.50">[unkno..</text></g><g><title>[unknown] (540 samples, 4.27%)</title><rect x="6.8777%" y="405" width="4.2738%" height="15" fill="rgb(247,70,30)" fg:x="869" fg:w="540"/><text x="7.1277%" y="415.50">[unkn..</text></g><g><title>[unknown] (496 samples, 3.93%)</title><rect x="7.2260%" y="389" width="3.9256%" height="15" fill="rgb(212,68,19)" fg:x="913" fg:w="496"/><text x="7.4760%" y="399.50">[unk..</text></g><g><title>[unknown] (457 samples, 3.62%)</title><rect x="7.5346%" y="373" width="3.6169%" height="15" fill="rgb(240,187,13)" fg:x="952" fg:w="457"/><text x="7.7846%" y="383.50">[unk..</text></g><g><title>[unknown] (441 samples, 3.49%)</title><rect x="7.6613%" y="357" width="3.4903%" height="15" fill="rgb(223,113,26)" fg:x="968" fg:w="441"/><text x="7.9113%" y="367.50">[un..</text></g><g><title>[unknown] (402 samples, 3.18%)</title><rect x="7.9699%" y="341" width="3.1816%" height="15" fill="rgb(206,192,2)" fg:x="1007" fg:w="402"/><text x="8.2199%" y="351.50">[un..</text></g><g><title>[unknown] (330 samples, 2.61%)</title><rect x="8.5398%" y="325" width="2.6118%" height="15" fill="rgb(241,108,4)" fg:x="1079" fg:w="330"/><text x="8.7898%" y="335.50">[u..</text></g><g><title>[unknown] (258 samples, 2.04%)</title><rect x="9.1096%" y="309" width="2.0419%" height="15" fill="rgb(247,173,49)" fg:x="1151" fg:w="258"/><text x="9.3596%" y="319.50">[..</text></g><g><title>[unknown] (190 samples, 1.50%)</title><rect x="9.6478%" y="293" width="1.5038%" height="15" fill="rgb(224,114,35)" fg:x="1219" fg:w="190"/><text x="9.8978%" y="303.50"></text></g><g><title>[unknown] (109 samples, 0.86%)</title><rect x="10.2889%" y="277" width="0.8627%" height="15" fill="rgb(245,159,27)" fg:x="1300" fg:w="109"/><text x="10.5389%" y="287.50"></text></g><g><title>[unknown] (103 samples, 0.82%)</title><rect x="10.3364%" y="261" width="0.8152%" height="15" fill="rgb(245,172,44)" fg:x="1306" fg:w="103"/><text x="10.5864%" y="271.50"></text></g><g><title>[unknown] (82 samples, 0.65%)</title><rect x="10.5026%" y="245" width="0.6490%" height="15" fill="rgb(236,23,11)" fg:x="1327" fg:w="82"/><text x="10.7526%" y="255.50"></text></g><g><title>[unknown] (69 samples, 0.55%)</title><rect x="10.6055%" y="229" width="0.5461%" height="15" fill="rgb(205,117,38)" fg:x="1340" fg:w="69"/><text x="10.8555%" y="239.50"></text></g><g><title>[unknown] (18 samples, 0.14%)</title><rect x="11.0091%" y="213" width="0.1425%" height="15" fill="rgb(237,72,25)" fg:x="1391" fg:w="18"/><text x="11.2591%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="11.1120%" y="197" width="0.0396%" height="15" fill="rgb(244,70,9)" fg:x="1404" fg:w="5"/><text x="11.3620%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="11.1120%" y="181" width="0.0396%" height="15" fill="rgb(217,125,39)" fg:x="1404" fg:w="5"/><text x="11.3620%" y="191.50"></text></g><g><title>_start (997 samples, 7.89%)</title><rect x="3.2687%" y="613" width="7.8908%" height="15" fill="rgb(235,36,10)" fg:x="413" fg:w="997"/><text x="3.5187%" y="623.50">_start</text></g><g><title>__libc_start_main (997 samples, 7.89%)</title><rect x="3.2687%" y="597" width="7.8908%" height="15" fill="rgb(251,123,47)" fg:x="413" fg:w="997"/><text x="3.5187%" y="607.50">__libc_star..</text></g><g><title>[libc.so.6] (997 samples, 7.89%)</title><rect x="3.2687%" y="581" width="7.8908%" height="15" fill="rgb(221,13,13)" fg:x="413" fg:w="997"/><text x="3.5187%" y="591.50">[libc.so.6]</text></g><g><title>[BitwigPluginHost-X64-SSE41] (997 samples, 7.89%)</title><rect x="3.2687%" y="565" width="7.8908%" height="15" fill="rgb(238,131,9)" fg:x="413" fg:w="997"/><text x="3.5187%" y="575.50">[BitwigPlug..</text></g><g><title>[BitwigPluginHost-X64-SSE41] (997 samples, 7.89%)</title><rect x="3.2687%" y="549" width="7.8908%" height="15" fill="rgb(211,50,8)" fg:x="413" fg:w="997"/><text x="3.5187%" y="559.50">[BitwigPlug..</text></g><g><title>BitwigPluginHos (1,414 samples, 11.19%)</title><rect x="0.0000%" y="629" width="11.1911%" height="15" fill="rgb(245,182,24)" fg:x="0" fg:w="1414"/><text x="0.2500%" y="639.50">BitwigPluginHos</text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="11.1674%" y="613" width="0.0237%" height="15" fill="rgb(242,14,37)" fg:x="1411" fg:w="3"/><text x="11.4174%" y="623.50"></text></g><g><title>core::sync::atomic::fence (3 samples, 0.02%)</title><rect x="11.1674%" y="597" width="0.0237%" height="15" fill="rgb(246,228,12)" fg:x="1411" fg:w="3"/><text x="11.4174%" y="607.50"></text></g><g><title>clip::dsp::var_hard_clip_simd_4 (2 samples, 0.02%)</title><rect x="11.2070%" y="581" width="0.0158%" height="15" fill="rgb(213,55,15)" fg:x="1416" fg:w="2"/><text x="11.4570%" y="591.50"></text></g><g><title>&lt;clip::processors::MainDistortionProcessor as clip::dsp::MonoProcessor&gt;::process_simd_4 (7 samples, 0.06%)</title><rect x="11.1991%" y="597" width="0.0554%" height="15" fill="rgb(209,9,3)" fg:x="1415" fg:w="7"/><text x="11.4491%" y="607.50"></text></g><g><title>clip::processors::MainDistortionProcessor::post_gain (4 samples, 0.03%)</title><rect x="11.2228%" y="581" width="0.0317%" height="15" fill="rgb(230,59,30)" fg:x="1418" fg:w="4"/><text x="11.4728%" y="591.50"></text></g><g><title>clip::processors::MainDistortionProcessor::drive_compensation (4 samples, 0.03%)</title><rect x="11.2228%" y="565" width="0.0317%" height="15" fill="rgb(209,121,21)" fg:x="1418" fg:w="4"/><text x="11.4728%" y="575.50"></text></g><g><title>clip::dsp::var_hard_clip (4 samples, 0.03%)</title><rect x="11.2228%" y="549" width="0.0317%" height="15" fill="rgb(220,109,13)" fg:x="1418" fg:w="4"/><text x="11.4728%" y="559.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (9 samples, 0.07%)</title><rect x="11.1911%" y="613" width="0.0712%" height="15" fill="rgb(232,18,1)" fg:x="1414" fg:w="9"/><text x="11.4411%" y="623.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (5 samples, 0.04%)</title><rect x="11.2703%" y="613" width="0.0396%" height="15" fill="rgb(215,41,42)" fg:x="1424" fg:w="5"/><text x="11.5203%" y="623.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as clip::math_utils::Lerpable&gt;::lerp (4 samples, 0.03%)</title><rect x="11.8006%" y="565" width="0.0317%" height="15" fill="rgb(224,123,36)" fg:x="1491" fg:w="4"/><text x="12.0506%" y="575.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (4 samples, 0.03%)</title><rect x="11.8006%" y="549" width="0.0317%" height="15" fill="rgb(240,125,3)" fg:x="1491" fg:w="4"/><text x="12.0506%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (4 samples, 0.03%)</title><rect x="11.8006%" y="533" width="0.0317%" height="15" fill="rgb(205,98,50)" fg:x="1491" fg:w="4"/><text x="12.0506%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (4 samples, 0.03%)</title><rect x="11.8006%" y="517" width="0.0317%" height="15" fill="rgb(205,185,37)" fg:x="1491" fg:w="4"/><text x="12.0506%" y="527.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (7 samples, 0.06%)</title><rect x="11.8955%" y="549" width="0.0554%" height="15" fill="rgb(238,207,15)" fg:x="1503" fg:w="7"/><text x="12.1455%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (7 samples, 0.06%)</title><rect x="11.8955%" y="533" width="0.0554%" height="15" fill="rgb(213,199,42)" fg:x="1503" fg:w="7"/><text x="12.1455%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (7 samples, 0.06%)</title><rect x="11.8955%" y="517" width="0.0554%" height="15" fill="rgb(235,201,11)" fg:x="1503" fg:w="7"/><text x="12.1455%" y="527.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Div&gt;::div (9 samples, 0.07%)</title><rect x="11.9509%" y="549" width="0.0712%" height="15" fill="rgb(207,46,11)" fg:x="1510" fg:w="9"/><text x="12.2009%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::div_m128 (9 samples, 0.07%)</title><rect x="11.9509%" y="533" width="0.0712%" height="15" fill="rgb(241,35,35)" fg:x="1510" fg:w="9"/><text x="12.2009%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_div_ps (9 samples, 0.07%)</title><rect x="11.9509%" y="517" width="0.0712%" height="15" fill="rgb(243,32,47)" fg:x="1510" fg:w="9"/><text x="12.2009%" y="527.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (6 samples, 0.05%)</title><rect x="12.0222%" y="549" width="0.0475%" height="15" fill="rgb(247,202,23)" fg:x="1519" fg:w="6"/><text x="12.2722%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (6 samples, 0.05%)</title><rect x="12.0222%" y="533" width="0.0475%" height="15" fill="rgb(219,102,11)" fg:x="1519" fg:w="6"/><text x="12.2722%" y="543.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (6 samples, 0.05%)</title><rect x="12.0222%" y="517" width="0.0475%" height="15" fill="rgb(243,110,44)" fg:x="1519" fg:w="6"/><text x="12.2722%" y="527.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (6 samples, 0.05%)</title><rect x="12.0222%" y="501" width="0.0475%" height="15" fill="rgb(222,74,54)" fg:x="1519" fg:w="6"/><text x="12.2722%" y="511.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::min (2 samples, 0.02%)</title><rect x="12.0696%" y="549" width="0.0158%" height="15" fill="rgb(216,99,12)" fg:x="1525" fg:w="2"/><text x="12.3196%" y="559.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (5 samples, 0.04%)</title><rect x="12.0855%" y="549" width="0.0396%" height="15" fill="rgb(226,22,26)" fg:x="1527" fg:w="5"/><text x="12.3355%" y="559.50"></text></g><g><title>wide::f32x4_::f32x4::fast_max (12 samples, 0.09%)</title><rect x="12.1250%" y="549" width="0.0950%" height="15" fill="rgb(217,163,10)" fg:x="1532" fg:w="12"/><text x="12.3750%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::max_m128 (12 samples, 0.09%)</title><rect x="12.1250%" y="533" width="0.0950%" height="15" fill="rgb(213,25,53)" fg:x="1532" fg:w="12"/><text x="12.3750%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_max_ps (12 samples, 0.09%)</title><rect x="12.1250%" y="517" width="0.0950%" height="15" fill="rgb(252,105,26)" fg:x="1532" fg:w="12"/><text x="12.3750%" y="527.50"></text></g><g><title>wide::f32x4_::f32x4::fast_min (4 samples, 0.03%)</title><rect x="12.2200%" y="549" width="0.0317%" height="15" fill="rgb(220,39,43)" fg:x="1544" fg:w="4"/><text x="12.4700%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::min_m128 (4 samples, 0.03%)</title><rect x="12.2200%" y="533" width="0.0317%" height="15" fill="rgb(229,68,48)" fg:x="1544" fg:w="4"/><text x="12.4700%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_min_ps (4 samples, 0.03%)</title><rect x="12.2200%" y="517" width="0.0317%" height="15" fill="rgb(252,8,32)" fg:x="1544" fg:w="4"/><text x="12.4700%" y="527.50"></text></g><g><title>clip::dsp::var_hard_clip_simd_4 (66 samples, 0.52%)</title><rect x="11.8322%" y="565" width="0.5224%" height="15" fill="rgb(223,20,43)" fg:x="1495" fg:w="66"/><text x="12.0822%" y="575.50"></text></g><g><title>wide::f32x4_::f32x4::powf (13 samples, 0.10%)</title><rect x="12.2517%" y="549" width="0.1029%" height="15" fill="rgb(229,81,49)" fg:x="1548" fg:w="13"/><text x="12.5017%" y="559.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::clamp (15 samples, 0.12%)</title><rect x="12.6870%" y="517" width="0.1187%" height="15" fill="rgb(236,28,36)" fg:x="1603" fg:w="15"/><text x="12.9370%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (3 samples, 0.02%)</title><rect x="12.8057%" y="517" width="0.0237%" height="15" fill="rgb(249,185,26)" fg:x="1618" fg:w="3"/><text x="13.0557%" y="527.50"></text></g><g><title>clip::dsp::var_hard_clip (63 samples, 0.50%)</title><rect x="12.4100%" y="533" width="0.4986%" height="15" fill="rgb(249,174,33)" fg:x="1568" fg:w="63"/><text x="12.6600%" y="543.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (10 samples, 0.08%)</title><rect x="12.8294%" y="517" width="0.0791%" height="15" fill="rgb(233,201,37)" fg:x="1621" fg:w="10"/><text x="13.0794%" y="527.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (14 samples, 0.11%)</title><rect x="12.9086%" y="533" width="0.1108%" height="15" fill="rgb(221,78,26)" fg:x="1631" fg:w="14"/><text x="13.1586%" y="543.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (8 samples, 0.06%)</title><rect x="13.0194%" y="533" width="0.0633%" height="15" fill="rgb(250,127,30)" fg:x="1645" fg:w="8"/><text x="13.2694%" y="543.50"></text></g><g><title>clip::processors::MainDistortionProcessor::post_gain (95 samples, 0.75%)</title><rect x="12.3546%" y="565" width="0.7519%" height="15" fill="rgb(230,49,44)" fg:x="1561" fg:w="95"/><text x="12.6046%" y="575.50"></text></g><g><title>clip::processors::MainDistortionProcessor::drive_compensation (91 samples, 0.72%)</title><rect x="12.3862%" y="549" width="0.7202%" height="15" fill="rgb(229,67,23)" fg:x="1565" fg:w="91"/><text x="12.6362%" y="559.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (3 samples, 0.02%)</title><rect x="13.0827%" y="533" width="0.0237%" height="15" fill="rgb(249,83,47)" fg:x="1653" fg:w="3"/><text x="13.3327%" y="543.50"></text></g><g><title>clip::processors::MainDistortionProcessor::pre_gain (6 samples, 0.05%)</title><rect x="13.1065%" y="565" width="0.0475%" height="15" fill="rgb(215,43,3)" fg:x="1656" fg:w="6"/><text x="13.3565%" y="575.50"></text></g><g><title>&lt;clip::processors::MainDistortionProcessor as clip::dsp::MonoProcessor&gt;::process_simd_4 (181 samples, 1.43%)</title><rect x="11.7452%" y="581" width="1.4325%" height="15" fill="rgb(238,154,13)" fg:x="1484" fg:w="181"/><text x="11.9952%" y="591.50"></text></g><g><title>wide::f32x4_::&lt;impl core::ops::arith::Mul&lt;wide::f32x4_::f32x4&gt; for f32&gt;::mul (3 samples, 0.02%)</title><rect x="13.1539%" y="565" width="0.0237%" height="15" fill="rgb(219,56,2)" fg:x="1662" fg:w="3"/><text x="13.4039%" y="575.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (3 samples, 0.02%)</title><rect x="13.1539%" y="549" width="0.0237%" height="15" fill="rgb(233,0,4)" fg:x="1662" fg:w="3"/><text x="13.4039%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (3 samples, 0.02%)</title><rect x="13.1539%" y="533" width="0.0237%" height="15" fill="rgb(235,30,7)" fg:x="1662" fg:w="3"/><text x="13.4039%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (3 samples, 0.02%)</title><rect x="13.1539%" y="517" width="0.0237%" height="15" fill="rgb(250,79,13)" fg:x="1662" fg:w="3"/><text x="13.4039%" y="527.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (26 samples, 0.21%)</title><rect x="22.8255%" y="565" width="0.2058%" height="15" fill="rgb(211,146,34)" fg:x="2884" fg:w="26"/><text x="23.0755%" y="575.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_2x (1,447 samples, 11.45%)</title><rect x="13.1777%" y="581" width="11.4523%" height="15" fill="rgb(228,22,38)" fg:x="1665" fg:w="1447"/><text x="13.4277%" y="591.50">clip::dsp::Oversa..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (202 samples, 1.60%)</title><rect x="23.0313%" y="565" width="1.5987%" height="15" fill="rgb(235,168,5)" fg:x="2910" fg:w="202"/><text x="23.2813%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (202 samples, 1.60%)</title><rect x="23.0313%" y="549" width="1.5987%" height="15" fill="rgb(221,155,16)" fg:x="2910" fg:w="202"/><text x="23.2813%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (159 samples, 1.26%)</title><rect x="23.3716%" y="533" width="1.2584%" height="15" fill="rgb(215,215,53)" fg:x="2953" fg:w="159"/><text x="23.6216%" y="543.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (6 samples, 0.05%)</title><rect x="27.5030%" y="565" width="0.0475%" height="15" fill="rgb(223,4,10)" fg:x="3475" fg:w="6"/><text x="27.7530%" y="575.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (315 samples, 2.49%)</title><rect x="27.5505%" y="565" width="2.4931%" height="15" fill="rgb(234,103,6)" fg:x="3481" fg:w="315"/><text x="27.8005%" y="575.50">cl..</text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_2x (757 samples, 5.99%)</title><rect x="24.6300%" y="581" width="5.9913%" height="15" fill="rgb(227,97,0)" fg:x="3112" fg:w="757"/><text x="24.8800%" y="591.50">clip::ds..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (73 samples, 0.58%)</title><rect x="30.0435%" y="565" width="0.5778%" height="15" fill="rgb(234,150,53)" fg:x="3796" fg:w="73"/><text x="30.2935%" y="575.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (73 samples, 0.58%)</title><rect x="30.0435%" y="549" width="0.5778%" height="15" fill="rgb(228,201,54)" fg:x="3796" fg:w="73"/><text x="30.2935%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (47 samples, 0.37%)</title><rect x="30.2493%" y="533" width="0.3720%" height="15" fill="rgb(222,22,37)" fg:x="3822" fg:w="47"/><text x="30.4993%" y="543.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (2,442 samples, 19.33%)</title><rect x="11.3178%" y="597" width="19.3273%" height="15" fill="rgb(237,53,32)" fg:x="1430" fg:w="2442"/><text x="11.5678%" y="607.50">&lt;clip::dsp::OversampleX4&lt;P&gt; as..</text></g><g><title>wide::f32x4_::f32x4::new (3 samples, 0.02%)</title><rect x="30.6213%" y="581" width="0.0237%" height="15" fill="rgb(233,25,53)" fg:x="3869" fg:w="3"/><text x="30.8713%" y="591.50"></text></g><g><title>wide::&lt;impl core::convert::From&lt;[f32: 4]&gt; for wide::f32x4_::f32x4&gt;::from (3 samples, 0.02%)</title><rect x="30.6213%" y="565" width="0.0237%" height="15" fill="rgb(210,40,34)" fg:x="3869" fg:w="3"/><text x="30.8713%" y="575.50"></text></g><g><title>bytemuck::cast (3 samples, 0.02%)</title><rect x="30.6213%" y="549" width="0.0237%" height="15" fill="rgb(241,220,44)" fg:x="3869" fg:w="3"/><text x="30.8713%" y="559.50"></text></g><g><title>bytemuck::internal::cast (3 samples, 0.02%)</title><rect x="30.6213%" y="533" width="0.0237%" height="15" fill="rgb(235,28,35)" fg:x="3869" fg:w="3"/><text x="30.8713%" y="543.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="30.6213%" y="517" width="0.0237%" height="15" fill="rgb(210,56,17)" fg:x="3869" fg:w="3"/><text x="30.8713%" y="527.50"></text></g><g><title>&lt;nih_plug::wrapper::util::ScopedFtz as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.6529%" y="597" width="0.0158%" height="15" fill="rgb(224,130,29)" fg:x="3873" fg:w="2"/><text x="30.9029%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (20 samples, 0.16%)</title><rect x="30.6688%" y="597" width="0.1583%" height="15" fill="rgb(235,212,8)" fg:x="3875" fg:w="20"/><text x="30.9188%" y="607.50"></text></g><g><title>[libc.so.6] (6 samples, 0.05%)</title><rect x="30.8271%" y="597" width="0.0475%" height="15" fill="rgb(223,33,50)" fg:x="3895" fg:w="6"/><text x="31.0771%" y="607.50"></text></g><g><title>[libm.so.6] (6 samples, 0.05%)</title><rect x="30.8746%" y="597" width="0.0475%" height="15" fill="rgb(219,149,13)" fg:x="3901" fg:w="6"/><text x="31.1246%" y="607.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (2 samples, 0.02%)</title><rect x="30.9379%" y="597" width="0.0158%" height="15" fill="rgb(250,156,29)" fg:x="3909" fg:w="2"/><text x="31.1879%" y="607.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (2 samples, 0.02%)</title><rect x="30.9379%" y="581" width="0.0158%" height="15" fill="rgb(216,193,19)" fg:x="3909" fg:w="2"/><text x="31.1879%" y="591.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (8 samples, 0.06%)</title><rect x="30.9695%" y="597" width="0.0633%" height="15" fill="rgb(216,135,14)" fg:x="3913" fg:w="8"/><text x="31.2195%" y="607.50"></text></g><g><title>core::sync::atomic::fence (5 samples, 0.04%)</title><rect x="30.9933%" y="581" width="0.0396%" height="15" fill="rgb(241,47,5)" fg:x="3916" fg:w="5"/><text x="31.2433%" y="591.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="31.0408%" y="597" width="0.0158%" height="15" fill="rgb(233,42,35)" fg:x="3922" fg:w="2"/><text x="31.2908%" y="607.50"></text></g><g><title>nih_plug::params::internals::ParamPtr::modulate_value (2 samples, 0.02%)</title><rect x="31.0566%" y="597" width="0.0158%" height="15" fill="rgb(231,13,6)" fg:x="3924" fg:w="2"/><text x="31.3066%" y="607.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::num_steps (2 samples, 0.02%)</title><rect x="31.1041%" y="581" width="0.0158%" height="15" fill="rgb(207,181,40)" fg:x="3930" fg:w="2"/><text x="31.3541%" y="591.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::set_target (7 samples, 0.06%)</title><rect x="31.0803%" y="597" width="0.0554%" height="15" fill="rgb(254,173,49)" fg:x="3927" fg:w="7"/><text x="31.3303%" y="607.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::step_size (2 samples, 0.02%)</title><rect x="31.1199%" y="581" width="0.0158%" height="15" fill="rgb(221,1,38)" fg:x="3932" fg:w="2"/><text x="31.3699%" y="591.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_event (3 samples, 0.02%)</title><rect x="31.1357%" y="597" width="0.0237%" height="15" fill="rgb(206,124,46)" fg:x="3934" fg:w="3"/><text x="31.3857%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_events_until (3 samples, 0.02%)</title><rect x="31.1595%" y="597" width="0.0237%" height="15" fill="rgb(249,21,11)" fg:x="3937" fg:w="3"/><text x="31.4095%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::update_plain_value_by_hash (4 samples, 0.03%)</title><rect x="31.1832%" y="597" width="0.0317%" height="15" fill="rgb(222,201,40)" fg:x="3940" fg:w="4"/><text x="31.4332%" y="607.50"></text></g><g><title>nih_plug::wrapper::util::process_wrapper (3 samples, 0.02%)</title><rect x="31.2228%" y="597" width="0.0237%" height="15" fill="rgb(235,61,29)" fg:x="3945" fg:w="3"/><text x="31.4728%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}} (3 samples, 0.02%)</title><rect x="31.2228%" y="581" width="0.0237%" height="15" fill="rgb(219,207,3)" fg:x="3945" fg:w="3"/><text x="31.4728%" y="591.50"></text></g><g><title>operator new (3 samples, 0.02%)</title><rect x="31.2465%" y="597" width="0.0237%" height="15" fill="rgb(222,56,46)" fg:x="3948" fg:w="3"/><text x="31.4965%" y="607.50"></text></g><g><title>pow (3 samples, 0.02%)</title><rect x="31.2703%" y="597" width="0.0237%" height="15" fill="rgb(239,76,54)" fg:x="3951" fg:w="3"/><text x="31.5203%" y="607.50"></text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (5 samples, 0.04%)</title><rect x="31.3019%" y="597" width="0.0396%" height="15" fill="rgb(231,124,27)" fg:x="3955" fg:w="5"/><text x="31.5519%" y="607.50"></text></g><g><title>[[heap]] (2,533 samples, 20.05%)</title><rect x="11.3099%" y="613" width="20.0475%" height="15" fill="rgb(249,195,6)" fg:x="1429" fg:w="2533"/><text x="11.5599%" y="623.50">[[heap]]</text></g><g><title>write (2 samples, 0.02%)</title><rect x="31.3415%" y="597" width="0.0158%" height="15" fill="rgb(237,174,47)" fg:x="3960" fg:w="2"/><text x="31.5915%" y="607.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (11 samples, 0.09%)</title><rect x="31.3653%" y="597" width="0.0871%" height="15" fill="rgb(206,201,31)" fg:x="3963" fg:w="11"/><text x="31.6153%" y="607.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_2x (3 samples, 0.02%)</title><rect x="31.4286%" y="581" width="0.0237%" height="15" fill="rgb(231,57,52)" fg:x="3971" fg:w="3"/><text x="31.6786%" y="591.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (4 samples, 0.03%)</title><rect x="31.4523%" y="597" width="0.0317%" height="15" fill="rgb(248,177,22)" fg:x="3974" fg:w="4"/><text x="31.7023%" y="607.50"></text></g><g><title>[libc.so.6] (3 samples, 0.02%)</title><rect x="31.4840%" y="597" width="0.0237%" height="15" fill="rgb(215,211,37)" fg:x="3978" fg:w="3"/><text x="31.7340%" y="607.50"></text></g><g><title>[libm.so.6] (339 samples, 2.68%)</title><rect x="31.5077%" y="597" width="2.6830%" height="15" fill="rgb(241,128,51)" fg:x="3981" fg:w="339"/><text x="31.7577%" y="607.50">[l..</text></g><g><title>clip::Clip::audio_update (6 samples, 0.05%)</title><rect x="34.1907%" y="597" width="0.0475%" height="15" fill="rgb(227,165,31)" fg:x="4320" fg:w="6"/><text x="34.4407%" y="607.50"></text></g><g><title>&lt;nih_plug::buffer::samples::ChannelSamples as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.03%)</title><rect x="34.2066%" y="581" width="0.0317%" height="15" fill="rgb(228,167,24)" fg:x="4322" fg:w="4"/><text x="34.4566%" y="591.50"></text></g><g><title>&lt;f32 as nih_plug::params::smoothing::Smoothable&gt;::atomic_load (2 samples, 0.02%)</title><rect x="34.3174%" y="565" width="0.0158%" height="15" fill="rgb(228,143,12)" fg:x="4336" fg:w="2"/><text x="34.5674%" y="575.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (2 samples, 0.02%)</title><rect x="34.3174%" y="549" width="0.0158%" height="15" fill="rgb(249,149,8)" fg:x="4336" fg:w="2"/><text x="34.5674%" y="559.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (2 samples, 0.02%)</title><rect x="34.3174%" y="533" width="0.0158%" height="15" fill="rgb(243,35,44)" fg:x="4336" fg:w="2"/><text x="34.5674%" y="543.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (2 samples, 0.02%)</title><rect x="34.3174%" y="517" width="0.0158%" height="15" fill="rgb(246,89,9)" fg:x="4336" fg:w="2"/><text x="34.5674%" y="527.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (3 samples, 0.02%)</title><rect x="34.3332%" y="549" width="0.0237%" height="15" fill="rgb(233,213,13)" fg:x="4338" fg:w="3"/><text x="34.5832%" y="559.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (3 samples, 0.02%)</title><rect x="34.3332%" y="533" width="0.0237%" height="15" fill="rgb(233,141,41)" fg:x="4338" fg:w="3"/><text x="34.5832%" y="543.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (6 samples, 0.05%)</title><rect x="34.3332%" y="565" width="0.0475%" height="15" fill="rgb(239,167,4)" fg:x="4338" fg:w="6"/><text x="34.5832%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (3 samples, 0.02%)</title><rect x="34.3569%" y="549" width="0.0237%" height="15" fill="rgb(209,217,16)" fg:x="4341" fg:w="3"/><text x="34.6069%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="34.3569%" y="533" width="0.0237%" height="15" fill="rgb(219,88,35)" fg:x="4341" fg:w="3"/><text x="34.6069%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (2 samples, 0.02%)</title><rect x="34.3886%" y="565" width="0.0158%" height="15" fill="rgb(220,193,23)" fg:x="4345" fg:w="2"/><text x="34.6386%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="34.3886%" y="549" width="0.0158%" height="15" fill="rgb(230,90,52)" fg:x="4345" fg:w="2"/><text x="34.6386%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (2 samples, 0.02%)</title><rect x="34.4044%" y="565" width="0.0158%" height="15" fill="rgb(252,106,19)" fg:x="4347" fg:w="2"/><text x="34.6544%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="34.4044%" y="549" width="0.0158%" height="15" fill="rgb(206,74,20)" fg:x="4347" fg:w="2"/><text x="34.6544%" y="559.50"></text></g><g><title>clip::Clip::param_update (35 samples, 0.28%)</title><rect x="34.2382%" y="597" width="0.2770%" height="15" fill="rgb(230,138,44)" fg:x="4326" fg:w="35"/><text x="34.4882%" y="607.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (26 samples, 0.21%)</title><rect x="34.3095%" y="581" width="0.2058%" height="15" fill="rgb(235,182,43)" fg:x="4335" fg:w="26"/><text x="34.5595%" y="591.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::next (12 samples, 0.09%)</title><rect x="34.4203%" y="565" width="0.0950%" height="15" fill="rgb(242,16,51)" fg:x="4349" fg:w="12"/><text x="34.6703%" y="575.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (33 samples, 0.26%)</title><rect x="35.0297%" y="581" width="0.2612%" height="15" fill="rgb(248,9,4)" fg:x="4426" fg:w="33"/><text x="35.2797%" y="591.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (790 samples, 6.25%)</title><rect x="34.5152%" y="597" width="6.2525%" height="15" fill="rgb(210,31,22)" fg:x="4361" fg:w="790"/><text x="34.7652%" y="607.50">clip::ds..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (692 samples, 5.48%)</title><rect x="35.2909%" y="581" width="5.4769%" height="15" fill="rgb(239,54,39)" fg:x="4459" fg:w="692"/><text x="35.5409%" y="591.50">clip::d..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (25 samples, 0.20%)</title><rect x="42.6197%" y="581" width="0.1979%" height="15" fill="rgb(230,99,41)" fg:x="5385" fg:w="25"/><text x="42.8697%" y="591.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (441 samples, 3.49%)</title><rect x="40.7677%" y="597" width="3.4903%" height="15" fill="rgb(253,106,12)" fg:x="5151" fg:w="441"/><text x="41.0177%" y="607.50">cli..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (182 samples, 1.44%)</title><rect x="42.8176%" y="581" width="1.4404%" height="15" fill="rgb(213,46,41)" fg:x="5410" fg:w="182"/><text x="43.0676%" y="591.50"></text></g><g><title>nih_plug::context::process::Transport::bar_number (2 samples, 0.02%)</title><rect x="44.2738%" y="597" width="0.0158%" height="15" fill="rgb(215,133,35)" fg:x="5594" fg:w="2"/><text x="44.5238%" y="607.50"></text></g><g><title>nih_plug::params::internals::ParamPtr::step_count (2 samples, 0.02%)</title><rect x="44.2976%" y="597" width="0.0158%" height="15" fill="rgb(213,28,5)" fg:x="5597" fg:w="2"/><text x="44.5476%" y="607.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (47 samples, 0.37%)</title><rect x="44.8912%" y="581" width="0.3720%" height="15" fill="rgb(215,77,49)" fg:x="5672" fg:w="47"/><text x="45.1412%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (47 samples, 0.37%)</title><rect x="44.8912%" y="565" width="0.3720%" height="15" fill="rgb(248,100,22)" fg:x="5672" fg:w="47"/><text x="45.1412%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (47 samples, 0.37%)</title><rect x="44.8912%" y="549" width="0.3720%" height="15" fill="rgb(208,67,9)" fg:x="5672" fg:w="47"/><text x="45.1412%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (97 samples, 0.77%)</title><rect x="45.2632%" y="581" width="0.7677%" height="15" fill="rgb(219,133,21)" fg:x="5719" fg:w="97"/><text x="45.5132%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (81 samples, 0.64%)</title><rect x="45.3898%" y="565" width="0.6411%" height="15" fill="rgb(246,46,29)" fg:x="5735" fg:w="81"/><text x="45.6398%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (81 samples, 0.64%)</title><rect x="45.3898%" y="549" width="0.6411%" height="15" fill="rgb(246,185,52)" fg:x="5735" fg:w="81"/><text x="45.6398%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (49 samples, 0.39%)</title><rect x="46.0309%" y="581" width="0.3878%" height="15" fill="rgb(252,136,11)" fg:x="5816" fg:w="49"/><text x="46.2809%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (49 samples, 0.39%)</title><rect x="46.0309%" y="565" width="0.3878%" height="15" fill="rgb(219,138,53)" fg:x="5816" fg:w="49"/><text x="46.2809%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (49 samples, 0.39%)</title><rect x="46.0309%" y="549" width="0.3878%" height="15" fill="rgb(211,51,23)" fg:x="5816" fg:w="49"/><text x="46.2809%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitOr&gt;::bitor (28 samples, 0.22%)</title><rect x="46.4187%" y="581" width="0.2216%" height="15" fill="rgb(247,221,28)" fg:x="5865" fg:w="28"/><text x="46.6687%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::bitor_m128 (28 samples, 0.22%)</title><rect x="46.4187%" y="565" width="0.2216%" height="15" fill="rgb(251,222,45)" fg:x="5865" fg:w="28"/><text x="46.6687%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_or_ps (28 samples, 0.22%)</title><rect x="46.4187%" y="549" width="0.2216%" height="15" fill="rgb(217,162,53)" fg:x="5865" fg:w="28"/><text x="46.6687%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (6 samples, 0.05%)</title><rect x="46.6403%" y="581" width="0.0475%" height="15" fill="rgb(229,93,14)" fg:x="5893" fg:w="6"/><text x="46.8903%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (6 samples, 0.05%)</title><rect x="46.6403%" y="565" width="0.0475%" height="15" fill="rgb(209,67,49)" fg:x="5893" fg:w="6"/><text x="46.8903%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (6 samples, 0.05%)</title><rect x="46.6403%" y="549" width="0.0475%" height="15" fill="rgb(213,87,29)" fg:x="5893" fg:w="6"/><text x="46.8903%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpGt&gt;::cmp_gt (36 samples, 0.28%)</title><rect x="46.6878%" y="581" width="0.2849%" height="15" fill="rgb(205,151,52)" fg:x="5899" fg:w="36"/><text x="46.9378%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_gt_mask_m128 (36 samples, 0.28%)</title><rect x="46.6878%" y="565" width="0.2849%" height="15" fill="rgb(253,215,39)" fg:x="5899" fg:w="36"/><text x="46.9378%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpgt_ps (36 samples, 0.28%)</title><rect x="46.6878%" y="549" width="0.2849%" height="15" fill="rgb(221,220,41)" fg:x="5899" fg:w="36"/><text x="46.9378%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpLt&gt;::cmp_lt (67 samples, 0.53%)</title><rect x="46.9727%" y="581" width="0.5303%" height="15" fill="rgb(218,133,21)" fg:x="5935" fg:w="67"/><text x="47.2227%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_lt_mask_m128 (67 samples, 0.53%)</title><rect x="46.9727%" y="565" width="0.5303%" height="15" fill="rgb(221,193,43)" fg:x="5935" fg:w="67"/><text x="47.2227%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmplt_ps (67 samples, 0.53%)</title><rect x="46.9727%" y="549" width="0.5303%" height="15" fill="rgb(240,128,52)" fg:x="5935" fg:w="67"/><text x="47.2227%" y="559.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::arith::Add&gt;::add (16 samples, 0.13%)</title><rect x="47.5030%" y="581" width="0.1266%" height="15" fill="rgb(253,114,12)" fg:x="6002" fg:w="16"/><text x="47.7530%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse2::add_i32_m128i (16 samples, 0.13%)</title><rect x="47.5030%" y="565" width="0.1266%" height="15" fill="rgb(215,223,47)" fg:x="6002" fg:w="16"/><text x="47.7530%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (16 samples, 0.13%)</title><rect x="47.5030%" y="549" width="0.1266%" height="15" fill="rgb(248,225,23)" fg:x="6002" fg:w="16"/><text x="47.7530%" y="559.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (7 samples, 0.06%)</title><rect x="47.5742%" y="533" width="0.0554%" height="15" fill="rgb(250,108,0)" fg:x="6011" fg:w="7"/><text x="47.8242%" y="543.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (23 samples, 0.18%)</title><rect x="47.6296%" y="581" width="0.1820%" height="15" fill="rgb(228,208,7)" fg:x="6018" fg:w="23"/><text x="47.8796%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse2::shl_all_u32_m128i (23 samples, 0.18%)</title><rect x="47.6296%" y="565" width="0.1820%" height="15" fill="rgb(244,45,10)" fg:x="6018" fg:w="23"/><text x="47.8796%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sll_epi32 (23 samples, 0.18%)</title><rect x="47.6296%" y="549" width="0.1820%" height="15" fill="rgb(207,125,25)" fg:x="6018" fg:w="23"/><text x="47.8796%" y="559.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (4 samples, 0.03%)</title><rect x="47.8116%" y="581" width="0.0317%" height="15" fill="rgb(210,195,18)" fg:x="6041" fg:w="4"/><text x="48.0616%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (4 samples, 0.03%)</title><rect x="47.8116%" y="565" width="0.0317%" height="15" fill="rgb(249,80,12)" fg:x="6041" fg:w="4"/><text x="48.0616%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (4 samples, 0.03%)</title><rect x="47.8116%" y="549" width="0.0317%" height="15" fill="rgb(221,65,9)" fg:x="6041" fg:w="4"/><text x="48.0616%" y="559.50"></text></g><g><title>wide::f32x4_::f32x4::abs (2 samples, 0.02%)</title><rect x="47.8512%" y="581" width="0.0158%" height="15" fill="rgb(235,49,36)" fg:x="6046" fg:w="2"/><text x="48.1012%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (2 samples, 0.02%)</title><rect x="47.8512%" y="565" width="0.0158%" height="15" fill="rgb(225,32,20)" fg:x="6046" fg:w="2"/><text x="48.1012%" y="575.50"></text></g><g><title>wide::f32x4_::f32x4::all (7 samples, 0.06%)</title><rect x="47.8670%" y="581" width="0.0554%" height="15" fill="rgb(215,141,46)" fg:x="6048" fg:w="7"/><text x="48.1170%" y="591.50"></text></g><g><title>wide::f32x4_::f32x4::move_mask (7 samples, 0.06%)</title><rect x="47.8670%" y="565" width="0.0554%" height="15" fill="rgb(250,160,47)" fg:x="6048" fg:w="7"/><text x="48.1170%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::move_mask_m128 (7 samples, 0.06%)</title><rect x="47.8670%" y="549" width="0.0554%" height="15" fill="rgb(216,222,40)" fg:x="6048" fg:w="7"/><text x="48.1170%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_movemask_ps (7 samples, 0.06%)</title><rect x="47.8670%" y="533" width="0.0554%" height="15" fill="rgb(234,217,39)" fg:x="6048" fg:w="7"/><text x="48.1170%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (25 samples, 0.20%)</title><rect x="47.9304%" y="549" width="0.1979%" height="15" fill="rgb(207,178,40)" fg:x="6056" fg:w="25"/><text x="48.1804%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (25 samples, 0.20%)</title><rect x="47.9304%" y="533" width="0.1979%" height="15" fill="rgb(221,136,13)" fg:x="6056" fg:w="25"/><text x="48.1804%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (25 samples, 0.20%)</title><rect x="47.9304%" y="517" width="0.1979%" height="15" fill="rgb(249,199,10)" fg:x="6056" fg:w="25"/><text x="48.1804%" y="527.50"></text></g><g><title>wide::f32x4_::f32x4::blend (97 samples, 0.77%)</title><rect x="47.9304%" y="581" width="0.7677%" height="15" fill="rgb(249,222,13)" fg:x="6056" fg:w="97"/><text x="48.1804%" y="591.50"></text></g><g><title>wide::generic_bit_blend (97 samples, 0.77%)</title><rect x="47.9304%" y="565" width="0.7677%" height="15" fill="rgb(244,185,38)" fg:x="6056" fg:w="97"/><text x="48.1804%" y="575.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (72 samples, 0.57%)</title><rect x="48.1282%" y="549" width="0.5698%" height="15" fill="rgb(236,202,9)" fg:x="6081" fg:w="72"/><text x="48.3782%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (72 samples, 0.57%)</title><rect x="48.1282%" y="533" width="0.5698%" height="15" fill="rgb(250,229,37)" fg:x="6081" fg:w="72"/><text x="48.3782%" y="543.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (72 samples, 0.57%)</title><rect x="48.1282%" y="517" width="0.5698%" height="15" fill="rgb(206,174,23)" fg:x="6081" fg:w="72"/><text x="48.3782%" y="527.50"></text></g><g><title>wide::f32x4_::f32x4::exponent (31 samples, 0.25%)</title><rect x="48.6981%" y="581" width="0.2454%" height="15" fill="rgb(211,33,43)" fg:x="6153" fg:w="31"/><text x="48.9481%" y="591.50"></text></g><g><title>&lt;wide::u32x4_::u32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (31 samples, 0.25%)</title><rect x="48.6981%" y="565" width="0.2454%" height="15" fill="rgb(245,58,50)" fg:x="6153" fg:w="31"/><text x="48.9481%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_u32_m128i (31 samples, 0.25%)</title><rect x="48.6981%" y="549" width="0.2454%" height="15" fill="rgb(244,68,36)" fg:x="6153" fg:w="31"/><text x="48.9481%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srl_epi32 (31 samples, 0.25%)</title><rect x="48.6981%" y="533" width="0.2454%" height="15" fill="rgb(232,229,15)" fg:x="6153" fg:w="31"/><text x="48.9481%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::is_finite (83 samples, 0.66%)</title><rect x="48.9513%" y="581" width="0.6569%" height="15" fill="rgb(254,30,23)" fg:x="6185" fg:w="83"/><text x="49.2013%" y="591.50"></text></g><g><title>wide::u32x4_::u32x4::cmp_eq (83 samples, 0.66%)</title><rect x="48.9513%" y="565" width="0.6569%" height="15" fill="rgb(235,160,14)" fg:x="6185" fg:w="83"/><text x="49.2013%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (83 samples, 0.66%)</title><rect x="48.9513%" y="549" width="0.6569%" height="15" fill="rgb(212,155,44)" fg:x="6185" fg:w="83"/><text x="49.2013%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (83 samples, 0.66%)</title><rect x="48.9513%" y="533" width="0.6569%" height="15" fill="rgb(226,2,50)" fg:x="6185" fg:w="83"/><text x="49.2013%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::is_zero_or_subnormal (2 samples, 0.02%)</title><rect x="49.6082%" y="581" width="0.0158%" height="15" fill="rgb(234,177,6)" fg:x="6268" fg:w="2"/><text x="49.8582%" y="591.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as wide::CmpEq&gt;::cmp_eq (2 samples, 0.02%)</title><rect x="49.6082%" y="565" width="0.0158%" height="15" fill="rgb(217,24,9)" fg:x="6268" fg:w="2"/><text x="49.8582%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (2 samples, 0.02%)</title><rect x="49.6082%" y="549" width="0.0158%" height="15" fill="rgb(220,13,46)" fg:x="6268" fg:w="2"/><text x="49.8582%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (2 samples, 0.02%)</title><rect x="49.6082%" y="533" width="0.0158%" height="15" fill="rgb(239,221,27)" fg:x="6268" fg:w="2"/><text x="49.8582%" y="543.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (2 samples, 0.02%)</title><rect x="49.6082%" y="517" width="0.0158%" height="15" fill="rgb(222,198,25)" fg:x="6268" fg:w="2"/><text x="49.8582%" y="527.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (61 samples, 0.48%)</title><rect x="49.6241%" y="565" width="0.4828%" height="15" fill="rgb(211,99,13)" fg:x="6270" fg:w="61"/><text x="49.8741%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (61 samples, 0.48%)</title><rect x="49.6241%" y="549" width="0.4828%" height="15" fill="rgb(232,111,31)" fg:x="6270" fg:w="61"/><text x="49.8741%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (61 samples, 0.48%)</title><rect x="49.6241%" y="533" width="0.4828%" height="15" fill="rgb(245,82,37)" fg:x="6270" fg:w="61"/><text x="49.8741%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::mul_add (174 samples, 1.38%)</title><rect x="49.6241%" y="581" width="1.3771%" height="15" fill="rgb(227,149,46)" fg:x="6270" fg:w="174"/><text x="49.8741%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (113 samples, 0.89%)</title><rect x="50.1068%" y="565" width="0.8943%" height="15" fill="rgb(218,36,50)" fg:x="6331" fg:w="113"/><text x="50.3568%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (113 samples, 0.89%)</title><rect x="50.1068%" y="549" width="0.8943%" height="15" fill="rgb(226,80,48)" fg:x="6331" fg:w="113"/><text x="50.3568%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (113 samples, 0.89%)</title><rect x="50.1068%" y="533" width="0.8943%" height="15" fill="rgb(238,224,15)" fg:x="6331" fg:w="113"/><text x="50.3568%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (47 samples, 0.37%)</title><rect x="51.0012%" y="565" width="0.3720%" height="15" fill="rgb(241,136,10)" fg:x="6444" fg:w="47"/><text x="51.2512%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (47 samples, 0.37%)</title><rect x="51.0012%" y="549" width="0.3720%" height="15" fill="rgb(208,32,45)" fg:x="6444" fg:w="47"/><text x="51.2512%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (47 samples, 0.37%)</title><rect x="51.0012%" y="533" width="0.3720%" height="15" fill="rgb(207,135,9)" fg:x="6444" fg:w="47"/><text x="51.2512%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::mul_neg_add (90 samples, 0.71%)</title><rect x="51.0012%" y="581" width="0.7123%" height="15" fill="rgb(206,86,44)" fg:x="6444" fg:w="90"/><text x="51.2512%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (43 samples, 0.34%)</title><rect x="51.3732%" y="565" width="0.3403%" height="15" fill="rgb(245,177,15)" fg:x="6491" fg:w="43"/><text x="51.6232%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (43 samples, 0.34%)</title><rect x="51.3732%" y="549" width="0.3403%" height="15" fill="rgb(206,64,50)" fg:x="6491" fg:w="43"/><text x="51.6232%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (43 samples, 0.34%)</title><rect x="51.3732%" y="533" width="0.3403%" height="15" fill="rgb(234,36,40)" fg:x="6491" fg:w="43"/><text x="51.6232%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (27 samples, 0.21%)</title><rect x="51.7135%" y="565" width="0.2137%" height="15" fill="rgb(213,64,8)" fg:x="6534" fg:w="27"/><text x="51.9635%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (27 samples, 0.21%)</title><rect x="51.7135%" y="549" width="0.2137%" height="15" fill="rgb(210,75,36)" fg:x="6534" fg:w="27"/><text x="51.9635%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (27 samples, 0.21%)</title><rect x="51.7135%" y="533" width="0.2137%" height="15" fill="rgb(229,88,21)" fg:x="6534" fg:w="27"/><text x="51.9635%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::mul_sub (50 samples, 0.40%)</title><rect x="51.7135%" y="581" width="0.3957%" height="15" fill="rgb(252,204,47)" fg:x="6534" fg:w="50"/><text x="51.9635%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (23 samples, 0.18%)</title><rect x="51.9272%" y="565" width="0.1820%" height="15" fill="rgb(208,77,27)" fg:x="6561" fg:w="23"/><text x="52.1772%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (23 samples, 0.18%)</title><rect x="51.9272%" y="549" width="0.1820%" height="15" fill="rgb(221,76,26)" fg:x="6561" fg:w="23"/><text x="52.1772%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (23 samples, 0.18%)</title><rect x="51.9272%" y="533" width="0.1820%" height="15" fill="rgb(225,139,18)" fg:x="6561" fg:w="23"/><text x="52.1772%" y="543.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as wide::CmpEq&gt;::cmp_eq (16 samples, 0.13%)</title><rect x="52.1092%" y="565" width="0.1266%" height="15" fill="rgb(230,137,11)" fg:x="6584" fg:w="16"/><text x="52.3592%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (16 samples, 0.13%)</title><rect x="52.1092%" y="549" width="0.1266%" height="15" fill="rgb(212,28,1)" fg:x="6584" fg:w="16"/><text x="52.3592%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (16 samples, 0.13%)</title><rect x="52.1092%" y="533" width="0.1266%" height="15" fill="rgb(248,164,17)" fg:x="6584" fg:w="16"/><text x="52.3592%" y="543.50"></text></g><g><title>safe_arch::x86_x64::sse2::convert_to_i32_m128i_from_m128 (3 samples, 0.02%)</title><rect x="52.2359%" y="565" width="0.0237%" height="15" fill="rgb(222,171,42)" fg:x="6600" fg:w="3"/><text x="52.4859%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cvtps_epi32 (3 samples, 0.02%)</title><rect x="52.2359%" y="549" width="0.0237%" height="15" fill="rgb(243,84,45)" fg:x="6600" fg:w="3"/><text x="52.4859%" y="559.50"></text></g><g><title>safe_arch::x86_x64::sse2::convert_to_m128_from_i32_m128i (31 samples, 0.25%)</title><rect x="52.2596%" y="565" width="0.2454%" height="15" fill="rgb(252,49,23)" fg:x="6603" fg:w="31"/><text x="52.5096%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cvtepi32_ps (31 samples, 0.25%)</title><rect x="52.2596%" y="549" width="0.2454%" height="15" fill="rgb(215,19,7)" fg:x="6603" fg:w="31"/><text x="52.5096%" y="559.50"></text></g><g><title>wide::f32x4_::f32x4::round (105 samples, 0.83%)</title><rect x="52.1092%" y="581" width="0.8310%" height="15" fill="rgb(238,81,41)" fg:x="6584" fg:w="105"/><text x="52.3592%" y="591.50"></text></g><g><title>wide::f32x4_::f32x4::blend (55 samples, 0.44%)</title><rect x="52.5049%" y="565" width="0.4353%" height="15" fill="rgb(210,199,37)" fg:x="6634" fg:w="55"/><text x="52.7549%" y="575.50"></text></g><g><title>wide::generic_bit_blend (55 samples, 0.44%)</title><rect x="52.5049%" y="549" width="0.4353%" height="15" fill="rgb(244,192,49)" fg:x="6634" fg:w="55"/><text x="52.7549%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (55 samples, 0.44%)</title><rect x="52.5049%" y="533" width="0.4353%" height="15" fill="rgb(226,211,11)" fg:x="6634" fg:w="55"/><text x="52.7549%" y="543.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (55 samples, 0.44%)</title><rect x="52.5049%" y="517" width="0.4353%" height="15" fill="rgb(236,162,54)" fg:x="6634" fg:w="55"/><text x="52.7549%" y="527.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (55 samples, 0.44%)</title><rect x="52.5049%" y="501" width="0.4353%" height="15" fill="rgb(220,229,9)" fg:x="6634" fg:w="55"/><text x="52.7549%" y="511.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (4 samples, 0.03%)</title><rect x="52.9402%" y="565" width="0.0317%" height="15" fill="rgb(250,87,22)" fg:x="6689" fg:w="4"/><text x="53.1902%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (4 samples, 0.03%)</title><rect x="52.9402%" y="549" width="0.0317%" height="15" fill="rgb(239,43,17)" fg:x="6689" fg:w="4"/><text x="53.1902%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (4 samples, 0.03%)</title><rect x="52.9402%" y="533" width="0.0317%" height="15" fill="rgb(231,177,25)" fg:x="6689" fg:w="4"/><text x="53.1902%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (12 samples, 0.09%)</title><rect x="52.9719%" y="565" width="0.0950%" height="15" fill="rgb(219,179,1)" fg:x="6693" fg:w="12"/><text x="53.2219%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (12 samples, 0.09%)</title><rect x="52.9719%" y="549" width="0.0950%" height="15" fill="rgb(238,219,53)" fg:x="6693" fg:w="12"/><text x="53.2219%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (12 samples, 0.09%)</title><rect x="52.9719%" y="533" width="0.0950%" height="15" fill="rgb(232,167,36)" fg:x="6693" fg:w="12"/><text x="53.2219%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::round_int (19 samples, 0.15%)</title><rect x="52.9402%" y="581" width="0.1504%" height="15" fill="rgb(244,19,51)" fg:x="6689" fg:w="19"/><text x="53.1902%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpGe&gt;::cmp_ge (3 samples, 0.02%)</title><rect x="53.0669%" y="565" width="0.0237%" height="15" fill="rgb(224,6,22)" fg:x="6705" fg:w="3"/><text x="53.3169%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_ge_mask_m128 (3 samples, 0.02%)</title><rect x="53.0669%" y="549" width="0.0237%" height="15" fill="rgb(224,145,5)" fg:x="6705" fg:w="3"/><text x="53.3169%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpge_ps (3 samples, 0.02%)</title><rect x="53.0669%" y="533" width="0.0237%" height="15" fill="rgb(234,130,49)" fg:x="6705" fg:w="3"/><text x="53.3169%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (6 samples, 0.05%)</title><rect x="53.0906%" y="565" width="0.0475%" height="15" fill="rgb(254,6,2)" fg:x="6708" fg:w="6"/><text x="53.3406%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (6 samples, 0.05%)</title><rect x="53.0906%" y="549" width="0.0475%" height="15" fill="rgb(208,96,46)" fg:x="6708" fg:w="6"/><text x="53.3406%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (6 samples, 0.05%)</title><rect x="53.0906%" y="533" width="0.0475%" height="15" fill="rgb(239,3,39)" fg:x="6708" fg:w="6"/><text x="53.3406%" y="543.50"></text></g><g><title>[anon] (2,799 samples, 22.15%)</title><rect x="31.3573%" y="613" width="22.1528%" height="15" fill="rgb(233,210,1)" fg:x="3962" fg:w="2799"/><text x="31.6073%" y="623.50">[anon]</text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (1,155 samples, 9.14%)</title><rect x="44.3688%" y="597" width="9.1413%" height="15" fill="rgb(244,137,37)" fg:x="5606" fg:w="1155"/><text x="44.6188%" y="607.50">wide::f32x4_:..</text></g><g><title>wide::f32x4_::f32x4::sign_bit (53 samples, 0.42%)</title><rect x="53.0906%" y="581" width="0.4195%" height="15" fill="rgb(240,136,2)" fg:x="6708" fg:w="53"/><text x="53.3406%" y="591.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (47 samples, 0.37%)</title><rect x="53.1381%" y="565" width="0.3720%" height="15" fill="rgb(239,18,37)" fg:x="6714" fg:w="47"/><text x="53.3881%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (47 samples, 0.37%)</title><rect x="53.1381%" y="549" width="0.3720%" height="15" fill="rgb(218,185,22)" fg:x="6714" fg:w="47"/><text x="53.3881%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (47 samples, 0.37%)</title><rect x="53.1381%" y="533" width="0.3720%" height="15" fill="rgb(225,218,4)" fg:x="6714" fg:w="47"/><text x="53.3881%" y="543.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (7 samples, 0.06%)</title><rect x="53.7317%" y="485" width="0.0554%" height="15" fill="rgb(230,182,32)" fg:x="6789" fg:w="7"/><text x="53.9817%" y="495.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (104 samples, 0.82%)</title><rect x="53.6842%" y="501" width="0.8231%" height="15" fill="rgb(242,56,43)" fg:x="6783" fg:w="104"/><text x="53.9342%" y="511.50"></text></g><g><title>[libc.so.6] (91 samples, 0.72%)</title><rect x="53.7871%" y="485" width="0.7202%" height="15" fill="rgb(233,99,24)" fg:x="6796" fg:w="91"/><text x="54.0371%" y="495.50"></text></g><g><title>[unknown] (84 samples, 0.66%)</title><rect x="53.8425%" y="469" width="0.6648%" height="15" fill="rgb(234,209,42)" fg:x="6803" fg:w="84"/><text x="54.0925%" y="479.50"></text></g><g><title>[unknown] (83 samples, 0.66%)</title><rect x="53.8504%" y="453" width="0.6569%" height="15" fill="rgb(227,7,12)" fg:x="6804" fg:w="83"/><text x="54.1004%" y="463.50"></text></g><g><title>[unknown] (81 samples, 0.64%)</title><rect x="53.8662%" y="437" width="0.6411%" height="15" fill="rgb(245,203,43)" fg:x="6806" fg:w="81"/><text x="54.1162%" y="447.50"></text></g><g><title>[unknown] (73 samples, 0.58%)</title><rect x="53.9296%" y="421" width="0.5778%" height="15" fill="rgb(238,205,33)" fg:x="6814" fg:w="73"/><text x="54.1796%" y="431.50"></text></g><g><title>[unknown] (68 samples, 0.54%)</title><rect x="53.9691%" y="405" width="0.5382%" height="15" fill="rgb(231,56,7)" fg:x="6819" fg:w="68"/><text x="54.2191%" y="415.50"></text></g><g><title>[unknown] (59 samples, 0.47%)</title><rect x="54.0404%" y="389" width="0.4670%" height="15" fill="rgb(244,186,29)" fg:x="6828" fg:w="59"/><text x="54.2904%" y="399.50"></text></g><g><title>[unknown] (48 samples, 0.38%)</title><rect x="54.1274%" y="373" width="0.3799%" height="15" fill="rgb(234,111,31)" fg:x="6839" fg:w="48"/><text x="54.3774%" y="383.50"></text></g><g><title>[unknown] (42 samples, 0.33%)</title><rect x="54.1749%" y="357" width="0.3324%" height="15" fill="rgb(241,149,10)" fg:x="6845" fg:w="42"/><text x="54.4249%" y="367.50"></text></g><g><title>[unknown] (37 samples, 0.29%)</title><rect x="54.2145%" y="341" width="0.2928%" height="15" fill="rgb(249,206,44)" fg:x="6850" fg:w="37"/><text x="54.4645%" y="351.50"></text></g><g><title>[unknown] (23 samples, 0.18%)</title><rect x="54.3253%" y="325" width="0.1820%" height="15" fill="rgb(251,153,30)" fg:x="6864" fg:w="23"/><text x="54.5753%" y="335.50"></text></g><g><title>[unknown] (16 samples, 0.13%)</title><rect x="54.3807%" y="309" width="0.1266%" height="15" fill="rgb(239,152,38)" fg:x="6871" fg:w="16"/><text x="54.6307%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.07%)</title><rect x="54.4361%" y="293" width="0.0712%" height="15" fill="rgb(249,139,47)" fg:x="6878" fg:w="9"/><text x="54.6861%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="54.4677%" y="277" width="0.0396%" height="15" fill="rgb(244,64,35)" fg:x="6882" fg:w="5"/><text x="54.7177%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="54.4757%" y="261" width="0.0317%" height="15" fill="rgb(216,46,15)" fg:x="6883" fg:w="4"/><text x="54.7257%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="54.4757%" y="245" width="0.0317%" height="15" fill="rgb(250,74,19)" fg:x="6883" fg:w="4"/><text x="54.7257%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="54.4915%" y="229" width="0.0158%" height="15" fill="rgb(249,42,33)" fg:x="6885" fg:w="2"/><text x="54.7415%" y="239.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process (5 samples, 0.04%)</title><rect x="54.5073%" y="469" width="0.0396%" height="15" fill="rgb(242,149,17)" fg:x="6887" fg:w="5"/><text x="54.7573%" y="479.50"></text></g><g><title>&lt;clip::Clip as nih_plug::plugin::Plugin&gt;::process (2 samples, 0.02%)</title><rect x="54.5627%" y="437" width="0.0158%" height="15" fill="rgb(244,29,21)" fg:x="6894" fg:w="2"/><text x="54.8127%" y="447.50"></text></g><g><title>[libm.so.6] (23 samples, 0.18%)</title><rect x="54.5865%" y="437" width="0.1820%" height="15" fill="rgb(220,130,37)" fg:x="6897" fg:w="23"/><text x="54.8365%" y="447.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (3 samples, 0.02%)</title><rect x="55.0693%" y="405" width="0.0237%" height="15" fill="rgb(211,67,2)" fg:x="6958" fg:w="3"/><text x="55.3193%" y="415.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as clip::math_utils::Lerpable&gt;::lerp (8 samples, 0.06%)</title><rect x="55.1484%" y="389" width="0.0633%" height="15" fill="rgb(235,68,52)" fg:x="6968" fg:w="8"/><text x="55.3984%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (5 samples, 0.04%)</title><rect x="55.1721%" y="373" width="0.0396%" height="15" fill="rgb(246,142,3)" fg:x="6971" fg:w="5"/><text x="55.4221%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (5 samples, 0.04%)</title><rect x="55.1721%" y="357" width="0.0396%" height="15" fill="rgb(241,25,7)" fg:x="6971" fg:w="5"/><text x="55.4221%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (5 samples, 0.04%)</title><rect x="55.1721%" y="341" width="0.0396%" height="15" fill="rgb(242,119,39)" fg:x="6971" fg:w="5"/><text x="55.4221%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (5 samples, 0.04%)</title><rect x="55.3779%" y="373" width="0.0396%" height="15" fill="rgb(241,98,45)" fg:x="6997" fg:w="5"/><text x="55.6279%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (5 samples, 0.04%)</title><rect x="55.3779%" y="357" width="0.0396%" height="15" fill="rgb(254,28,30)" fg:x="6997" fg:w="5"/><text x="55.6279%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (5 samples, 0.04%)</title><rect x="55.3779%" y="341" width="0.0396%" height="15" fill="rgb(241,142,54)" fg:x="6997" fg:w="5"/><text x="55.6279%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Div&gt;::div (10 samples, 0.08%)</title><rect x="55.4175%" y="373" width="0.0791%" height="15" fill="rgb(222,85,15)" fg:x="7002" fg:w="10"/><text x="55.6675%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::div_m128 (10 samples, 0.08%)</title><rect x="55.4175%" y="357" width="0.0791%" height="15" fill="rgb(210,85,47)" fg:x="7002" fg:w="10"/><text x="55.6675%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_div_ps (10 samples, 0.08%)</title><rect x="55.4175%" y="341" width="0.0791%" height="15" fill="rgb(224,206,25)" fg:x="7002" fg:w="10"/><text x="55.6675%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (6 samples, 0.05%)</title><rect x="55.4966%" y="373" width="0.0475%" height="15" fill="rgb(243,201,19)" fg:x="7012" fg:w="6"/><text x="55.7466%" y="383.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (6 samples, 0.05%)</title><rect x="55.4966%" y="357" width="0.0475%" height="15" fill="rgb(236,59,4)" fg:x="7012" fg:w="6"/><text x="55.7466%" y="367.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (6 samples, 0.05%)</title><rect x="55.4966%" y="341" width="0.0475%" height="15" fill="rgb(254,179,45)" fg:x="7012" fg:w="6"/><text x="55.7466%" y="351.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (6 samples, 0.05%)</title><rect x="55.4966%" y="325" width="0.0475%" height="15" fill="rgb(226,14,10)" fg:x="7012" fg:w="6"/><text x="55.7466%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="373" width="0.0317%" height="15" fill="rgb(244,27,41)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="357" width="0.0317%" height="15" fill="rgb(235,35,32)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="341" width="0.0317%" height="15" fill="rgb(218,68,31)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="325" width="0.0317%" height="15" fill="rgb(207,120,37)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="335.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="309" width="0.0317%" height="15" fill="rgb(227,98,0)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="319.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="293" width="0.0317%" height="15" fill="rgb(207,7,3)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="277" width="0.0317%" height="15" fill="rgb(206,98,19)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="261" width="0.0317%" height="15" fill="rgb(217,5,26)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="245" width="0.0317%" height="15" fill="rgb(235,190,38)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="255.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="229" width="0.0317%" height="15" fill="rgb(247,86,24)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="55.5441%" y="213" width="0.0317%" height="15" fill="rgb(205,101,16)" fg:x="7018" fg:w="4"/><text x="55.7941%" y="223.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="55.5520%" y="197" width="0.0237%" height="15" fill="rgb(246,168,33)" fg:x="7019" fg:w="3"/><text x="55.8020%" y="207.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="55.5520%" y="181" width="0.0237%" height="15" fill="rgb(231,114,1)" fg:x="7019" fg:w="3"/><text x="55.8020%" y="191.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="55.5600%" y="165" width="0.0158%" height="15" fill="rgb(207,184,53)" fg:x="7020" fg:w="2"/><text x="55.8100%" y="175.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="55.5600%" y="149" width="0.0158%" height="15" fill="rgb(224,95,51)" fg:x="7020" fg:w="2"/><text x="55.8100%" y="159.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="55.5600%" y="133" width="0.0158%" height="15" fill="rgb(212,188,45)" fg:x="7020" fg:w="2"/><text x="55.8100%" y="143.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="55.5600%" y="117" width="0.0158%" height="15" fill="rgb(223,154,38)" fg:x="7020" fg:w="2"/><text x="55.8100%" y="127.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (12 samples, 0.09%)</title><rect x="55.5758%" y="373" width="0.0950%" height="15" fill="rgb(251,22,52)" fg:x="7022" fg:w="12"/><text x="55.8258%" y="383.50"></text></g><g><title>wide::f32x4_::f32x4::fast_max (16 samples, 0.13%)</title><rect x="55.6708%" y="373" width="0.1266%" height="15" fill="rgb(229,209,22)" fg:x="7034" fg:w="16"/><text x="55.9208%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::max_m128 (16 samples, 0.13%)</title><rect x="55.6708%" y="357" width="0.1266%" height="15" fill="rgb(234,138,34)" fg:x="7034" fg:w="16"/><text x="55.9208%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_max_ps (16 samples, 0.13%)</title><rect x="55.6708%" y="341" width="0.1266%" height="15" fill="rgb(212,95,11)" fg:x="7034" fg:w="16"/><text x="55.9208%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::fast_min (3 samples, 0.02%)</title><rect x="55.7974%" y="373" width="0.0237%" height="15" fill="rgb(240,179,47)" fg:x="7050" fg:w="3"/><text x="56.0474%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::min_m128 (3 samples, 0.02%)</title><rect x="55.7974%" y="357" width="0.0237%" height="15" fill="rgb(240,163,11)" fg:x="7050" fg:w="3"/><text x="56.0474%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_min_ps (3 samples, 0.02%)</title><rect x="55.7974%" y="341" width="0.0237%" height="15" fill="rgb(236,37,12)" fg:x="7050" fg:w="3"/><text x="56.0474%" y="351.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (2 samples, 0.02%)</title><rect x="56.0665%" y="357" width="0.0158%" height="15" fill="rgb(232,164,16)" fg:x="7084" fg:w="2"/><text x="56.3165%" y="367.50"></text></g><g><title>[libm.so.6] (128 samples, 1.01%)</title><rect x="56.0902%" y="357" width="1.0131%" height="15" fill="rgb(244,205,15)" fg:x="7087" fg:w="128"/><text x="56.3402%" y="367.50"></text></g><g><title>&lt;f32 as nih_plug::params::smoothing::Smoothable&gt;::atomic_load (4 samples, 0.03%)</title><rect x="57.2220%" y="325" width="0.0317%" height="15" fill="rgb(223,117,47)" fg:x="7230" fg:w="4"/><text x="57.4720%" y="335.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (4 samples, 0.03%)</title><rect x="57.2220%" y="309" width="0.0317%" height="15" fill="rgb(244,107,35)" fg:x="7230" fg:w="4"/><text x="57.4720%" y="319.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (4 samples, 0.03%)</title><rect x="57.2220%" y="293" width="0.0317%" height="15" fill="rgb(205,140,8)" fg:x="7230" fg:w="4"/><text x="57.4720%" y="303.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (4 samples, 0.03%)</title><rect x="57.2220%" y="277" width="0.0317%" height="15" fill="rgb(228,84,46)" fg:x="7230" fg:w="4"/><text x="57.4720%" y="287.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (7 samples, 0.06%)</title><rect x="57.2537%" y="309" width="0.0554%" height="15" fill="rgb(254,188,9)" fg:x="7234" fg:w="7"/><text x="57.5037%" y="319.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (7 samples, 0.06%)</title><rect x="57.2537%" y="293" width="0.0554%" height="15" fill="rgb(206,112,54)" fg:x="7234" fg:w="7"/><text x="57.5037%" y="303.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (13 samples, 0.10%)</title><rect x="57.2537%" y="325" width="0.1029%" height="15" fill="rgb(216,84,49)" fg:x="7234" fg:w="13"/><text x="57.5037%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (6 samples, 0.05%)</title><rect x="57.3091%" y="309" width="0.0475%" height="15" fill="rgb(214,194,35)" fg:x="7241" fg:w="6"/><text x="57.5591%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.05%)</title><rect x="57.3091%" y="293" width="0.0475%" height="15" fill="rgb(249,28,3)" fg:x="7241" fg:w="6"/><text x="57.5591%" y="303.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::store (4 samples, 0.03%)</title><rect x="57.3565%" y="325" width="0.0317%" height="15" fill="rgb(222,56,52)" fg:x="7247" fg:w="4"/><text x="57.6065%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (4 samples, 0.03%)</title><rect x="57.3565%" y="309" width="0.0317%" height="15" fill="rgb(245,217,50)" fg:x="7247" fg:w="4"/><text x="57.6065%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_store (4 samples, 0.03%)</title><rect x="57.3565%" y="293" width="0.0317%" height="15" fill="rgb(213,201,24)" fg:x="7247" fg:w="4"/><text x="57.6065%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (2 samples, 0.02%)</title><rect x="57.3961%" y="325" width="0.0158%" height="15" fill="rgb(248,116,28)" fg:x="7252" fg:w="2"/><text x="57.6461%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="57.3961%" y="309" width="0.0158%" height="15" fill="rgb(219,72,43)" fg:x="7252" fg:w="2"/><text x="57.6461%" y="319.50"></text></g><g><title>clip::Clip::param_update (59 samples, 0.47%)</title><rect x="57.1191%" y="357" width="0.4670%" height="15" fill="rgb(209,138,14)" fg:x="7217" fg:w="59"/><text x="57.3691%" y="367.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (47 samples, 0.37%)</title><rect x="57.2141%" y="341" width="0.3720%" height="15" fill="rgb(222,18,33)" fg:x="7229" fg:w="47"/><text x="57.4641%" y="351.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::next (22 samples, 0.17%)</title><rect x="57.4120%" y="325" width="0.1741%" height="15" fill="rgb(213,199,7)" fg:x="7254" fg:w="22"/><text x="57.6620%" y="335.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (17 samples, 0.13%)</title><rect x="57.8631%" y="341" width="0.1345%" height="15" fill="rgb(250,110,10)" fg:x="7311" fg:w="17"/><text x="58.1131%" y="351.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (631 samples, 4.99%)</title><rect x="57.5861%" y="357" width="4.9941%" height="15" fill="rgb(248,123,6)" fg:x="7276" fg:w="631"/><text x="57.8361%" y="367.50">clip::..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (579 samples, 4.58%)</title><rect x="57.9976%" y="341" width="4.5825%" height="15" fill="rgb(206,91,31)" fg:x="7328" fg:w="579"/><text x="58.2476%" y="351.50">clip:..</text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (15 samples, 0.12%)</title><rect x="62.5801%" y="357" width="0.1187%" height="15" fill="rgb(211,154,13)" fg:x="7907" fg:w="15"/><text x="62.8301%" y="367.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (9 samples, 0.07%)</title><rect x="62.6276%" y="341" width="0.0712%" height="15" fill="rgb(225,148,7)" fg:x="7913" fg:w="9"/><text x="62.8776%" y="351.50"></text></g><g><title>wide::&lt;impl wide::f32x4_::f32x4&gt;::splat (6 samples, 0.05%)</title><rect x="62.7068%" y="357" width="0.0475%" height="15" fill="rgb(220,160,43)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="367.50"></text></g><g><title>bytemuck::cast (6 samples, 0.05%)</title><rect x="62.7068%" y="341" width="0.0475%" height="15" fill="rgb(213,52,39)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="351.50"></text></g><g><title>bytemuck::internal::cast (6 samples, 0.05%)</title><rect x="62.7068%" y="325" width="0.0475%" height="15" fill="rgb(243,137,7)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="335.50"></text></g><g><title>core::mem::transmute_copy (6 samples, 0.05%)</title><rect x="62.7068%" y="309" width="0.0475%" height="15" fill="rgb(230,79,13)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="319.50"></text></g><g><title>core::ptr::read_unaligned (6 samples, 0.05%)</title><rect x="62.7068%" y="293" width="0.0475%" height="15" fill="rgb(247,105,23)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="303.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (6 samples, 0.05%)</title><rect x="62.7068%" y="277" width="0.0475%" height="15" fill="rgb(223,179,41)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="287.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::into_inner (6 samples, 0.05%)</title><rect x="62.7068%" y="261" width="0.0475%" height="15" fill="rgb(218,9,34)" fg:x="7923" fg:w="6"/><text x="62.9568%" y="271.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (6 samples, 0.05%)</title><rect x="62.8413%" y="341" width="0.0475%" height="15" fill="rgb(222,106,8)" fg:x="7940" fg:w="6"/><text x="63.0913%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (6 samples, 0.05%)</title><rect x="62.8413%" y="325" width="0.0475%" height="15" fill="rgb(211,220,0)" fg:x="7940" fg:w="6"/><text x="63.0913%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (6 samples, 0.05%)</title><rect x="62.8413%" y="309" width="0.0475%" height="15" fill="rgb(229,52,16)" fg:x="7940" fg:w="6"/><text x="63.0913%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (14 samples, 0.11%)</title><rect x="62.8888%" y="341" width="0.1108%" height="15" fill="rgb(212,155,18)" fg:x="7946" fg:w="14"/><text x="63.1388%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (14 samples, 0.11%)</title><rect x="62.8888%" y="325" width="0.1108%" height="15" fill="rgb(242,21,14)" fg:x="7946" fg:w="14"/><text x="63.1388%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (14 samples, 0.11%)</title><rect x="62.8888%" y="309" width="0.1108%" height="15" fill="rgb(222,19,48)" fg:x="7946" fg:w="14"/><text x="63.1388%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (3 samples, 0.02%)</title><rect x="62.9996%" y="341" width="0.0237%" height="15" fill="rgb(232,45,27)" fg:x="7960" fg:w="3"/><text x="63.2496%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (3 samples, 0.02%)</title><rect x="62.9996%" y="325" width="0.0237%" height="15" fill="rgb(249,103,42)" fg:x="7960" fg:w="3"/><text x="63.2496%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (3 samples, 0.02%)</title><rect x="62.9996%" y="309" width="0.0237%" height="15" fill="rgb(246,81,33)" fg:x="7960" fg:w="3"/><text x="63.2496%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitOr&gt;::bitor (5 samples, 0.04%)</title><rect x="63.0233%" y="341" width="0.0396%" height="15" fill="rgb(252,33,42)" fg:x="7963" fg:w="5"/><text x="63.2733%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::bitor_m128 (5 samples, 0.04%)</title><rect x="63.0233%" y="325" width="0.0396%" height="15" fill="rgb(209,212,41)" fg:x="7963" fg:w="5"/><text x="63.2733%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_or_ps (5 samples, 0.04%)</title><rect x="63.0233%" y="309" width="0.0396%" height="15" fill="rgb(207,154,6)" fg:x="7963" fg:w="5"/><text x="63.2733%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpGt&gt;::cmp_gt (4 samples, 0.03%)</title><rect x="63.0708%" y="341" width="0.0317%" height="15" fill="rgb(223,64,47)" fg:x="7969" fg:w="4"/><text x="63.3208%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_gt_mask_m128 (4 samples, 0.03%)</title><rect x="63.0708%" y="325" width="0.0317%" height="15" fill="rgb(211,161,38)" fg:x="7969" fg:w="4"/><text x="63.3208%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpgt_ps (4 samples, 0.03%)</title><rect x="63.0708%" y="309" width="0.0317%" height="15" fill="rgb(219,138,40)" fg:x="7969" fg:w="4"/><text x="63.3208%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpLt&gt;::cmp_lt (10 samples, 0.08%)</title><rect x="63.1025%" y="341" width="0.0791%" height="15" fill="rgb(241,228,46)" fg:x="7973" fg:w="10"/><text x="63.3525%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_lt_mask_m128 (10 samples, 0.08%)</title><rect x="63.1025%" y="325" width="0.0791%" height="15" fill="rgb(223,209,38)" fg:x="7973" fg:w="10"/><text x="63.3525%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmplt_ps (10 samples, 0.08%)</title><rect x="63.1025%" y="309" width="0.0791%" height="15" fill="rgb(236,164,45)" fg:x="7973" fg:w="10"/><text x="63.3525%" y="319.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (3 samples, 0.02%)</title><rect x="63.1816%" y="341" width="0.0237%" height="15" fill="rgb(231,15,5)" fg:x="7983" fg:w="3"/><text x="63.4316%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse2::shl_all_u32_m128i (3 samples, 0.02%)</title><rect x="63.1816%" y="325" width="0.0237%" height="15" fill="rgb(252,35,15)" fg:x="7983" fg:w="3"/><text x="63.4316%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sll_epi32 (3 samples, 0.02%)</title><rect x="63.1816%" y="309" width="0.0237%" height="15" fill="rgb(248,181,18)" fg:x="7983" fg:w="3"/><text x="63.4316%" y="319.50"></text></g><g><title>wide::f32x4_::f32x4::all (2 samples, 0.02%)</title><rect x="63.2133%" y="341" width="0.0158%" height="15" fill="rgb(233,39,42)" fg:x="7987" fg:w="2"/><text x="63.4633%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::move_mask (2 samples, 0.02%)</title><rect x="63.2133%" y="325" width="0.0158%" height="15" fill="rgb(238,110,33)" fg:x="7987" fg:w="2"/><text x="63.4633%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::move_mask_m128 (2 samples, 0.02%)</title><rect x="63.2133%" y="309" width="0.0158%" height="15" fill="rgb(233,195,10)" fg:x="7987" fg:w="2"/><text x="63.4633%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_movemask_ps (2 samples, 0.02%)</title><rect x="63.2133%" y="293" width="0.0158%" height="15" fill="rgb(254,105,3)" fg:x="7987" fg:w="2"/><text x="63.4633%" y="303.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (8 samples, 0.06%)</title><rect x="63.2291%" y="309" width="0.0633%" height="15" fill="rgb(221,225,9)" fg:x="7989" fg:w="8"/><text x="63.4791%" y="319.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (8 samples, 0.06%)</title><rect x="63.2291%" y="293" width="0.0633%" height="15" fill="rgb(224,227,45)" fg:x="7989" fg:w="8"/><text x="63.4791%" y="303.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (8 samples, 0.06%)</title><rect x="63.2291%" y="277" width="0.0633%" height="15" fill="rgb(229,198,43)" fg:x="7989" fg:w="8"/><text x="63.4791%" y="287.50"></text></g><g><title>wide::f32x4_::f32x4::blend (19 samples, 0.15%)</title><rect x="63.2291%" y="341" width="0.1504%" height="15" fill="rgb(206,209,35)" fg:x="7989" fg:w="19"/><text x="63.4791%" y="351.50"></text></g><g><title>wide::generic_bit_blend (19 samples, 0.15%)</title><rect x="63.2291%" y="325" width="0.1504%" height="15" fill="rgb(245,195,53)" fg:x="7989" fg:w="19"/><text x="63.4791%" y="335.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (11 samples, 0.09%)</title><rect x="63.2924%" y="309" width="0.0871%" height="15" fill="rgb(240,92,26)" fg:x="7997" fg:w="11"/><text x="63.5424%" y="319.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (11 samples, 0.09%)</title><rect x="63.2924%" y="293" width="0.0871%" height="15" fill="rgb(207,40,23)" fg:x="7997" fg:w="11"/><text x="63.5424%" y="303.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (11 samples, 0.09%)</title><rect x="63.2924%" y="277" width="0.0871%" height="15" fill="rgb(223,111,35)" fg:x="7997" fg:w="11"/><text x="63.5424%" y="287.50"></text></g><g><title>wide::f32x4_::f32x4::exponent (2 samples, 0.02%)</title><rect x="63.3795%" y="341" width="0.0158%" height="15" fill="rgb(229,147,28)" fg:x="8008" fg:w="2"/><text x="63.6295%" y="351.50"></text></g><g><title>&lt;wide::u32x4_::u32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (2 samples, 0.02%)</title><rect x="63.3795%" y="325" width="0.0158%" height="15" fill="rgb(211,29,28)" fg:x="8008" fg:w="2"/><text x="63.6295%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_u32_m128i (2 samples, 0.02%)</title><rect x="63.3795%" y="309" width="0.0158%" height="15" fill="rgb(228,72,33)" fg:x="8008" fg:w="2"/><text x="63.6295%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srl_epi32 (2 samples, 0.02%)</title><rect x="63.3795%" y="293" width="0.0158%" height="15" fill="rgb(205,214,31)" fg:x="8008" fg:w="2"/><text x="63.6295%" y="303.50"></text></g><g><title>wide::f32x4_::f32x4::is_finite (11 samples, 0.09%)</title><rect x="63.3953%" y="341" width="0.0871%" height="15" fill="rgb(224,111,15)" fg:x="8010" fg:w="11"/><text x="63.6453%" y="351.50"></text></g><g><title>wide::u32x4_::u32x4::cmp_eq (11 samples, 0.09%)</title><rect x="63.3953%" y="325" width="0.0871%" height="15" fill="rgb(253,21,26)" fg:x="8010" fg:w="11"/><text x="63.6453%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (11 samples, 0.09%)</title><rect x="63.3953%" y="309" width="0.0871%" height="15" fill="rgb(245,139,43)" fg:x="8010" fg:w="11"/><text x="63.6453%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (11 samples, 0.09%)</title><rect x="63.3953%" y="293" width="0.0871%" height="15" fill="rgb(252,170,7)" fg:x="8010" fg:w="11"/><text x="63.6453%" y="303.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (8 samples, 0.06%)</title><rect x="63.4824%" y="325" width="0.0633%" height="15" fill="rgb(231,118,14)" fg:x="8021" fg:w="8"/><text x="63.7324%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (8 samples, 0.06%)</title><rect x="63.4824%" y="309" width="0.0633%" height="15" fill="rgb(238,83,0)" fg:x="8021" fg:w="8"/><text x="63.7324%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (8 samples, 0.06%)</title><rect x="63.4824%" y="293" width="0.0633%" height="15" fill="rgb(221,39,39)" fg:x="8021" fg:w="8"/><text x="63.7324%" y="303.50"></text></g><g><title>wide::f32x4_::f32x4::mul_add (18 samples, 0.14%)</title><rect x="63.4824%" y="341" width="0.1425%" height="15" fill="rgb(222,119,46)" fg:x="8021" fg:w="18"/><text x="63.7324%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (10 samples, 0.08%)</title><rect x="63.5457%" y="325" width="0.0791%" height="15" fill="rgb(222,165,49)" fg:x="8029" fg:w="10"/><text x="63.7957%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (10 samples, 0.08%)</title><rect x="63.5457%" y="309" width="0.0791%" height="15" fill="rgb(219,113,52)" fg:x="8029" fg:w="10"/><text x="63.7957%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (10 samples, 0.08%)</title><rect x="63.5457%" y="293" width="0.0791%" height="15" fill="rgb(214,7,15)" fg:x="8029" fg:w="10"/><text x="63.7957%" y="303.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (6 samples, 0.05%)</title><rect x="63.6249%" y="325" width="0.0475%" height="15" fill="rgb(235,32,4)" fg:x="8039" fg:w="6"/><text x="63.8749%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (6 samples, 0.05%)</title><rect x="63.6249%" y="309" width="0.0475%" height="15" fill="rgb(238,90,54)" fg:x="8039" fg:w="6"/><text x="63.8749%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (6 samples, 0.05%)</title><rect x="63.6249%" y="293" width="0.0475%" height="15" fill="rgb(213,208,19)" fg:x="8039" fg:w="6"/><text x="63.8749%" y="303.50"></text></g><g><title>wide::f32x4_::f32x4::mul_neg_add (15 samples, 0.12%)</title><rect x="63.6249%" y="341" width="0.1187%" height="15" fill="rgb(233,156,4)" fg:x="8039" fg:w="15"/><text x="63.8749%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (9 samples, 0.07%)</title><rect x="63.6723%" y="325" width="0.0712%" height="15" fill="rgb(207,194,5)" fg:x="8045" fg:w="9"/><text x="63.9223%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (9 samples, 0.07%)</title><rect x="63.6723%" y="309" width="0.0712%" height="15" fill="rgb(206,111,30)" fg:x="8045" fg:w="9"/><text x="63.9223%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (9 samples, 0.07%)</title><rect x="63.6723%" y="293" width="0.0712%" height="15" fill="rgb(243,70,54)" fg:x="8045" fg:w="9"/><text x="63.9223%" y="303.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (5 samples, 0.04%)</title><rect x="63.7436%" y="325" width="0.0396%" height="15" fill="rgb(242,28,8)" fg:x="8054" fg:w="5"/><text x="63.9936%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (5 samples, 0.04%)</title><rect x="63.7436%" y="309" width="0.0396%" height="15" fill="rgb(219,106,18)" fg:x="8054" fg:w="5"/><text x="63.9936%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (5 samples, 0.04%)</title><rect x="63.7436%" y="293" width="0.0396%" height="15" fill="rgb(244,222,10)" fg:x="8054" fg:w="5"/><text x="63.9936%" y="303.50"></text></g><g><title>wide::f32x4_::f32x4::mul_sub (9 samples, 0.07%)</title><rect x="63.7436%" y="341" width="0.0712%" height="15" fill="rgb(236,179,52)" fg:x="8054" fg:w="9"/><text x="63.9936%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (4 samples, 0.03%)</title><rect x="63.7831%" y="325" width="0.0317%" height="15" fill="rgb(213,23,39)" fg:x="8059" fg:w="4"/><text x="64.0331%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (4 samples, 0.03%)</title><rect x="63.7831%" y="309" width="0.0317%" height="15" fill="rgb(238,48,10)" fg:x="8059" fg:w="4"/><text x="64.0331%" y="319.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (4 samples, 0.03%)</title><rect x="63.7831%" y="293" width="0.0317%" height="15" fill="rgb(251,196,23)" fg:x="8059" fg:w="4"/><text x="64.0331%" y="303.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as wide::CmpEq&gt;::cmp_eq (4 samples, 0.03%)</title><rect x="63.8148%" y="325" width="0.0317%" height="15" fill="rgb(250,152,24)" fg:x="8063" fg:w="4"/><text x="64.0648%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (4 samples, 0.03%)</title><rect x="63.8148%" y="309" width="0.0317%" height="15" fill="rgb(209,150,17)" fg:x="8063" fg:w="4"/><text x="64.0648%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (4 samples, 0.03%)</title><rect x="63.8148%" y="293" width="0.0317%" height="15" fill="rgb(234,202,34)" fg:x="8063" fg:w="4"/><text x="64.0648%" y="303.50"></text></g><g><title>safe_arch::x86_x64::sse2::convert_to_m128_from_i32_m128i (6 samples, 0.05%)</title><rect x="63.8465%" y="325" width="0.0475%" height="15" fill="rgb(253,148,53)" fg:x="8067" fg:w="6"/><text x="64.0965%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cvtepi32_ps (6 samples, 0.05%)</title><rect x="63.8465%" y="309" width="0.0475%" height="15" fill="rgb(218,129,16)" fg:x="8067" fg:w="6"/><text x="64.0965%" y="319.50"></text></g><g><title>wide::f32x4_::f32x4::round (18 samples, 0.14%)</title><rect x="63.8148%" y="341" width="0.1425%" height="15" fill="rgb(216,85,19)" fg:x="8063" fg:w="18"/><text x="64.0648%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::blend (8 samples, 0.06%)</title><rect x="63.8939%" y="325" width="0.0633%" height="15" fill="rgb(235,228,7)" fg:x="8073" fg:w="8"/><text x="64.1439%" y="335.50"></text></g><g><title>wide::generic_bit_blend (8 samples, 0.06%)</title><rect x="63.8939%" y="309" width="0.0633%" height="15" fill="rgb(245,175,0)" fg:x="8073" fg:w="8"/><text x="64.1439%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (8 samples, 0.06%)</title><rect x="63.8939%" y="293" width="0.0633%" height="15" fill="rgb(208,168,36)" fg:x="8073" fg:w="8"/><text x="64.1439%" y="303.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (8 samples, 0.06%)</title><rect x="63.8939%" y="277" width="0.0633%" height="15" fill="rgb(246,171,24)" fg:x="8073" fg:w="8"/><text x="64.1439%" y="287.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (8 samples, 0.06%)</title><rect x="63.8939%" y="261" width="0.0633%" height="15" fill="rgb(215,142,24)" fg:x="8073" fg:w="8"/><text x="64.1439%" y="271.50"></text></g><g><title>wide::f32x4_::f32x4::round_int (2 samples, 0.02%)</title><rect x="63.9573%" y="341" width="0.0158%" height="15" fill="rgb(250,187,7)" fg:x="8081" fg:w="2"/><text x="64.2073%" y="351.50"></text></g><g><title>clip::dsp::var_hard_clip_simd_4 (1,118 samples, 8.85%)</title><rect x="55.2117%" y="389" width="8.8484%" height="15" fill="rgb(228,66,33)" fg:x="6976" fg:w="1118"/><text x="55.4617%" y="399.50">clip::dsp::v..</text></g><g><title>wide::f32x4_::f32x4::powf (1,041 samples, 8.24%)</title><rect x="55.8211%" y="373" width="8.2390%" height="15" fill="rgb(234,215,21)" fg:x="7053" fg:w="1041"/><text x="56.0711%" y="383.50">wide::f32x4..</text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (165 samples, 1.31%)</title><rect x="62.7543%" y="357" width="1.3059%" height="15" fill="rgb(222,191,20)" fg:x="7929" fg:w="165"/><text x="63.0043%" y="367.50"></text></g><g><title>wide::f32x4_::f32x4::sign_bit (11 samples, 0.09%)</title><rect x="63.9731%" y="341" width="0.0871%" height="15" fill="rgb(245,79,54)" fg:x="8083" fg:w="11"/><text x="64.2231%" y="351.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (10 samples, 0.08%)</title><rect x="63.9810%" y="325" width="0.0791%" height="15" fill="rgb(240,10,37)" fg:x="8084" fg:w="10"/><text x="64.2310%" y="335.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (10 samples, 0.08%)</title><rect x="63.9810%" y="309" width="0.0791%" height="15" fill="rgb(214,192,32)" fg:x="8084" fg:w="10"/><text x="64.2310%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (10 samples, 0.08%)</title><rect x="63.9810%" y="293" width="0.0791%" height="15" fill="rgb(209,36,54)" fg:x="8084" fg:w="10"/><text x="64.2310%" y="303.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::clamp (13 samples, 0.10%)</title><rect x="64.6379%" y="341" width="0.1029%" height="15" fill="rgb(220,10,11)" fg:x="8167" fg:w="13"/><text x="64.8879%" y="351.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (7 samples, 0.06%)</title><rect x="64.7408%" y="341" width="0.0554%" height="15" fill="rgb(221,106,17)" fg:x="8180" fg:w="7"/><text x="64.9908%" y="351.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (2 samples, 0.02%)</title><rect x="64.9387%" y="325" width="0.0158%" height="15" fill="rgb(251,142,44)" fg:x="8205" fg:w="2"/><text x="65.1887%" y="335.50"></text></g><g><title>&lt;f32 as nih_plug::params::smoothing::Smoothable&gt;::atomic_load (2 samples, 0.02%)</title><rect x="65.0336%" y="293" width="0.0158%" height="15" fill="rgb(238,13,15)" fg:x="8217" fg:w="2"/><text x="65.2836%" y="303.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (2 samples, 0.02%)</title><rect x="65.0336%" y="277" width="0.0158%" height="15" fill="rgb(208,107,27)" fg:x="8217" fg:w="2"/><text x="65.2836%" y="287.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (2 samples, 0.02%)</title><rect x="65.0336%" y="261" width="0.0158%" height="15" fill="rgb(205,136,37)" fg:x="8217" fg:w="2"/><text x="65.2836%" y="271.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (2 samples, 0.02%)</title><rect x="65.0336%" y="245" width="0.0158%" height="15" fill="rgb(250,205,27)" fg:x="8217" fg:w="2"/><text x="65.2836%" y="255.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (4 samples, 0.03%)</title><rect x="65.0495%" y="277" width="0.0317%" height="15" fill="rgb(210,80,43)" fg:x="8219" fg:w="4"/><text x="65.2995%" y="287.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (4 samples, 0.03%)</title><rect x="65.0495%" y="261" width="0.0317%" height="15" fill="rgb(247,160,36)" fg:x="8219" fg:w="4"/><text x="65.2995%" y="271.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (11 samples, 0.09%)</title><rect x="65.0495%" y="293" width="0.0871%" height="15" fill="rgb(234,13,49)" fg:x="8219" fg:w="11"/><text x="65.2995%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.06%)</title><rect x="65.0811%" y="277" width="0.0554%" height="15" fill="rgb(234,122,0)" fg:x="8223" fg:w="7"/><text x="65.3311%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.06%)</title><rect x="65.0811%" y="261" width="0.0554%" height="15" fill="rgb(207,146,38)" fg:x="8223" fg:w="7"/><text x="65.3311%" y="271.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::store (2 samples, 0.02%)</title><rect x="65.1365%" y="293" width="0.0158%" height="15" fill="rgb(207,177,25)" fg:x="8230" fg:w="2"/><text x="65.3865%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::store (2 samples, 0.02%)</title><rect x="65.1365%" y="277" width="0.0158%" height="15" fill="rgb(211,178,42)" fg:x="8230" fg:w="2"/><text x="65.3865%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_store (2 samples, 0.02%)</title><rect x="65.1365%" y="261" width="0.0158%" height="15" fill="rgb(230,69,54)" fg:x="8230" fg:w="2"/><text x="65.3865%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (3 samples, 0.02%)</title><rect x="65.1524%" y="293" width="0.0237%" height="15" fill="rgb(214,135,41)" fg:x="8232" fg:w="3"/><text x="65.4024%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="65.1524%" y="277" width="0.0237%" height="15" fill="rgb(237,67,25)" fg:x="8232" fg:w="3"/><text x="65.4024%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (3 samples, 0.02%)</title><rect x="65.1761%" y="293" width="0.0237%" height="15" fill="rgb(222,189,50)" fg:x="8235" fg:w="3"/><text x="65.4261%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="65.1761%" y="277" width="0.0237%" height="15" fill="rgb(245,148,34)" fg:x="8235" fg:w="3"/><text x="65.4261%" y="287.50"></text></g><g><title>clip::Clip::param_update (47 samples, 0.37%)</title><rect x="64.9624%" y="325" width="0.3720%" height="15" fill="rgb(222,29,6)" fg:x="8208" fg:w="47"/><text x="65.2124%" y="335.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (39 samples, 0.31%)</title><rect x="65.0257%" y="309" width="0.3087%" height="15" fill="rgb(221,189,43)" fg:x="8216" fg:w="39"/><text x="65.2757%" y="319.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::next (17 samples, 0.13%)</title><rect x="65.1998%" y="293" width="0.1345%" height="15" fill="rgb(207,36,27)" fg:x="8238" fg:w="17"/><text x="65.4498%" y="303.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (6 samples, 0.05%)</title><rect x="65.4135%" y="309" width="0.0475%" height="15" fill="rgb(217,90,24)" fg:x="8265" fg:w="6"/><text x="65.6635%" y="319.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (166 samples, 1.31%)</title><rect x="65.3344%" y="325" width="1.3138%" height="15" fill="rgb(224,66,35)" fg:x="8255" fg:w="166"/><text x="65.5844%" y="335.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (150 samples, 1.19%)</title><rect x="65.4610%" y="309" width="1.1872%" height="15" fill="rgb(221,13,50)" fg:x="8271" fg:w="150"/><text x="65.7110%" y="319.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (3 samples, 0.02%)</title><rect x="66.6482%" y="325" width="0.0237%" height="15" fill="rgb(236,68,49)" fg:x="8421" fg:w="3"/><text x="66.8982%" y="335.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (3 samples, 0.02%)</title><rect x="66.6482%" y="309" width="0.0237%" height="15" fill="rgb(229,146,28)" fg:x="8421" fg:w="3"/><text x="66.8982%" y="319.50"></text></g><g><title>clip::dsp::var_hard_clip (316 samples, 2.50%)</title><rect x="64.2105%" y="357" width="2.5010%" height="15" fill="rgb(225,31,38)" fg:x="8113" fg:w="316"/><text x="64.4605%" y="367.50">cl..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (242 samples, 1.92%)</title><rect x="64.7962%" y="341" width="1.9153%" height="15" fill="rgb(250,208,3)" fg:x="8187" fg:w="242"/><text x="65.0462%" y="351.50">s..</text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (5 samples, 0.04%)</title><rect x="66.6719%" y="325" width="0.0396%" height="15" fill="rgb(246,54,23)" fg:x="8424" fg:w="5"/><text x="66.9219%" y="335.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (36 samples, 0.28%)</title><rect x="66.7115%" y="357" width="0.2849%" height="15" fill="rgb(243,76,11)" fg:x="8429" fg:w="36"/><text x="66.9615%" y="367.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (12 samples, 0.09%)</title><rect x="66.9964%" y="357" width="0.0950%" height="15" fill="rgb(245,21,50)" fg:x="8465" fg:w="12"/><text x="67.2464%" y="367.50"></text></g><g><title>clip::Clip::param_update (2 samples, 0.02%)</title><rect x="67.1310%" y="341" width="0.0158%" height="15" fill="rgb(228,9,43)" fg:x="8482" fg:w="2"/><text x="67.3810%" y="351.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (2 samples, 0.02%)</title><rect x="67.1310%" y="325" width="0.0158%" height="15" fill="rgb(208,100,47)" fg:x="8482" fg:w="2"/><text x="67.3810%" y="335.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (11 samples, 0.09%)</title><rect x="67.1468%" y="341" width="0.0871%" height="15" fill="rgb(232,26,8)" fg:x="8484" fg:w="11"/><text x="67.3968%" y="351.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (10 samples, 0.08%)</title><rect x="67.1547%" y="325" width="0.0791%" height="15" fill="rgb(216,166,38)" fg:x="8485" fg:w="10"/><text x="67.4047%" y="335.50"></text></g><g><title>clip::processors::MainDistortionProcessor::post_gain (405 samples, 3.21%)</title><rect x="64.0602%" y="389" width="3.2054%" height="15" fill="rgb(251,202,51)" fg:x="8094" fg:w="405"/><text x="64.3102%" y="399.50">cli..</text></g><g><title>clip::processors::MainDistortionProcessor::drive_compensation (396 samples, 3.13%)</title><rect x="64.1314%" y="373" width="3.1342%" height="15" fill="rgb(254,216,34)" fg:x="8103" fg:w="396"/><text x="64.3814%" y="383.50">cli..</text></g><g><title>std::f32::&lt;impl f32&gt;::powf (22 samples, 0.17%)</title><rect x="67.0914%" y="357" width="0.1741%" height="15" fill="rgb(251,32,27)" fg:x="8477" fg:w="22"/><text x="67.3414%" y="367.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (4 samples, 0.03%)</title><rect x="67.2339%" y="341" width="0.0317%" height="15" fill="rgb(208,127,28)" fg:x="8495" fg:w="4"/><text x="67.4839%" y="351.50"></text></g><g><title>clip::processors::MainDistortionProcessor::pre_gain (10 samples, 0.08%)</title><rect x="67.2655%" y="389" width="0.0791%" height="15" fill="rgb(224,137,22)" fg:x="8499" fg:w="10"/><text x="67.5155%" y="399.50"></text></g><g><title>&lt;clip::processors::MainDistortionProcessor as clip::dsp::MonoProcessor&gt;::process_simd_4 (1,552 samples, 12.28%)</title><rect x="55.0930%" y="405" width="12.2833%" height="15" fill="rgb(254,70,32)" fg:x="6961" fg:w="1552"/><text x="55.3430%" y="415.50">&lt;clip::processors:..</text></g><g><title>wide::f32x4_::&lt;impl core::ops::arith::Mul&lt;wide::f32x4_::f32x4&gt; for f32&gt;::mul (4 samples, 0.03%)</title><rect x="67.3447%" y="389" width="0.0317%" height="15" fill="rgb(229,75,37)" fg:x="8509" fg:w="4"/><text x="67.5947%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (4 samples, 0.03%)</title><rect x="67.3447%" y="373" width="0.0317%" height="15" fill="rgb(252,64,23)" fg:x="8509" fg:w="4"/><text x="67.5947%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (4 samples, 0.03%)</title><rect x="67.3447%" y="357" width="0.0317%" height="15" fill="rgb(232,162,48)" fg:x="8509" fg:w="4"/><text x="67.5947%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (4 samples, 0.03%)</title><rect x="67.3447%" y="341" width="0.0317%" height="15" fill="rgb(246,160,12)" fg:x="8509" fg:w="4"/><text x="67.5947%" y="351.50"></text></g><g><title>[libc.so.6] (4 samples, 0.03%)</title><rect x="67.3763%" y="405" width="0.0317%" height="15" fill="rgb(247,166,0)" fg:x="8513" fg:w="4"/><text x="67.6263%" y="415.50"></text></g><g><title>[libm.so.6] (56 samples, 0.44%)</title><rect x="67.4080%" y="405" width="0.4432%" height="15" fill="rgb(249,219,21)" fg:x="8517" fg:w="56"/><text x="67.6580%" y="415.50"></text></g><g><title>&lt;f32 as nih_plug::params::smoothing::Smoothable&gt;::atomic_load (4 samples, 0.03%)</title><rect x="68.0174%" y="373" width="0.0317%" height="15" fill="rgb(205,209,3)" fg:x="8594" fg:w="4"/><text x="68.2674%" y="383.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (4 samples, 0.03%)</title><rect x="68.0174%" y="357" width="0.0317%" height="15" fill="rgb(243,44,1)" fg:x="8594" fg:w="4"/><text x="68.2674%" y="367.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (4 samples, 0.03%)</title><rect x="68.0174%" y="341" width="0.0317%" height="15" fill="rgb(206,159,16)" fg:x="8594" fg:w="4"/><text x="68.2674%" y="351.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (4 samples, 0.03%)</title><rect x="68.0174%" y="325" width="0.0317%" height="15" fill="rgb(244,77,30)" fg:x="8594" fg:w="4"/><text x="68.2674%" y="335.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (11 samples, 0.09%)</title><rect x="68.0491%" y="357" width="0.0871%" height="15" fill="rgb(218,69,12)" fg:x="8598" fg:w="11"/><text x="68.2991%" y="367.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (11 samples, 0.09%)</title><rect x="68.0491%" y="341" width="0.0871%" height="15" fill="rgb(212,87,7)" fg:x="8598" fg:w="11"/><text x="68.2991%" y="351.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (18 samples, 0.14%)</title><rect x="68.0491%" y="373" width="0.1425%" height="15" fill="rgb(245,114,25)" fg:x="8598" fg:w="18"/><text x="68.2991%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (7 samples, 0.06%)</title><rect x="68.1361%" y="357" width="0.0554%" height="15" fill="rgb(210,61,42)" fg:x="8609" fg:w="7"/><text x="68.3861%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.06%)</title><rect x="68.1361%" y="341" width="0.0554%" height="15" fill="rgb(211,52,33)" fg:x="8609" fg:w="7"/><text x="68.3861%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (3 samples, 0.02%)</title><rect x="68.1994%" y="373" width="0.0237%" height="15" fill="rgb(234,58,33)" fg:x="8617" fg:w="3"/><text x="68.4494%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="68.1994%" y="357" width="0.0237%" height="15" fill="rgb(220,115,36)" fg:x="8617" fg:w="3"/><text x="68.4494%" y="367.50"></text></g><g><title>clip::Clip::param_update (71 samples, 0.56%)</title><rect x="67.8591%" y="405" width="0.5619%" height="15" fill="rgb(243,153,54)" fg:x="8574" fg:w="71"/><text x="68.1091%" y="415.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (56 samples, 0.44%)</title><rect x="67.9778%" y="389" width="0.4432%" height="15" fill="rgb(251,47,18)" fg:x="8589" fg:w="56"/><text x="68.2278%" y="399.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::next (24 samples, 0.19%)</title><rect x="68.2311%" y="373" width="0.1899%" height="15" fill="rgb(242,102,42)" fg:x="8621" fg:w="24"/><text x="68.4811%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="389" width="0.0237%" height="15" fill="rgb(234,31,38)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="399.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="373" width="0.0237%" height="15" fill="rgb(221,117,51)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="383.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="357" width="0.0237%" height="15" fill="rgb(212,20,18)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="341" width="0.0237%" height="15" fill="rgb(245,133,36)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="325" width="0.0237%" height="15" fill="rgb(212,6,19)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="309" width="0.0237%" height="15" fill="rgb(218,1,36)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="293" width="0.0237%" height="15" fill="rgb(246,84,54)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.1385%" y="277" width="0.0237%" height="15" fill="rgb(242,110,6)" fg:x="8862" fg:w="3"/><text x="70.3885%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="70.1464%" y="261" width="0.0158%" height="15" fill="rgb(214,47,5)" fg:x="8863" fg:w="2"/><text x="70.3964%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="70.1464%" y="245" width="0.0158%" height="15" fill="rgb(218,159,25)" fg:x="8863" fg:w="2"/><text x="70.3964%" y="255.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (4 samples, 0.03%)</title><rect x="70.1622%" y="389" width="0.0317%" height="15" fill="rgb(215,211,28)" fg:x="8865" fg:w="4"/><text x="70.4122%" y="399.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_2x (271 samples, 2.14%)</title><rect x="68.4211%" y="405" width="2.1448%" height="15" fill="rgb(238,59,32)" fg:x="8645" fg:w="271"/><text x="68.6711%" y="415.50">c..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.37%)</title><rect x="70.1939%" y="389" width="0.3720%" height="15" fill="rgb(226,82,3)" fg:x="8869" fg:w="47"/><text x="70.4439%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (47 samples, 0.37%)</title><rect x="70.1939%" y="373" width="0.3720%" height="15" fill="rgb(240,164,32)" fg:x="8869" fg:w="47"/><text x="70.4439%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (31 samples, 0.25%)</title><rect x="70.3205%" y="357" width="0.2454%" height="15" fill="rgb(232,46,7)" fg:x="8885" fg:w="31"/><text x="70.5705%" y="367.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="341" width="0.0237%" height="15" fill="rgb(229,129,53)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="351.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="325" width="0.0237%" height="15" fill="rgb(234,188,29)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="335.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="309" width="0.0237%" height="15" fill="rgb(246,141,4)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="293" width="0.0237%" height="15" fill="rgb(229,23,39)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="303.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="277" width="0.0237%" height="15" fill="rgb(206,12,3)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="287.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="261" width="0.0237%" height="15" fill="rgb(252,226,20)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="70.5421%" y="245" width="0.0237%" height="15" fill="rgb(216,123,35)" fg:x="8913" fg:w="3"/><text x="70.7921%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="70.5501%" y="229" width="0.0158%" height="15" fill="rgb(212,68,40)" fg:x="8914" fg:w="2"/><text x="70.8001%" y="239.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (25 samples, 0.20%)</title><rect x="70.9300%" y="389" width="0.1979%" height="15" fill="rgb(254,125,32)" fg:x="8962" fg:w="25"/><text x="71.1800%" y="399.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (730 samples, 5.78%)</title><rect x="70.5659%" y="405" width="5.7776%" height="15" fill="rgb(253,97,22)" fg:x="8916" fg:w="730"/><text x="70.8159%" y="415.50">clip::d..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (659 samples, 5.22%)</title><rect x="71.1278%" y="389" width="5.2157%" height="15" fill="rgb(241,101,14)" fg:x="8987" fg:w="659"/><text x="71.3778%" y="399.50">clip::..</text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="76.2643%" y="373" width="0.0791%" height="15" fill="rgb(238,103,29)" fg:x="9636" fg:w="10"/><text x="76.5143%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="76.2643%" y="357" width="0.0791%" height="15" fill="rgb(233,195,47)" fg:x="9636" fg:w="10"/><text x="76.5143%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="76.2643%" y="341" width="0.0791%" height="15" fill="rgb(246,218,30)" fg:x="9636" fg:w="10"/><text x="76.5143%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="76.2643%" y="325" width="0.0791%" height="15" fill="rgb(219,145,47)" fg:x="9636" fg:w="10"/><text x="76.5143%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="76.2643%" y="309" width="0.0791%" height="15" fill="rgb(243,12,26)" fg:x="9636" fg:w="10"/><text x="76.5143%" y="319.50"></text></g><g><title>[unknown] (9 samples, 0.07%)</title><rect x="76.2723%" y="293" width="0.0712%" height="15" fill="rgb(214,87,16)" fg:x="9637" fg:w="9"/><text x="76.5223%" y="303.50"></text></g><g><title>[unknown] (9 samples, 0.07%)</title><rect x="76.2723%" y="277" width="0.0712%" height="15" fill="rgb(208,99,42)" fg:x="9637" fg:w="9"/><text x="76.5223%" y="287.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="76.2802%" y="261" width="0.0633%" height="15" fill="rgb(253,99,2)" fg:x="9638" fg:w="8"/><text x="76.5302%" y="271.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="76.2802%" y="245" width="0.0633%" height="15" fill="rgb(220,168,23)" fg:x="9638" fg:w="8"/><text x="76.5302%" y="255.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="76.2802%" y="229" width="0.0633%" height="15" fill="rgb(242,38,24)" fg:x="9638" fg:w="8"/><text x="76.5302%" y="239.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="76.2802%" y="213" width="0.0633%" height="15" fill="rgb(225,182,9)" fg:x="9638" fg:w="8"/><text x="76.5302%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="76.3039%" y="197" width="0.0396%" height="15" fill="rgb(243,178,37)" fg:x="9641" fg:w="5"/><text x="76.5539%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="76.3039%" y="181" width="0.0396%" height="15" fill="rgb(232,139,19)" fg:x="9641" fg:w="5"/><text x="76.5539%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="76.3039%" y="165" width="0.0396%" height="15" fill="rgb(225,201,24)" fg:x="9641" fg:w="5"/><text x="76.5539%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="76.3118%" y="149" width="0.0317%" height="15" fill="rgb(221,47,46)" fg:x="9642" fg:w="4"/><text x="76.5618%" y="159.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="76.3118%" y="133" width="0.0317%" height="15" fill="rgb(249,23,13)" fg:x="9642" fg:w="4"/><text x="76.5618%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="76.3197%" y="117" width="0.0237%" height="15" fill="rgb(219,9,5)" fg:x="9643" fg:w="3"/><text x="76.5697%" y="127.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (2 samples, 0.02%)</title><rect x="80.1029%" y="389" width="0.0158%" height="15" fill="rgb(254,171,16)" fg:x="10121" fg:w="2"/><text x="80.3529%" y="399.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (126 samples, 1.00%)</title><rect x="80.1187%" y="389" width="0.9972%" height="15" fill="rgb(230,171,20)" fg:x="10123" fg:w="126"/><text x="80.3687%" y="399.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_2x (670 samples, 5.30%)</title><rect x="76.3435%" y="405" width="5.3027%" height="15" fill="rgb(210,71,41)" fg:x="9646" fg:w="670"/><text x="76.5935%" y="415.50">clip::..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (67 samples, 0.53%)</title><rect x="81.1159%" y="389" width="0.5303%" height="15" fill="rgb(206,173,20)" fg:x="10249" fg:w="67"/><text x="81.3659%" y="399.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (67 samples, 0.53%)</title><rect x="81.1159%" y="373" width="0.5303%" height="15" fill="rgb(233,88,34)" fg:x="10249" fg:w="67"/><text x="81.3659%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (57 samples, 0.45%)</title><rect x="81.1951%" y="357" width="0.4511%" height="15" fill="rgb(223,209,46)" fg:x="10259" fg:w="57"/><text x="81.4451%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="341" width="0.0396%" height="15" fill="rgb(250,43,18)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="325" width="0.0396%" height="15" fill="rgb(208,13,10)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="309" width="0.0396%" height="15" fill="rgb(212,200,36)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="293" width="0.0396%" height="15" fill="rgb(225,90,30)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="277" width="0.0396%" height="15" fill="rgb(236,182,39)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="261" width="0.0396%" height="15" fill="rgb(212,144,35)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="245" width="0.0396%" height="15" fill="rgb(228,63,44)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="81.6066%" y="229" width="0.0396%" height="15" fill="rgb(228,109,6)" fg:x="10311" fg:w="5"/><text x="81.8566%" y="239.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.6146%" y="213" width="0.0317%" height="15" fill="rgb(238,117,24)" fg:x="10312" fg:w="4"/><text x="81.8646%" y="223.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.6146%" y="197" width="0.0317%" height="15" fill="rgb(242,26,26)" fg:x="10312" fg:w="4"/><text x="81.8646%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.6146%" y="181" width="0.0317%" height="15" fill="rgb(221,92,48)" fg:x="10312" fg:w="4"/><text x="81.8646%" y="191.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.6146%" y="165" width="0.0317%" height="15" fill="rgb(209,209,32)" fg:x="10312" fg:w="4"/><text x="81.8646%" y="175.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="81.6146%" y="149" width="0.0317%" height="15" fill="rgb(221,70,22)" fg:x="10312" fg:w="4"/><text x="81.8646%" y="159.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.6225%" y="133" width="0.0237%" height="15" fill="rgb(248,145,5)" fg:x="10313" fg:w="3"/><text x="81.8725%" y="143.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.6225%" y="117" width="0.0237%" height="15" fill="rgb(226,116,26)" fg:x="10313" fg:w="3"/><text x="81.8725%" y="127.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.6225%" y="101" width="0.0237%" height="15" fill="rgb(244,5,17)" fg:x="10313" fg:w="3"/><text x="81.8725%" y="111.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.6225%" y="85" width="0.0237%" height="15" fill="rgb(252,159,33)" fg:x="10313" fg:w="3"/><text x="81.8725%" y="95.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (15 samples, 0.12%)</title><rect x="84.2897%" y="389" width="0.1187%" height="15" fill="rgb(206,71,0)" fg:x="10650" fg:w="15"/><text x="84.5397%" y="399.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (569 samples, 4.50%)</title><rect x="81.6462%" y="405" width="4.5034%" height="15" fill="rgb(233,118,54)" fg:x="10316" fg:w="569"/><text x="81.8962%" y="415.50">clip:..</text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (220 samples, 1.74%)</title><rect x="84.4084%" y="389" width="1.7412%" height="15" fill="rgb(234,83,48)" fg:x="10665" fg:w="220"/><text x="84.6584%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (19 samples, 0.15%)</title><rect x="86.3158%" y="389" width="0.1504%" height="15" fill="rgb(228,3,54)" fg:x="10906" fg:w="19"/><text x="86.5658%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (19 samples, 0.15%)</title><rect x="86.3158%" y="373" width="0.1504%" height="15" fill="rgb(226,155,13)" fg:x="10906" fg:w="19"/><text x="86.5658%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (19 samples, 0.15%)</title><rect x="86.3158%" y="357" width="0.1504%" height="15" fill="rgb(241,28,37)" fg:x="10906" fg:w="19"/><text x="86.5658%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (23 samples, 0.18%)</title><rect x="86.4662%" y="389" width="0.1820%" height="15" fill="rgb(233,93,10)" fg:x="10925" fg:w="23"/><text x="86.7162%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (22 samples, 0.17%)</title><rect x="86.4741%" y="373" width="0.1741%" height="15" fill="rgb(225,113,19)" fg:x="10926" fg:w="22"/><text x="86.7241%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (22 samples, 0.17%)</title><rect x="86.4741%" y="357" width="0.1741%" height="15" fill="rgb(241,2,18)" fg:x="10926" fg:w="22"/><text x="86.7241%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (11 samples, 0.09%)</title><rect x="86.6482%" y="389" width="0.0871%" height="15" fill="rgb(228,207,21)" fg:x="10948" fg:w="11"/><text x="86.8982%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (11 samples, 0.09%)</title><rect x="86.6482%" y="373" width="0.0871%" height="15" fill="rgb(213,211,35)" fg:x="10948" fg:w="11"/><text x="86.8982%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (11 samples, 0.09%)</title><rect x="86.6482%" y="357" width="0.0871%" height="15" fill="rgb(209,83,10)" fg:x="10948" fg:w="11"/><text x="86.8982%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitOr&gt;::bitor (3 samples, 0.02%)</title><rect x="86.7353%" y="389" width="0.0237%" height="15" fill="rgb(209,164,1)" fg:x="10959" fg:w="3"/><text x="86.9853%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::bitor_m128 (3 samples, 0.02%)</title><rect x="86.7353%" y="373" width="0.0237%" height="15" fill="rgb(213,184,43)" fg:x="10959" fg:w="3"/><text x="86.9853%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_or_ps (3 samples, 0.02%)</title><rect x="86.7353%" y="357" width="0.0237%" height="15" fill="rgb(231,61,34)" fg:x="10959" fg:w="3"/><text x="86.9853%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (2 samples, 0.02%)</title><rect x="86.7590%" y="389" width="0.0158%" height="15" fill="rgb(235,75,3)" fg:x="10962" fg:w="2"/><text x="87.0090%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (2 samples, 0.02%)</title><rect x="86.7590%" y="373" width="0.0158%" height="15" fill="rgb(220,106,47)" fg:x="10962" fg:w="2"/><text x="87.0090%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (2 samples, 0.02%)</title><rect x="86.7590%" y="357" width="0.0158%" height="15" fill="rgb(210,196,33)" fg:x="10962" fg:w="2"/><text x="87.0090%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpGt&gt;::cmp_gt (17 samples, 0.13%)</title><rect x="86.7748%" y="389" width="0.1345%" height="15" fill="rgb(229,154,42)" fg:x="10964" fg:w="17"/><text x="87.0248%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_gt_mask_m128 (17 samples, 0.13%)</title><rect x="86.7748%" y="373" width="0.1345%" height="15" fill="rgb(228,114,26)" fg:x="10964" fg:w="17"/><text x="87.0248%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpgt_ps (17 samples, 0.13%)</title><rect x="86.7748%" y="357" width="0.1345%" height="15" fill="rgb(208,144,1)" fg:x="10964" fg:w="17"/><text x="87.0248%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpLt&gt;::cmp_lt (14 samples, 0.11%)</title><rect x="86.9094%" y="389" width="0.1108%" height="15" fill="rgb(239,112,37)" fg:x="10981" fg:w="14"/><text x="87.1594%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_lt_mask_m128 (14 samples, 0.11%)</title><rect x="86.9094%" y="373" width="0.1108%" height="15" fill="rgb(210,96,50)" fg:x="10981" fg:w="14"/><text x="87.1594%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmplt_ps (14 samples, 0.11%)</title><rect x="86.9094%" y="357" width="0.1108%" height="15" fill="rgb(222,178,2)" fg:x="10981" fg:w="14"/><text x="87.1594%" y="367.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::arith::Add&gt;::add (4 samples, 0.03%)</title><rect x="87.0202%" y="389" width="0.0317%" height="15" fill="rgb(226,74,18)" fg:x="10995" fg:w="4"/><text x="87.2702%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse2::add_i32_m128i (4 samples, 0.03%)</title><rect x="87.0202%" y="373" width="0.0317%" height="15" fill="rgb(225,67,54)" fg:x="10995" fg:w="4"/><text x="87.2702%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_add_epi32 (4 samples, 0.03%)</title><rect x="87.0202%" y="357" width="0.0317%" height="15" fill="rgb(251,92,32)" fg:x="10995" fg:w="4"/><text x="87.2702%" y="367.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i32x4 (3 samples, 0.02%)</title><rect x="87.0281%" y="341" width="0.0237%" height="15" fill="rgb(228,149,22)" fg:x="10996" fg:w="3"/><text x="87.2781%" y="351.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (6 samples, 0.05%)</title><rect x="87.0518%" y="389" width="0.0475%" height="15" fill="rgb(243,54,13)" fg:x="10999" fg:w="6"/><text x="87.3018%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse2::shl_all_u32_m128i (6 samples, 0.05%)</title><rect x="87.0518%" y="373" width="0.0475%" height="15" fill="rgb(243,180,28)" fg:x="10999" fg:w="6"/><text x="87.3018%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sll_epi32 (6 samples, 0.05%)</title><rect x="87.0518%" y="357" width="0.0475%" height="15" fill="rgb(208,167,24)" fg:x="10999" fg:w="6"/><text x="87.3018%" y="367.50"></text></g><g><title>wide::f32x4_::f32x4::all (2 samples, 0.02%)</title><rect x="87.0993%" y="389" width="0.0158%" height="15" fill="rgb(245,73,45)" fg:x="11005" fg:w="2"/><text x="87.3493%" y="399.50"></text></g><g><title>wide::f32x4_::f32x4::move_mask (2 samples, 0.02%)</title><rect x="87.0993%" y="373" width="0.0158%" height="15" fill="rgb(237,203,48)" fg:x="11005" fg:w="2"/><text x="87.3493%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::move_mask_m128 (2 samples, 0.02%)</title><rect x="87.0993%" y="357" width="0.0158%" height="15" fill="rgb(211,197,16)" fg:x="11005" fg:w="2"/><text x="87.3493%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_movemask_ps (2 samples, 0.02%)</title><rect x="87.0993%" y="341" width="0.0158%" height="15" fill="rgb(243,99,51)" fg:x="11005" fg:w="2"/><text x="87.3493%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (2 samples, 0.02%)</title><rect x="87.1152%" y="357" width="0.0158%" height="15" fill="rgb(215,123,29)" fg:x="11007" fg:w="2"/><text x="87.3652%" y="367.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (2 samples, 0.02%)</title><rect x="87.1152%" y="341" width="0.0158%" height="15" fill="rgb(239,186,37)" fg:x="11007" fg:w="2"/><text x="87.3652%" y="351.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (2 samples, 0.02%)</title><rect x="87.1152%" y="325" width="0.0158%" height="15" fill="rgb(252,136,39)" fg:x="11007" fg:w="2"/><text x="87.3652%" y="335.50"></text></g><g><title>wide::f32x4_::f32x4::blend (24 samples, 0.19%)</title><rect x="87.1152%" y="389" width="0.1899%" height="15" fill="rgb(223,213,32)" fg:x="11007" fg:w="24"/><text x="87.3652%" y="399.50"></text></g><g><title>wide::generic_bit_blend (24 samples, 0.19%)</title><rect x="87.1152%" y="373" width="0.1899%" height="15" fill="rgb(233,115,5)" fg:x="11007" fg:w="24"/><text x="87.3652%" y="383.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (22 samples, 0.17%)</title><rect x="87.1310%" y="357" width="0.1741%" height="15" fill="rgb(207,226,44)" fg:x="11009" fg:w="22"/><text x="87.3810%" y="367.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (22 samples, 0.17%)</title><rect x="87.1310%" y="341" width="0.1741%" height="15" fill="rgb(208,126,0)" fg:x="11009" fg:w="22"/><text x="87.3810%" y="351.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (22 samples, 0.17%)</title><rect x="87.1310%" y="325" width="0.1741%" height="15" fill="rgb(244,66,21)" fg:x="11009" fg:w="22"/><text x="87.3810%" y="335.50"></text></g><g><title>wide::f32x4_::f32x4::exponent (9 samples, 0.07%)</title><rect x="87.3051%" y="389" width="0.0712%" height="15" fill="rgb(222,97,12)" fg:x="11031" fg:w="9"/><text x="87.5551%" y="399.50"></text></g><g><title>&lt;wide::u32x4_::u32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (8 samples, 0.06%)</title><rect x="87.3130%" y="373" width="0.0633%" height="15" fill="rgb(219,213,19)" fg:x="11032" fg:w="8"/><text x="87.5630%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_u32_m128i (8 samples, 0.06%)</title><rect x="87.3130%" y="357" width="0.0633%" height="15" fill="rgb(252,169,30)" fg:x="11032" fg:w="8"/><text x="87.5630%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_srl_epi32 (8 samples, 0.06%)</title><rect x="87.3130%" y="341" width="0.0633%" height="15" fill="rgb(206,32,51)" fg:x="11032" fg:w="8"/><text x="87.5630%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::is_finite (25 samples, 0.20%)</title><rect x="87.3763%" y="389" width="0.1979%" height="15" fill="rgb(250,172,42)" fg:x="11040" fg:w="25"/><text x="87.6263%" y="399.50"></text></g><g><title>wide::u32x4_::u32x4::cmp_eq (25 samples, 0.20%)</title><rect x="87.3763%" y="373" width="0.1979%" height="15" fill="rgb(209,34,43)" fg:x="11040" fg:w="25"/><text x="87.6263%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (25 samples, 0.20%)</title><rect x="87.3763%" y="357" width="0.1979%" height="15" fill="rgb(223,11,35)" fg:x="11040" fg:w="25"/><text x="87.6263%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (25 samples, 0.20%)</title><rect x="87.3763%" y="341" width="0.1979%" height="15" fill="rgb(251,219,26)" fg:x="11040" fg:w="25"/><text x="87.6263%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (33 samples, 0.26%)</title><rect x="87.5821%" y="373" width="0.2612%" height="15" fill="rgb(231,119,3)" fg:x="11066" fg:w="33"/><text x="87.8321%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (33 samples, 0.26%)</title><rect x="87.5821%" y="357" width="0.2612%" height="15" fill="rgb(216,97,11)" fg:x="11066" fg:w="33"/><text x="87.8321%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (33 samples, 0.26%)</title><rect x="87.5821%" y="341" width="0.2612%" height="15" fill="rgb(223,59,9)" fg:x="11066" fg:w="33"/><text x="87.8321%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::mul_add (71 samples, 0.56%)</title><rect x="87.5821%" y="389" width="0.5619%" height="15" fill="rgb(233,93,31)" fg:x="11066" fg:w="71"/><text x="87.8321%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (38 samples, 0.30%)</title><rect x="87.8433%" y="373" width="0.3008%" height="15" fill="rgb(239,81,33)" fg:x="11099" fg:w="38"/><text x="88.0933%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (38 samples, 0.30%)</title><rect x="87.8433%" y="357" width="0.3008%" height="15" fill="rgb(213,120,34)" fg:x="11099" fg:w="38"/><text x="88.0933%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (38 samples, 0.30%)</title><rect x="87.8433%" y="341" width="0.3008%" height="15" fill="rgb(243,49,53)" fg:x="11099" fg:w="38"/><text x="88.0933%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (10 samples, 0.08%)</title><rect x="88.1440%" y="373" width="0.0791%" height="15" fill="rgb(247,216,33)" fg:x="11137" fg:w="10"/><text x="88.3940%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (10 samples, 0.08%)</title><rect x="88.1440%" y="357" width="0.0791%" height="15" fill="rgb(226,26,14)" fg:x="11137" fg:w="10"/><text x="88.3940%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (10 samples, 0.08%)</title><rect x="88.1440%" y="341" width="0.0791%" height="15" fill="rgb(215,49,53)" fg:x="11137" fg:w="10"/><text x="88.3940%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::mul_neg_add (22 samples, 0.17%)</title><rect x="88.1440%" y="389" width="0.1741%" height="15" fill="rgb(245,162,40)" fg:x="11137" fg:w="22"/><text x="88.3940%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (12 samples, 0.09%)</title><rect x="88.2232%" y="373" width="0.0950%" height="15" fill="rgb(229,68,17)" fg:x="11147" fg:w="12"/><text x="88.4732%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (12 samples, 0.09%)</title><rect x="88.2232%" y="357" width="0.0950%" height="15" fill="rgb(213,182,10)" fg:x="11147" fg:w="12"/><text x="88.4732%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (12 samples, 0.09%)</title><rect x="88.2232%" y="341" width="0.0950%" height="15" fill="rgb(245,125,30)" fg:x="11147" fg:w="12"/><text x="88.4732%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (5 samples, 0.04%)</title><rect x="88.3182%" y="373" width="0.0396%" height="15" fill="rgb(232,202,2)" fg:x="11159" fg:w="5"/><text x="88.5682%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (5 samples, 0.04%)</title><rect x="88.3182%" y="357" width="0.0396%" height="15" fill="rgb(237,140,51)" fg:x="11159" fg:w="5"/><text x="88.5682%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (5 samples, 0.04%)</title><rect x="88.3182%" y="341" width="0.0396%" height="15" fill="rgb(236,157,25)" fg:x="11159" fg:w="5"/><text x="88.5682%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::mul_sub (14 samples, 0.11%)</title><rect x="88.3182%" y="389" width="0.1108%" height="15" fill="rgb(219,209,0)" fg:x="11159" fg:w="14"/><text x="88.5682%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (9 samples, 0.07%)</title><rect x="88.3577%" y="373" width="0.0712%" height="15" fill="rgb(240,116,54)" fg:x="11164" fg:w="9"/><text x="88.6077%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (9 samples, 0.07%)</title><rect x="88.3577%" y="357" width="0.0712%" height="15" fill="rgb(216,10,36)" fg:x="11164" fg:w="9"/><text x="88.6077%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (9 samples, 0.07%)</title><rect x="88.3577%" y="341" width="0.0712%" height="15" fill="rgb(222,72,44)" fg:x="11164" fg:w="9"/><text x="88.6077%" y="351.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as wide::CmpEq&gt;::cmp_eq (4 samples, 0.03%)</title><rect x="88.4290%" y="373" width="0.0317%" height="15" fill="rgb(232,159,9)" fg:x="11173" fg:w="4"/><text x="88.6790%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (4 samples, 0.03%)</title><rect x="88.4290%" y="357" width="0.0317%" height="15" fill="rgb(210,39,32)" fg:x="11173" fg:w="4"/><text x="88.6790%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (4 samples, 0.03%)</title><rect x="88.4290%" y="341" width="0.0317%" height="15" fill="rgb(216,194,45)" fg:x="11173" fg:w="4"/><text x="88.6790%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse2::convert_to_m128_from_i32_m128i (5 samples, 0.04%)</title><rect x="88.4606%" y="373" width="0.0396%" height="15" fill="rgb(218,18,35)" fg:x="11177" fg:w="5"/><text x="88.7106%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cvtepi32_ps (5 samples, 0.04%)</title><rect x="88.4606%" y="357" width="0.0396%" height="15" fill="rgb(207,83,51)" fg:x="11177" fg:w="5"/><text x="88.7106%" y="367.50"></text></g><g><title>wide::f32x4_::f32x4::round (29 samples, 0.23%)</title><rect x="88.4290%" y="389" width="0.2295%" height="15" fill="rgb(225,63,43)" fg:x="11173" fg:w="29"/><text x="88.6790%" y="399.50"></text></g><g><title>wide::f32x4_::f32x4::blend (20 samples, 0.16%)</title><rect x="88.5002%" y="373" width="0.1583%" height="15" fill="rgb(207,57,36)" fg:x="11182" fg:w="20"/><text x="88.7502%" y="383.50"></text></g><g><title>wide::generic_bit_blend (20 samples, 0.16%)</title><rect x="88.5002%" y="357" width="0.1583%" height="15" fill="rgb(216,99,33)" fg:x="11182" fg:w="20"/><text x="88.7502%" y="367.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (20 samples, 0.16%)</title><rect x="88.5002%" y="341" width="0.1583%" height="15" fill="rgb(225,42,16)" fg:x="11182" fg:w="20"/><text x="88.7502%" y="351.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (20 samples, 0.16%)</title><rect x="88.5002%" y="325" width="0.1583%" height="15" fill="rgb(220,201,45)" fg:x="11182" fg:w="20"/><text x="88.7502%" y="335.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (20 samples, 0.16%)</title><rect x="88.5002%" y="309" width="0.1583%" height="15" fill="rgb(225,33,4)" fg:x="11182" fg:w="20"/><text x="88.7502%" y="319.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (2 samples, 0.02%)</title><rect x="88.6585%" y="373" width="0.0158%" height="15" fill="rgb(224,33,50)" fg:x="11202" fg:w="2"/><text x="88.9085%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (2 samples, 0.02%)</title><rect x="88.6585%" y="357" width="0.0158%" height="15" fill="rgb(246,198,51)" fg:x="11202" fg:w="2"/><text x="88.9085%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (2 samples, 0.02%)</title><rect x="88.6585%" y="341" width="0.0158%" height="15" fill="rgb(205,22,4)" fg:x="11202" fg:w="2"/><text x="88.9085%" y="351.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (2 samples, 0.02%)</title><rect x="88.6743%" y="373" width="0.0158%" height="15" fill="rgb(206,3,8)" fg:x="11204" fg:w="2"/><text x="88.9243%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (2 samples, 0.02%)</title><rect x="88.6743%" y="357" width="0.0158%" height="15" fill="rgb(251,23,15)" fg:x="11204" fg:w="2"/><text x="88.9243%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (2 samples, 0.02%)</title><rect x="88.6743%" y="341" width="0.0158%" height="15" fill="rgb(252,88,28)" fg:x="11204" fg:w="2"/><text x="88.9243%" y="351.50"></text></g><g><title>wide::f32x4_::f32x4::round_int (5 samples, 0.04%)</title><rect x="88.6585%" y="389" width="0.0396%" height="15" fill="rgb(212,127,14)" fg:x="11202" fg:w="5"/><text x="88.9085%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpEq&gt;::cmp_eq (2 samples, 0.02%)</title><rect x="88.6981%" y="373" width="0.0158%" height="15" fill="rgb(247,145,37)" fg:x="11207" fg:w="2"/><text x="88.9481%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_eq_mask_m128 (2 samples, 0.02%)</title><rect x="88.6981%" y="357" width="0.0158%" height="15" fill="rgb(209,117,53)" fg:x="11207" fg:w="2"/><text x="88.9481%" y="367.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmpeq_ps (2 samples, 0.02%)</title><rect x="88.6981%" y="341" width="0.0158%" height="15" fill="rgb(212,90,42)" fg:x="11207" fg:w="2"/><text x="88.9481%" y="351.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (4,304 samples, 34.06%)</title><rect x="54.7685%" y="421" width="34.0641%" height="15" fill="rgb(218,164,37)" fg:x="6920" fg:w="4304"/><text x="55.0185%" y="431.50">&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor..</text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (337 samples, 2.67%)</title><rect x="86.1654%" y="405" width="2.6672%" height="15" fill="rgb(246,65,34)" fg:x="10887" fg:w="337"/><text x="86.4154%" y="415.50">wi..</text></g><g><title>wide::f32x4_::f32x4::sign_bit (17 samples, 0.13%)</title><rect x="88.6981%" y="389" width="0.1345%" height="15" fill="rgb(231,100,33)" fg:x="11207" fg:w="17"/><text x="88.9481%" y="399.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (15 samples, 0.12%)</title><rect x="88.7139%" y="373" width="0.1187%" height="15" fill="rgb(228,126,14)" fg:x="11209" fg:w="15"/><text x="88.9639%" y="383.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (15 samples, 0.12%)</title><rect x="88.7139%" y="357" width="0.1187%" height="15" fill="rgb(215,173,21)" fg:x="11209" fg:w="15"/><text x="88.9639%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (15 samples, 0.12%)</title><rect x="88.7139%" y="341" width="0.1187%" height="15" fill="rgb(210,6,40)" fg:x="11209" fg:w="15"/><text x="88.9639%" y="351.50"></text></g><g><title>clip::Clip::audio_update (4,306 samples, 34.08%)</title><rect x="54.7685%" y="437" width="34.0799%" height="15" fill="rgb(212,48,18)" fg:x="6920" fg:w="4306"/><text x="55.0185%" y="447.50">clip::Clip::audio_update</text></g><g><title>clip::Clip::param_update (2 samples, 0.02%)</title><rect x="88.8484%" y="437" width="0.0158%" height="15" fill="rgb(230,214,11)" fg:x="11226" fg:w="2"/><text x="89.0984%" y="447.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::next (2 samples, 0.02%)</title><rect x="88.8484%" y="421" width="0.0158%" height="15" fill="rgb(254,105,39)" fg:x="11226" fg:w="2"/><text x="89.0984%" y="431.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (3 samples, 0.02%)</title><rect x="88.8959%" y="421" width="0.0237%" height="15" fill="rgb(245,158,5)" fg:x="11232" fg:w="3"/><text x="89.1459%" y="431.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (20 samples, 0.16%)</title><rect x="88.8643%" y="437" width="0.1583%" height="15" fill="rgb(249,208,11)" fg:x="11228" fg:w="20"/><text x="89.1143%" y="447.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (13 samples, 0.10%)</title><rect x="88.9197%" y="421" width="0.1029%" height="15" fill="rgb(210,39,28)" fg:x="11235" fg:w="13"/><text x="89.1697%" y="431.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (5 samples, 0.04%)</title><rect x="89.2283%" y="421" width="0.0396%" height="15" fill="rgb(211,56,53)" fg:x="11274" fg:w="5"/><text x="89.4783%" y="431.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (55 samples, 0.44%)</title><rect x="89.0226%" y="437" width="0.4353%" height="15" fill="rgb(226,201,30)" fg:x="11248" fg:w="55"/><text x="89.2726%" y="447.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (24 samples, 0.19%)</title><rect x="89.2679%" y="421" width="0.1899%" height="15" fill="rgb(239,101,34)" fg:x="11279" fg:w="24"/><text x="89.5179%" y="431.50"></text></g><g><title>nih_plug::context::process::Transport::new (2 samples, 0.02%)</title><rect x="89.4579%" y="437" width="0.0158%" height="15" fill="rgb(226,209,5)" fg:x="11303" fg:w="2"/><text x="89.7079%" y="447.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (2 samples, 0.02%)</title><rect x="89.5133%" y="421" width="0.0158%" height="15" fill="rgb(250,105,47)" fg:x="11310" fg:w="2"/><text x="89.7633%" y="431.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (2 samples, 0.02%)</title><rect x="89.5133%" y="405" width="0.0158%" height="15" fill="rgb(230,72,3)" fg:x="11310" fg:w="2"/><text x="89.7633%" y="415.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (2 samples, 0.02%)</title><rect x="89.5133%" y="389" width="0.0158%" height="15" fill="rgb(232,218,39)" fg:x="11310" fg:w="2"/><text x="89.7633%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (5 samples, 0.04%)</title><rect x="89.5291%" y="421" width="0.0396%" height="15" fill="rgb(248,166,6)" fg:x="11312" fg:w="5"/><text x="89.7791%" y="431.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (4 samples, 0.03%)</title><rect x="89.5370%" y="405" width="0.0317%" height="15" fill="rgb(247,89,20)" fg:x="11313" fg:w="4"/><text x="89.7870%" y="415.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (4 samples, 0.03%)</title><rect x="89.5370%" y="389" width="0.0317%" height="15" fill="rgb(248,130,54)" fg:x="11313" fg:w="4"/><text x="89.7870%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitOr&gt;::bitor (4 samples, 0.03%)</title><rect x="89.5687%" y="421" width="0.0317%" height="15" fill="rgb(234,196,4)" fg:x="11317" fg:w="4"/><text x="89.8187%" y="431.50"></text></g><g><title>safe_arch::x86_x64::sse::bitor_m128 (4 samples, 0.03%)</title><rect x="89.5687%" y="405" width="0.0317%" height="15" fill="rgb(250,143,31)" fg:x="11317" fg:w="4"/><text x="89.8187%" y="415.50"></text></g><g><title>core::core_arch::x86::sse::_mm_or_ps (4 samples, 0.03%)</title><rect x="89.5687%" y="389" width="0.0317%" height="15" fill="rgb(211,110,34)" fg:x="11317" fg:w="4"/><text x="89.8187%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as wide::CmpLt&gt;::cmp_lt (3 samples, 0.02%)</title><rect x="89.6161%" y="421" width="0.0237%" height="15" fill="rgb(215,124,48)" fg:x="11323" fg:w="3"/><text x="89.8661%" y="431.50"></text></g><g><title>safe_arch::x86_x64::sse::cmp_lt_mask_m128 (3 samples, 0.02%)</title><rect x="89.6161%" y="405" width="0.0237%" height="15" fill="rgb(216,46,13)" fg:x="11323" fg:w="3"/><text x="89.8661%" y="415.50"></text></g><g><title>core::core_arch::x86::sse::_mm_cmplt_ps (3 samples, 0.02%)</title><rect x="89.6161%" y="389" width="0.0237%" height="15" fill="rgb(205,184,25)" fg:x="11323" fg:w="3"/><text x="89.8661%" y="399.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (2 samples, 0.02%)</title><rect x="89.6478%" y="421" width="0.0158%" height="15" fill="rgb(228,1,10)" fg:x="11327" fg:w="2"/><text x="89.8978%" y="431.50"></text></g><g><title>safe_arch::x86_x64::sse2::shl_all_u32_m128i (2 samples, 0.02%)</title><rect x="89.6478%" y="405" width="0.0158%" height="15" fill="rgb(213,116,27)" fg:x="11327" fg:w="2"/><text x="89.8978%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sll_epi32 (2 samples, 0.02%)</title><rect x="89.6478%" y="389" width="0.0158%" height="15" fill="rgb(241,95,50)" fg:x="11327" fg:w="2"/><text x="89.8978%" y="399.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitAnd&gt;::bitand (5 samples, 0.04%)</title><rect x="89.6636%" y="389" width="0.0396%" height="15" fill="rgb(238,48,32)" fg:x="11329" fg:w="5"/><text x="89.9136%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::bitand_m128 (5 samples, 0.04%)</title><rect x="89.6636%" y="373" width="0.0396%" height="15" fill="rgb(235,113,49)" fg:x="11329" fg:w="5"/><text x="89.9136%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_and_ps (5 samples, 0.04%)</title><rect x="89.6636%" y="357" width="0.0396%" height="15" fill="rgb(205,127,43)" fg:x="11329" fg:w="5"/><text x="89.9136%" y="367.50"></text></g><g><title>wide::f32x4_::f32x4::blend (8 samples, 0.06%)</title><rect x="89.6636%" y="421" width="0.0633%" height="15" fill="rgb(250,162,2)" fg:x="11329" fg:w="8"/><text x="89.9136%" y="431.50"></text></g><g><title>wide::generic_bit_blend (8 samples, 0.06%)</title><rect x="89.6636%" y="405" width="0.0633%" height="15" fill="rgb(220,13,41)" fg:x="11329" fg:w="8"/><text x="89.9136%" y="415.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitXor&gt;::bitxor (3 samples, 0.02%)</title><rect x="89.7032%" y="389" width="0.0237%" height="15" fill="rgb(249,221,25)" fg:x="11334" fg:w="3"/><text x="89.9532%" y="399.50"></text></g><g><title>safe_arch::x86_x64::sse::bitxor_m128 (3 samples, 0.02%)</title><rect x="89.7032%" y="373" width="0.0237%" height="15" fill="rgb(215,208,19)" fg:x="11334" fg:w="3"/><text x="89.9532%" y="383.50"></text></g><g><title>core::core_arch::x86::sse::_mm_xor_ps (3 samples, 0.02%)</title><rect x="89.7032%" y="357" width="0.0237%" height="15" fill="rgb(236,175,2)" fg:x="11334" fg:w="3"/><text x="89.9532%" y="367.50"></text></g><g><title>wide::f32x4_::f32x4::is_finite (5 samples, 0.04%)</title><rect x="89.7269%" y="421" width="0.0396%" height="15" fill="rgb(241,52,2)" fg:x="11337" fg:w="5"/><text x="89.9769%" y="431.50"></text></g><g><title>wide::u32x4_::u32x4::cmp_eq (5 samples, 0.04%)</title><rect x="89.7269%" y="405" width="0.0396%" height="15" fill="rgb(248,140,14)" fg:x="11337" fg:w="5"/><text x="89.9769%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (5 samples, 0.04%)</title><rect x="89.7269%" y="389" width="0.0396%" height="15" fill="rgb(253,22,42)" fg:x="11337" fg:w="5"/><text x="89.9769%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (5 samples, 0.04%)</title><rect x="89.7269%" y="373" width="0.0396%" height="15" fill="rgb(234,61,47)" fg:x="11337" fg:w="5"/><text x="89.9769%" y="383.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (3 samples, 0.02%)</title><rect x="89.7665%" y="405" width="0.0237%" height="15" fill="rgb(208,226,15)" fg:x="11342" fg:w="3"/><text x="90.0165%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (3 samples, 0.02%)</title><rect x="89.7665%" y="389" width="0.0237%" height="15" fill="rgb(217,221,4)" fg:x="11342" fg:w="3"/><text x="90.0165%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (3 samples, 0.02%)</title><rect x="89.7665%" y="373" width="0.0237%" height="15" fill="rgb(212,174,34)" fg:x="11342" fg:w="3"/><text x="90.0165%" y="383.50"></text></g><g><title>wide::f32x4_::f32x4::mul_add (5 samples, 0.04%)</title><rect x="89.7665%" y="421" width="0.0396%" height="15" fill="rgb(253,83,4)" fg:x="11342" fg:w="5"/><text x="90.0165%" y="431.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="89.7903%" y="405" width="0.0158%" height="15" fill="rgb(250,195,49)" fg:x="11345" fg:w="2"/><text x="90.0403%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (2 samples, 0.02%)</title><rect x="89.7903%" y="389" width="0.0158%" height="15" fill="rgb(241,192,25)" fg:x="11345" fg:w="2"/><text x="90.0403%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (2 samples, 0.02%)</title><rect x="89.7903%" y="373" width="0.0158%" height="15" fill="rgb(208,124,10)" fg:x="11345" fg:w="2"/><text x="90.0403%" y="383.50"></text></g><g><title>wide::f32x4_::f32x4::mul_neg_add (7 samples, 0.06%)</title><rect x="89.8061%" y="421" width="0.0554%" height="15" fill="rgb(222,33,0)" fg:x="11347" fg:w="7"/><text x="90.0561%" y="431.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (6 samples, 0.05%)</title><rect x="89.8140%" y="405" width="0.0475%" height="15" fill="rgb(234,209,28)" fg:x="11348" fg:w="6"/><text x="90.0640%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (6 samples, 0.05%)</title><rect x="89.8140%" y="389" width="0.0475%" height="15" fill="rgb(224,11,23)" fg:x="11348" fg:w="6"/><text x="90.0640%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (6 samples, 0.05%)</title><rect x="89.8140%" y="373" width="0.0475%" height="15" fill="rgb(232,99,1)" fg:x="11348" fg:w="6"/><text x="90.0640%" y="383.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="89.8615%" y="405" width="0.0158%" height="15" fill="rgb(237,95,45)" fg:x="11354" fg:w="2"/><text x="90.1115%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (2 samples, 0.02%)</title><rect x="89.8615%" y="389" width="0.0158%" height="15" fill="rgb(208,109,11)" fg:x="11354" fg:w="2"/><text x="90.1115%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (2 samples, 0.02%)</title><rect x="89.8615%" y="373" width="0.0158%" height="15" fill="rgb(216,190,48)" fg:x="11354" fg:w="2"/><text x="90.1115%" y="383.50"></text></g><g><title>wide::f32x4_::f32x4::mul_sub (4 samples, 0.03%)</title><rect x="89.8615%" y="421" width="0.0317%" height="15" fill="rgb(251,171,36)" fg:x="11354" fg:w="4"/><text x="90.1115%" y="431.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="89.8773%" y="405" width="0.0158%" height="15" fill="rgb(230,62,22)" fg:x="11356" fg:w="2"/><text x="90.1273%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (2 samples, 0.02%)</title><rect x="89.8773%" y="389" width="0.0158%" height="15" fill="rgb(225,114,35)" fg:x="11356" fg:w="2"/><text x="90.1273%" y="399.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (2 samples, 0.02%)</title><rect x="89.8773%" y="373" width="0.0158%" height="15" fill="rgb(215,118,42)" fg:x="11356" fg:w="2"/><text x="90.1273%" y="383.50"></text></g><g><title>wide::f32x4_::f32x4::round (2 samples, 0.02%)</title><rect x="89.8932%" y="421" width="0.0158%" height="15" fill="rgb(243,119,21)" fg:x="11358" fg:w="2"/><text x="90.1432%" y="431.50"></text></g><g><title>&lt;clip::Clip as nih_plug::plugin::Plugin&gt;::process (4,469 samples, 35.37%)</title><rect x="54.5627%" y="453" width="35.3700%" height="15" fill="rgb(252,177,53)" fg:x="6894" fg:w="4469"/><text x="54.8127%" y="463.50">&lt;clip::Clip as nih_plug::plugin::Plugin&gt;::process</text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (58 samples, 0.46%)</title><rect x="89.4737%" y="437" width="0.4590%" height="15" fill="rgb(237,209,29)" fg:x="11305" fg:w="58"/><text x="89.7237%" y="447.50"></text></g><g><title>wide::f32x4_::f32x4::sign_bit (3 samples, 0.02%)</title><rect x="89.9090%" y="421" width="0.0237%" height="15" fill="rgb(212,65,23)" fg:x="11360" fg:w="3"/><text x="90.1590%" y="431.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (3 samples, 0.02%)</title><rect x="89.9090%" y="405" width="0.0237%" height="15" fill="rgb(230,222,46)" fg:x="11360" fg:w="3"/><text x="90.1590%" y="415.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (3 samples, 0.02%)</title><rect x="89.9090%" y="389" width="0.0237%" height="15" fill="rgb(215,135,32)" fg:x="11360" fg:w="3"/><text x="90.1590%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (3 samples, 0.02%)</title><rect x="89.9090%" y="373" width="0.0237%" height="15" fill="rgb(246,101,22)" fg:x="11360" fg:w="3"/><text x="90.1590%" y="383.50"></text></g><g><title>nih_plug::context::process::Transport::new (3 samples, 0.02%)</title><rect x="89.9486%" y="453" width="0.0237%" height="15" fill="rgb(206,107,13)" fg:x="11365" fg:w="3"/><text x="90.1986%" y="463.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (2 samples, 0.02%)</title><rect x="89.9960%" y="437" width="0.0158%" height="15" fill="rgb(250,100,44)" fg:x="11371" fg:w="2"/><text x="90.2460%" y="447.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_event (5 samples, 0.04%)</title><rect x="90.0198%" y="437" width="0.0396%" height="15" fill="rgb(231,147,38)" fg:x="11374" fg:w="5"/><text x="90.2698%" y="447.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::Param&gt;::preview_normalized (8 samples, 0.06%)</title><rect x="90.1227%" y="389" width="0.0633%" height="15" fill="rgb(229,8,40)" fg:x="11387" fg:w="8"/><text x="90.3727%" y="399.50"></text></g><g><title>nih_plug::params::range::FloatRange::normalize (7 samples, 0.06%)</title><rect x="90.1306%" y="373" width="0.0554%" height="15" fill="rgb(221,135,30)" fg:x="11388" fg:w="7"/><text x="90.3806%" y="383.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::Param&gt;::preview_plain (15 samples, 0.12%)</title><rect x="90.1860%" y="389" width="0.1187%" height="15" fill="rgb(249,193,18)" fg:x="11395" fg:w="15"/><text x="90.4360%" y="399.50"></text></g><g><title>nih_plug::params::range::FloatRange::unnormalize (15 samples, 0.12%)</title><rect x="90.1860%" y="373" width="0.1187%" height="15" fill="rgb(209,133,39)" fg:x="11395" fg:w="15"/><text x="90.4360%" y="383.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (13 samples, 0.10%)</title><rect x="90.2018%" y="357" width="0.1029%" height="15" fill="rgb(232,100,14)" fg:x="11397" fg:w="13"/><text x="90.4518%" y="367.50"></text></g><g><title>[libm.so.6] (12 samples, 0.09%)</title><rect x="90.2097%" y="341" width="0.0950%" height="15" fill="rgb(224,185,1)" fg:x="11398" fg:w="12"/><text x="90.4597%" y="351.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (3 samples, 0.02%)</title><rect x="90.3047%" y="373" width="0.0237%" height="15" fill="rgb(223,139,8)" fg:x="11410" fg:w="3"/><text x="90.5547%" y="383.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (3 samples, 0.02%)</title><rect x="90.3047%" y="357" width="0.0237%" height="15" fill="rgb(232,213,38)" fg:x="11410" fg:w="3"/><text x="90.5547%" y="367.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::ParamMut&gt;::modulate_value (31 samples, 0.25%)</title><rect x="90.0910%" y="421" width="0.2454%" height="15" fill="rgb(207,94,22)" fg:x="11383" fg:w="31"/><text x="90.3410%" y="431.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::ParamMut&gt;::set_plain_value (30 samples, 0.24%)</title><rect x="90.0989%" y="405" width="0.2374%" height="15" fill="rgb(219,183,54)" fg:x="11384" fg:w="30"/><text x="90.3489%" y="415.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::swap (4 samples, 0.03%)</title><rect x="90.3047%" y="389" width="0.0317%" height="15" fill="rgb(216,185,54)" fg:x="11410" fg:w="4"/><text x="90.5547%" y="399.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::EventLoop&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;,nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;&gt;&gt;::is_main_thread (4 samples, 0.03%)</title><rect x="90.3601%" y="405" width="0.0317%" height="15" fill="rgb(254,217,39)" fg:x="11417" fg:w="4"/><text x="90.6101%" y="415.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow (4 samples, 0.03%)</title><rect x="90.3601%" y="389" width="0.0317%" height="15" fill="rgb(240,178,23)" fg:x="11417" fg:w="4"/><text x="90.6101%" y="399.50"></text></g><g><title>atomic_refcell::AtomicBorrowRef::try_new (4 samples, 0.03%)</title><rect x="90.3601%" y="373" width="0.0317%" height="15" fill="rgb(218,11,47)" fg:x="11417" fg:w="4"/><text x="90.6101%" y="383.50"></text></g><g><title>[libc.so.6] (10 samples, 0.08%)</title><rect x="90.6925%" y="357" width="0.0791%" height="15" fill="rgb(218,51,51)" fg:x="11459" fg:w="10"/><text x="90.9425%" y="367.50"></text></g><g><title>[unknown] (131 samples, 1.04%)</title><rect x="90.7717%" y="357" width="1.0368%" height="15" fill="rgb(238,126,27)" fg:x="11469" fg:w="131"/><text x="91.0217%" y="367.50"></text></g><g><title>[unknown] (124 samples, 0.98%)</title><rect x="90.8271%" y="341" width="0.9814%" height="15" fill="rgb(249,202,22)" fg:x="11476" fg:w="124"/><text x="91.0771%" y="351.50"></text></g><g><title>[unknown] (121 samples, 0.96%)</title><rect x="90.8508%" y="325" width="0.9577%" height="15" fill="rgb(254,195,49)" fg:x="11479" fg:w="121"/><text x="91.1008%" y="335.50"></text></g><g><title>[unknown] (118 samples, 0.93%)</title><rect x="90.8746%" y="309" width="0.9339%" height="15" fill="rgb(208,123,14)" fg:x="11482" fg:w="118"/><text x="91.1246%" y="319.50"></text></g><g><title>[unknown] (103 samples, 0.82%)</title><rect x="90.9933%" y="293" width="0.8152%" height="15" fill="rgb(224,200,8)" fg:x="11497" fg:w="103"/><text x="91.2433%" y="303.50"></text></g><g><title>[unknown] (97 samples, 0.77%)</title><rect x="91.0408%" y="277" width="0.7677%" height="15" fill="rgb(217,61,36)" fg:x="11503" fg:w="97"/><text x="91.2908%" y="287.50"></text></g><g><title>[unknown] (91 samples, 0.72%)</title><rect x="91.0882%" y="261" width="0.7202%" height="15" fill="rgb(206,35,45)" fg:x="11509" fg:w="91"/><text x="91.3382%" y="271.50"></text></g><g><title>[unknown] (84 samples, 0.66%)</title><rect x="91.1436%" y="245" width="0.6648%" height="15" fill="rgb(217,65,33)" fg:x="11516" fg:w="84"/><text x="91.3936%" y="255.50"></text></g><g><title>[unknown] (79 samples, 0.63%)</title><rect x="91.1832%" y="229" width="0.6252%" height="15" fill="rgb(222,158,48)" fg:x="11521" fg:w="79"/><text x="91.4332%" y="239.50"></text></g><g><title>[unknown] (63 samples, 0.50%)</title><rect x="91.3099%" y="213" width="0.4986%" height="15" fill="rgb(254,2,54)" fg:x="11537" fg:w="63"/><text x="91.5599%" y="223.50"></text></g><g><title>[unknown] (60 samples, 0.47%)</title><rect x="91.3336%" y="197" width="0.4749%" height="15" fill="rgb(250,143,38)" fg:x="11540" fg:w="60"/><text x="91.5836%" y="207.50"></text></g><g><title>[unknown] (51 samples, 0.40%)</title><rect x="91.4048%" y="181" width="0.4036%" height="15" fill="rgb(248,25,0)" fg:x="11549" fg:w="51"/><text x="91.6548%" y="191.50"></text></g><g><title>[unknown] (49 samples, 0.39%)</title><rect x="91.4207%" y="165" width="0.3878%" height="15" fill="rgb(206,152,27)" fg:x="11551" fg:w="49"/><text x="91.6707%" y="175.50"></text></g><g><title>[unknown] (46 samples, 0.36%)</title><rect x="91.4444%" y="149" width="0.3641%" height="15" fill="rgb(240,77,30)" fg:x="11554" fg:w="46"/><text x="91.6944%" y="159.50"></text></g><g><title>[unknown] (45 samples, 0.36%)</title><rect x="91.4523%" y="133" width="0.3562%" height="15" fill="rgb(231,5,3)" fg:x="11555" fg:w="45"/><text x="91.7023%" y="143.50"></text></g><g><title>[unknown] (35 samples, 0.28%)</title><rect x="91.5315%" y="117" width="0.2770%" height="15" fill="rgb(207,226,32)" fg:x="11565" fg:w="35"/><text x="91.7815%" y="127.50"></text></g><g><title>[unknown] (27 samples, 0.21%)</title><rect x="91.5948%" y="101" width="0.2137%" height="15" fill="rgb(222,207,47)" fg:x="11573" fg:w="27"/><text x="91.8448%" y="111.50"></text></g><g><title>[unknown] (20 samples, 0.16%)</title><rect x="91.6502%" y="85" width="0.1583%" height="15" fill="rgb(229,115,45)" fg:x="11580" fg:w="20"/><text x="91.9002%" y="95.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="91.7452%" y="69" width="0.0633%" height="15" fill="rgb(224,191,6)" fg:x="11592" fg:w="8"/><text x="91.9952%" y="79.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="91.7452%" y="53" width="0.0633%" height="15" fill="rgb(230,227,24)" fg:x="11592" fg:w="8"/><text x="91.9952%" y="63.50"></text></g><g><title>[unknown] (6 samples, 0.05%)</title><rect x="91.7610%" y="37" width="0.0475%" height="15" fill="rgb(228,80,19)" fg:x="11594" fg:w="6"/><text x="92.0110%" y="47.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (163 samples, 1.29%)</title><rect x="90.5342%" y="389" width="1.2901%" height="15" fill="rgb(247,229,0)" fg:x="11439" fg:w="163"/><text x="90.7842%" y="399.50"></text></g><g><title>write (157 samples, 1.24%)</title><rect x="90.5817%" y="373" width="1.2426%" height="15" fill="rgb(237,194,15)" fg:x="11445" fg:w="157"/><text x="90.8317%" y="383.50"></text></g><g><title>operator new (2 samples, 0.02%)</title><rect x="91.8085%" y="357" width="0.0158%" height="15" fill="rgb(219,203,20)" fg:x="11600" fg:w="2"/><text x="92.0585%" y="367.50"></text></g><g><title>base::core::Object::decrementRefCount (8 samples, 0.06%)</title><rect x="91.8243%" y="389" width="0.0633%" height="15" fill="rgb(234,128,8)" fg:x="11602" fg:w="8"/><text x="92.0743%" y="399.50"></text></g><g><title>[libc.so.6] (25 samples, 0.20%)</title><rect x="91.9430%" y="357" width="0.1979%" height="15" fill="rgb(248,202,8)" fg:x="11617" fg:w="25"/><text x="92.1930%" y="367.50"></text></g><g><title>operator new (35 samples, 0.28%)</title><rect x="91.8876%" y="389" width="0.2770%" height="15" fill="rgb(206,104,37)" fg:x="11610" fg:w="35"/><text x="92.1376%" y="399.50"></text></g><g><title>malloc (35 samples, 0.28%)</title><rect x="91.8876%" y="373" width="0.2770%" height="15" fill="rgb(223,8,27)" fg:x="11610" fg:w="35"/><text x="92.1376%" y="383.50"></text></g><g><title>nih_plug::params::range::FloatRange::normalize (2 samples, 0.02%)</title><rect x="92.1488%" y="357" width="0.0158%" height="15" fill="rgb(216,217,28)" fg:x="11643" fg:w="2"/><text x="92.3988%" y="367.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (226 samples, 1.79%)</title><rect x="90.3918%" y="405" width="1.7887%" height="15" fill="rgb(249,199,1)" fg:x="11421" fg:w="226"/><text x="90.6418%" y="415.50">[..</text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::EventLoop&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;,nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;&gt;&gt;::schedule_gui (237 samples, 1.88%)</title><rect x="90.3364%" y="421" width="1.8757%" height="15" fill="rgb(240,85,17)" fg:x="11414" fg:w="237"/><text x="90.5864%" y="431.50">&lt;..</text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (4 samples, 0.03%)</title><rect x="92.1805%" y="405" width="0.0317%" height="15" fill="rgb(206,108,45)" fg:x="11647" fg:w="4"/><text x="92.4305%" y="415.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (4 samples, 0.03%)</title><rect x="92.1805%" y="389" width="0.0317%" height="15" fill="rgb(245,210,41)" fg:x="11647" fg:w="4"/><text x="92.4305%" y="399.50"></text></g><g><title>[libm.so.6] (2 samples, 0.02%)</title><rect x="92.2121%" y="421" width="0.0158%" height="15" fill="rgb(206,13,37)" fg:x="11651" fg:w="2"/><text x="92.4621%" y="431.50"></text></g><g><title>nih_plug::params::internals::ParamPtr::step_count (3 samples, 0.02%)</title><rect x="92.2438%" y="421" width="0.0237%" height="15" fill="rgb(250,61,18)" fg:x="11655" fg:w="3"/><text x="92.4938%" y="431.50"></text></g><g><title>atomic_float::atomic_f32::AtomicF32::load (2 samples, 0.02%)</title><rect x="92.2754%" y="405" width="0.0158%" height="15" fill="rgb(235,172,48)" fg:x="11659" fg:w="2"/><text x="92.5254%" y="415.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits (2 samples, 0.02%)</title><rect x="92.2754%" y="389" width="0.0158%" height="15" fill="rgb(249,201,17)" fg:x="11659" fg:w="2"/><text x="92.5254%" y="399.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::from_bits::rt_u32_to_f32 (2 samples, 0.02%)</title><rect x="92.2754%" y="373" width="0.0158%" height="15" fill="rgb(219,208,6)" fg:x="11659" fg:w="2"/><text x="92.5254%" y="383.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::num_steps (6 samples, 0.05%)</title><rect x="92.2992%" y="405" width="0.0475%" height="15" fill="rgb(248,31,23)" fg:x="11662" fg:w="6"/><text x="92.5492%" y="415.50"></text></g><g><title>[libm.so.6] (23 samples, 0.18%)</title><rect x="92.3941%" y="373" width="0.1820%" height="15" fill="rgb(245,15,42)" fg:x="11674" fg:w="23"/><text x="92.6441%" y="383.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (4 samples, 0.03%)</title><rect x="92.5762%" y="373" width="0.0317%" height="15" fill="rgb(222,217,39)" fg:x="11697" fg:w="4"/><text x="92.8262%" y="383.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (3 samples, 0.02%)</title><rect x="92.5841%" y="357" width="0.0237%" height="15" fill="rgb(210,219,27)" fg:x="11698" fg:w="3"/><text x="92.8341%" y="367.50"></text></g><g><title>nih_plug::params::smoothing::Smoother&lt;T&gt;::set_target (46 samples, 0.36%)</title><rect x="92.2675%" y="421" width="0.3641%" height="15" fill="rgb(252,166,36)" fg:x="11658" fg:w="46"/><text x="92.5175%" y="431.50"></text></g><g><title>nih_plug::params::smoothing::SmoothingStyle::step_size (36 samples, 0.28%)</title><rect x="92.3467%" y="405" width="0.2849%" height="15" fill="rgb(245,132,34)" fg:x="11668" fg:w="36"/><text x="92.5967%" y="415.50"></text></g><g><title>pow (34 samples, 0.27%)</title><rect x="92.3625%" y="389" width="0.2691%" height="15" fill="rgb(236,54,3)" fg:x="11670" fg:w="34"/><text x="92.6125%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.04%)</title><rect x="92.6632%" y="341" width="0.0396%" height="15" fill="rgb(241,173,43)" fg:x="11708" fg:w="5"/><text x="92.9132%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.04%)</title><rect x="92.6632%" y="325" width="0.0396%" height="15" fill="rgb(215,190,9)" fg:x="11708" fg:w="5"/><text x="92.9132%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.04%)</title><rect x="92.6632%" y="309" width="0.0396%" height="15" fill="rgb(242,101,16)" fg:x="11708" fg:w="5"/><text x="92.9132%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.02%)</title><rect x="92.6791%" y="293" width="0.0237%" height="15" fill="rgb(223,190,21)" fg:x="11710" fg:w="3"/><text x="92.9291%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="92.6870%" y="277" width="0.0158%" height="15" fill="rgb(215,228,25)" fg:x="11711" fg:w="2"/><text x="92.9370%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.06%)</title><rect x="92.6632%" y="373" width="0.0554%" height="15" fill="rgb(225,36,22)" fg:x="11708" fg:w="7"/><text x="92.9132%" y="383.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.06%)</title><rect x="92.6632%" y="357" width="0.0554%" height="15" fill="rgb(251,106,46)" fg:x="11708" fg:w="7"/><text x="92.9132%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.02%)</title><rect x="92.7028%" y="341" width="0.0158%" height="15" fill="rgb(208,90,1)" fg:x="11713" fg:w="2"/><text x="92.9528%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="92.7028%" y="325" width="0.0158%" height="15" fill="rgb(243,10,4)" fg:x="11713" fg:w="2"/><text x="92.9528%" y="335.50"></text></g><g><title>core::hash::Hasher::write_u32 (2 samples, 0.02%)</title><rect x="92.7028%" y="309" width="0.0158%" height="15" fill="rgb(212,137,27)" fg:x="11713" fg:w="2"/><text x="92.9528%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="92.7266%" y="325" width="0.0158%" height="15" fill="rgb(231,220,49)" fg:x="11716" fg:w="2"/><text x="92.9766%" y="335.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.10%)</title><rect x="92.6553%" y="421" width="0.1029%" height="15" fill="rgb(237,96,20)" fg:x="11707" fg:w="13"/><text x="92.9053%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.10%)</title><rect x="92.6553%" y="405" width="0.1029%" height="15" fill="rgb(239,229,30)" fg:x="11707" fg:w="13"/><text x="92.9053%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.10%)</title><rect x="92.6553%" y="389" width="0.1029%" height="15" fill="rgb(219,65,33)" fg:x="11707" fg:w="13"/><text x="92.9053%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.04%)</title><rect x="92.7186%" y="373" width="0.0396%" height="15" fill="rgb(243,134,7)" fg:x="11715" fg:w="5"/><text x="92.9686%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.04%)</title><rect x="92.7186%" y="357" width="0.0396%" height="15" fill="rgb(216,177,54)" fg:x="11715" fg:w="5"/><text x="92.9686%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.04%)</title><rect x="92.7186%" y="341" width="0.0396%" height="15" fill="rgb(211,160,20)" fg:x="11715" fg:w="5"/><text x="92.9686%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.02%)</title><rect x="92.7424%" y="325" width="0.0158%" height="15" fill="rgb(239,85,39)" fg:x="11718" fg:w="2"/><text x="92.9924%" y="335.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="92.7424%" y="309" width="0.0158%" height="15" fill="rgb(232,125,22)" fg:x="11718" fg:w="2"/><text x="92.9924%" y="319.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="92.7424%" y="293" width="0.0158%" height="15" fill="rgb(244,57,34)" fg:x="11718" fg:w="2"/><text x="92.9924%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="92.7424%" y="277" width="0.0158%" height="15" fill="rgb(214,203,32)" fg:x="11718" fg:w="2"/><text x="92.9924%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="92.7424%" y="261" width="0.0158%" height="15" fill="rgb(207,58,43)" fg:x="11718" fg:w="2"/><text x="92.9924%" y="271.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_events_until (353 samples, 2.79%)</title><rect x="89.9723%" y="453" width="2.7938%" height="15" fill="rgb(215,193,15)" fg:x="11368" fg:w="353"/><text x="90.2223%" y="463.50">ni..</text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::update_plain_value_by_hash (342 samples, 2.71%)</title><rect x="90.0594%" y="437" width="2.7068%" height="15" fill="rgb(232,15,44)" fg:x="11379" fg:w="342"/><text x="90.3094%" y="447.50">ni..</text></g><g><title>nih_plug::buffer::Buffer::set_slices (7 samples, 0.06%)</title><rect x="92.7820%" y="437" width="0.0554%" height="15" fill="rgb(212,3,48)" fg:x="11723" fg:w="7"/><text x="93.0320%" y="447.50"></text></g><g><title>nih_plug::wrapper::util::buffer_management::BufferManager::create_buffers::{{closure}} (7 samples, 0.06%)</title><rect x="92.7820%" y="421" width="0.0554%" height="15" fill="rgb(218,128,7)" fg:x="11723" fg:w="7"/><text x="93.0320%" y="431.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (7 samples, 0.06%)</title><rect x="92.7820%" y="405" width="0.0554%" height="15" fill="rgb(226,216,39)" fg:x="11723" fg:w="7"/><text x="93.0320%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.06%)</title><rect x="92.7820%" y="389" width="0.0554%" height="15" fill="rgb(243,47,51)" fg:x="11723" fg:w="7"/><text x="93.0320%" y="399.50"></text></g><g><title>[libc.so.6] (7 samples, 0.06%)</title><rect x="92.7820%" y="373" width="0.0554%" height="15" fill="rgb(241,183,40)" fg:x="11723" fg:w="7"/><text x="93.0320%" y="383.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process (4,846 samples, 38.35%)</title><rect x="54.5073%" y="501" width="38.3538%" height="15" fill="rgb(231,217,32)" fg:x="6887" fg:w="4846"/><text x="54.7573%" y="511.50">nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process</text></g><g><title>nih_plug::wrapper::util::process_wrapper (4,846 samples, 38.35%)</title><rect x="54.5073%" y="485" width="38.3538%" height="15" fill="rgb(229,61,38)" fg:x="6887" fg:w="4846"/><text x="54.7573%" y="495.50">nih_plug::wrapper::util::process_wrapper</text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}} (4,841 samples, 38.31%)</title><rect x="54.5469%" y="469" width="38.3142%" height="15" fill="rgb(225,210,5)" fg:x="6892" fg:w="4841"/><text x="54.7969%" y="479.50">nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closu..</text></g><g><title>nih_plug::wrapper::util::buffer_management::BufferManager::create_buffers (11 samples, 0.09%)</title><rect x="92.7740%" y="453" width="0.0871%" height="15" fill="rgb(231,79,45)" fg:x="11722" fg:w="11"/><text x="93.0240%" y="463.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}}::{{closure}} (3 samples, 0.02%)</title><rect x="92.8374%" y="437" width="0.0237%" height="15" fill="rgb(224,100,7)" fg:x="11730" fg:w="3"/><text x="93.0874%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.02%)</title><rect x="92.8453%" y="421" width="0.0158%" height="15" fill="rgb(241,198,18)" fg:x="11731" fg:w="2"/><text x="93.0953%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null::runtime_impl (2 samples, 0.02%)</title><rect x="92.8453%" y="405" width="0.0158%" height="15" fill="rgb(252,97,53)" fg:x="11731" fg:w="2"/><text x="93.0953%" y="415.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (4,988 samples, 39.48%)</title><rect x="53.6051%" y="517" width="39.4776%" height="15" fill="rgb(220,88,7)" fg:x="6773" fg:w="4988"/><text x="53.8551%" y="527.50">[BitwigPluginHost-X64-SSE41]</text></g><g><title>write (28 samples, 0.22%)</title><rect x="92.8611%" y="501" width="0.2216%" height="15" fill="rgb(213,176,14)" fg:x="11733" fg:w="28"/><text x="93.1111%" y="511.50"></text></g><g><title>[unknown] (28 samples, 0.22%)</title><rect x="92.8611%" y="485" width="0.2216%" height="15" fill="rgb(246,73,7)" fg:x="11733" fg:w="28"/><text x="93.1111%" y="495.50"></text></g><g><title>[unknown] (27 samples, 0.21%)</title><rect x="92.8690%" y="469" width="0.2137%" height="15" fill="rgb(245,64,36)" fg:x="11734" fg:w="27"/><text x="93.1190%" y="479.50"></text></g><g><title>[unknown] (26 samples, 0.21%)</title><rect x="92.8769%" y="453" width="0.2058%" height="15" fill="rgb(245,80,10)" fg:x="11735" fg:w="26"/><text x="93.1269%" y="463.50"></text></g><g><title>[unknown] (26 samples, 0.21%)</title><rect x="92.8769%" y="437" width="0.2058%" height="15" fill="rgb(232,107,50)" fg:x="11735" fg:w="26"/><text x="93.1269%" y="447.50"></text></g><g><title>[unknown] (26 samples, 0.21%)</title><rect x="92.8769%" y="421" width="0.2058%" height="15" fill="rgb(253,3,0)" fg:x="11735" fg:w="26"/><text x="93.1269%" y="431.50"></text></g><g><title>[unknown] (25 samples, 0.20%)</title><rect x="92.8848%" y="405" width="0.1979%" height="15" fill="rgb(212,99,53)" fg:x="11736" fg:w="25"/><text x="93.1348%" y="415.50"></text></g><g><title>[unknown] (24 samples, 0.19%)</title><rect x="92.8928%" y="389" width="0.1899%" height="15" fill="rgb(249,111,54)" fg:x="11737" fg:w="24"/><text x="93.1428%" y="399.50"></text></g><g><title>[unknown] (21 samples, 0.17%)</title><rect x="92.9165%" y="373" width="0.1662%" height="15" fill="rgb(249,55,30)" fg:x="11740" fg:w="21"/><text x="93.1665%" y="383.50"></text></g><g><title>[unknown] (20 samples, 0.16%)</title><rect x="92.9244%" y="357" width="0.1583%" height="15" fill="rgb(237,47,42)" fg:x="11741" fg:w="20"/><text x="93.1744%" y="367.50"></text></g><g><title>[unknown] (18 samples, 0.14%)</title><rect x="92.9402%" y="341" width="0.1425%" height="15" fill="rgb(211,20,18)" fg:x="11743" fg:w="18"/><text x="93.1902%" y="351.50"></text></g><g><title>[unknown] (15 samples, 0.12%)</title><rect x="92.9640%" y="325" width="0.1187%" height="15" fill="rgb(231,203,46)" fg:x="11746" fg:w="15"/><text x="93.2140%" y="335.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="92.9877%" y="309" width="0.0950%" height="15" fill="rgb(237,142,3)" fg:x="11749" fg:w="12"/><text x="93.2377%" y="319.50"></text></g><g><title>[unknown] (11 samples, 0.09%)</title><rect x="92.9956%" y="293" width="0.0871%" height="15" fill="rgb(241,107,1)" fg:x="11750" fg:w="11"/><text x="93.2456%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.05%)</title><rect x="93.0352%" y="277" width="0.0475%" height="15" fill="rgb(229,83,13)" fg:x="11755" fg:w="6"/><text x="93.2852%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="93.0669%" y="261" width="0.0158%" height="15" fill="rgb(241,91,40)" fg:x="11759" fg:w="2"/><text x="93.3169%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="93.0669%" y="245" width="0.0158%" height="15" fill="rgb(225,3,45)" fg:x="11759" fg:w="2"/><text x="93.3169%" y="255.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (4,996 samples, 39.54%)</title><rect x="53.5497%" y="533" width="39.5410%" height="15" fill="rgb(244,223,14)" fg:x="6766" fg:w="4996"/><text x="53.7997%" y="543.50">[BitwigPluginHost-X64-SSE41]</text></g><g><title>[BitwigPluginHost-X64-SSE41] (189 samples, 1.50%)</title><rect x="93.1065%" y="485" width="1.4958%" height="15" fill="rgb(224,124,37)" fg:x="11764" fg:w="189"/><text x="93.3565%" y="495.50"></text></g><g><title>read (189 samples, 1.50%)</title><rect x="93.1065%" y="469" width="1.4958%" height="15" fill="rgb(251,171,30)" fg:x="11764" fg:w="189"/><text x="93.3565%" y="479.50"></text></g><g><title>[unknown] (186 samples, 1.47%)</title><rect x="93.1302%" y="453" width="1.4721%" height="15" fill="rgb(236,46,54)" fg:x="11767" fg:w="186"/><text x="93.3802%" y="463.50"></text></g><g><title>[unknown] (182 samples, 1.44%)</title><rect x="93.1619%" y="437" width="1.4404%" height="15" fill="rgb(245,213,5)" fg:x="11771" fg:w="182"/><text x="93.4119%" y="447.50"></text></g><g><title>[unknown] (180 samples, 1.42%)</title><rect x="93.1777%" y="421" width="1.4246%" height="15" fill="rgb(230,144,27)" fg:x="11773" fg:w="180"/><text x="93.4277%" y="431.50"></text></g><g><title>[unknown] (180 samples, 1.42%)</title><rect x="93.1777%" y="405" width="1.4246%" height="15" fill="rgb(220,86,6)" fg:x="11773" fg:w="180"/><text x="93.4277%" y="415.50"></text></g><g><title>[unknown] (176 samples, 1.39%)</title><rect x="93.2093%" y="389" width="1.3930%" height="15" fill="rgb(240,20,13)" fg:x="11777" fg:w="176"/><text x="93.4593%" y="399.50"></text></g><g><title>[unknown] (170 samples, 1.35%)</title><rect x="93.2568%" y="373" width="1.3455%" height="15" fill="rgb(217,89,34)" fg:x="11783" fg:w="170"/><text x="93.5068%" y="383.50"></text></g><g><title>[unknown] (156 samples, 1.23%)</title><rect x="93.3676%" y="357" width="1.2347%" height="15" fill="rgb(229,13,5)" fg:x="11797" fg:w="156"/><text x="93.6176%" y="367.50"></text></g><g><title>[unknown] (139 samples, 1.10%)</title><rect x="93.5022%" y="341" width="1.1001%" height="15" fill="rgb(244,67,35)" fg:x="11814" fg:w="139"/><text x="93.7522%" y="351.50"></text></g><g><title>[unknown] (123 samples, 0.97%)</title><rect x="93.6288%" y="325" width="0.9735%" height="15" fill="rgb(221,40,2)" fg:x="11830" fg:w="123"/><text x="93.8788%" y="335.50"></text></g><g><title>[unknown] (116 samples, 0.92%)</title><rect x="93.6842%" y="309" width="0.9181%" height="15" fill="rgb(237,157,21)" fg:x="11837" fg:w="116"/><text x="93.9342%" y="319.50"></text></g><g><title>[unknown] (107 samples, 0.85%)</title><rect x="93.7554%" y="293" width="0.8469%" height="15" fill="rgb(222,94,11)" fg:x="11846" fg:w="107"/><text x="94.0054%" y="303.50"></text></g><g><title>[unknown] (97 samples, 0.77%)</title><rect x="93.8346%" y="277" width="0.7677%" height="15" fill="rgb(249,113,6)" fg:x="11856" fg:w="97"/><text x="94.0846%" y="287.50"></text></g><g><title>[unknown] (74 samples, 0.59%)</title><rect x="94.0166%" y="261" width="0.5857%" height="15" fill="rgb(238,137,36)" fg:x="11879" fg:w="74"/><text x="94.2666%" y="271.50"></text></g><g><title>[unknown] (52 samples, 0.41%)</title><rect x="94.1907%" y="245" width="0.4116%" height="15" fill="rgb(210,102,26)" fg:x="11901" fg:w="52"/><text x="94.4407%" y="255.50"></text></g><g><title>[unknown] (45 samples, 0.36%)</title><rect x="94.2461%" y="229" width="0.3562%" height="15" fill="rgb(218,30,30)" fg:x="11908" fg:w="45"/><text x="94.4961%" y="239.50"></text></g><g><title>[unknown] (40 samples, 0.32%)</title><rect x="94.2857%" y="213" width="0.3166%" height="15" fill="rgb(214,67,26)" fg:x="11913" fg:w="40"/><text x="94.5357%" y="223.50"></text></g><g><title>[unknown] (37 samples, 0.29%)</title><rect x="94.3095%" y="197" width="0.2928%" height="15" fill="rgb(251,9,53)" fg:x="11916" fg:w="37"/><text x="94.5595%" y="207.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="94.5865%" y="181" width="0.0158%" height="15" fill="rgb(228,204,25)" fg:x="11951" fg:w="2"/><text x="94.8365%" y="191.50"></text></g><g><title>base::core::AbstractInputStream::readByte (190 samples, 1.50%)</title><rect x="93.1065%" y="533" width="1.5038%" height="15" fill="rgb(207,153,8)" fg:x="11764" fg:w="190"/><text x="93.3565%" y="543.50"></text></g><g><title>base::core::AbstractInputStream::readReqBytes (190 samples, 1.50%)</title><rect x="93.1065%" y="517" width="1.5038%" height="15" fill="rgb(242,9,16)" fg:x="11764" fg:w="190"/><text x="93.3565%" y="527.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (190 samples, 1.50%)</title><rect x="93.1065%" y="501" width="1.5038%" height="15" fill="rgb(217,211,10)" fg:x="11764" fg:w="190"/><text x="93.3565%" y="511.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (5,193 samples, 41.10%)</title><rect x="53.5259%" y="549" width="41.1001%" height="15" fill="rgb(219,228,52)" fg:x="6763" fg:w="5193"/><text x="53.7759%" y="559.50">[BitwigPluginHost-X64-SSE41]</text></g><g><title>[BitwigPluginHost-X64-SSE41] (5,195 samples, 41.12%)</title><rect x="53.5259%" y="565" width="41.1159%" height="15" fill="rgb(231,92,29)" fg:x="6763" fg:w="5195"/><text x="53.7759%" y="575.50">[BitwigPluginHost-X64-SSE41]</text></g><g><title>base::core::AbstractInputStream::readReqBytes (2 samples, 0.02%)</title><rect x="94.6260%" y="549" width="0.0158%" height="15" fill="rgb(232,8,23)" fg:x="11956" fg:w="2"/><text x="94.8760%" y="559.50"></text></g><g><title>[libc.so.6] (5,198 samples, 41.14%)</title><rect x="53.5101%" y="613" width="41.1397%" height="15" fill="rgb(216,211,34)" fg:x="6761" fg:w="5198"/><text x="53.7601%" y="623.50">[libc.so.6]</text></g><g><title>[libc.so.6] (5,196 samples, 41.12%)</title><rect x="53.5259%" y="597" width="41.1239%" height="15" fill="rgb(236,151,0)" fg:x="6763" fg:w="5196"/><text x="53.7759%" y="607.50">[libc.so.6]</text></g><g><title>base::core::Thread::thread_run_func (5,196 samples, 41.12%)</title><rect x="53.5259%" y="581" width="41.1239%" height="15" fill="rgb(209,168,3)" fg:x="6763" fg:w="5196"/><text x="53.7759%" y="591.50">base::core::Thread::thread_run_func</text></g><g><title>[unknown] (15 samples, 0.12%)</title><rect x="94.6498%" y="613" width="0.1187%" height="15" fill="rgb(208,129,28)" fg:x="11959" fg:w="15"/><text x="94.8998%" y="623.50"></text></g><g><title>[unknown]  (2 samples, 0.02%)</title><rect x="94.7685%" y="613" width="0.0158%" height="15" fill="rgb(229,78,22)" fg:x="11974" fg:w="2"/><text x="95.0185%" y="623.50"></text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (2 samples, 0.02%)</title><rect x="94.7685%" y="597" width="0.0158%" height="15" fill="rgb(228,187,13)" fg:x="11974" fg:w="2"/><text x="95.0185%" y="607.50"></text></g><g><title>&lt;clip::Clip as nih_plug::plugin::Plugin&gt;::process (34 samples, 0.27%)</title><rect x="94.7843%" y="597" width="0.2691%" height="15" fill="rgb(240,119,24)" fg:x="11976" fg:w="34"/><text x="95.0343%" y="607.50"></text></g><g><title>nih_plug::params::boolean::BoolParam::value (4 samples, 0.03%)</title><rect x="95.0218%" y="581" width="0.0317%" height="15" fill="rgb(209,194,42)" fg:x="12006" fg:w="4"/><text x="95.2718%" y="591.50"></text></g><g><title>&lt;nih_plug::params::boolean::BoolParam as nih_plug::params::Param&gt;::modulated_plain_value (4 samples, 0.03%)</title><rect x="95.0218%" y="565" width="0.0317%" height="15" fill="rgb(247,200,46)" fg:x="12006" fg:w="4"/><text x="95.2718%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.03%)</title><rect x="95.0218%" y="549" width="0.0317%" height="15" fill="rgb(218,76,16)" fg:x="12006" fg:w="4"/><text x="95.2718%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="95.0297%" y="533" width="0.0237%" height="15" fill="rgb(225,21,48)" fg:x="12007" fg:w="3"/><text x="95.2797%" y="543.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&lt;f32&gt;&gt;::mul (2 samples, 0.02%)</title><rect x="95.3463%" y="549" width="0.0158%" height="15" fill="rgb(239,223,50)" fg:x="12047" fg:w="2"/><text x="95.5963%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="95.3463%" y="533" width="0.0158%" height="15" fill="rgb(244,45,21)" fg:x="12047" fg:w="2"/><text x="95.5963%" y="543.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (2 samples, 0.02%)</title><rect x="95.3463%" y="517" width="0.0158%" height="15" fill="rgb(232,33,43)" fg:x="12047" fg:w="2"/><text x="95.5963%" y="527.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (2 samples, 0.02%)</title><rect x="95.3463%" y="501" width="0.0158%" height="15" fill="rgb(209,8,3)" fg:x="12047" fg:w="2"/><text x="95.5963%" y="511.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::recip (3 samples, 0.02%)</title><rect x="95.3621%" y="549" width="0.0237%" height="15" fill="rgb(214,25,53)" fg:x="12049" fg:w="3"/><text x="95.6121%" y="559.50"></text></g><g><title>clip::dsp::var_hard_clip_simd_4 (10 samples, 0.08%)</title><rect x="95.3304%" y="565" width="0.0791%" height="15" fill="rgb(254,186,54)" fg:x="12045" fg:w="10"/><text x="95.5804%" y="575.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::clamp (3 samples, 0.02%)</title><rect x="95.4571%" y="517" width="0.0237%" height="15" fill="rgb(208,174,49)" fg:x="12061" fg:w="3"/><text x="95.7071%" y="527.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (3 samples, 0.02%)</title><rect x="95.4808%" y="517" width="0.0237%" height="15" fill="rgb(233,191,51)" fg:x="12064" fg:w="3"/><text x="95.7308%" y="527.50"></text></g><g><title>clip::dsp::var_hard_clip (16 samples, 0.13%)</title><rect x="95.4096%" y="533" width="0.1266%" height="15" fill="rgb(222,134,10)" fg:x="12055" fg:w="16"/><text x="95.6596%" y="543.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (4 samples, 0.03%)</title><rect x="95.5046%" y="517" width="0.0317%" height="15" fill="rgb(230,226,20)" fg:x="12067" fg:w="4"/><text x="95.7546%" y="527.50"></text></g><g><title>clip::processors::MainDistortionProcessor::post_gain (18 samples, 0.14%)</title><rect x="95.4096%" y="565" width="0.1425%" height="15" fill="rgb(251,111,25)" fg:x="12055" fg:w="18"/><text x="95.6596%" y="575.50"></text></g><g><title>clip::processors::MainDistortionProcessor::drive_compensation (18 samples, 0.14%)</title><rect x="95.4096%" y="549" width="0.1425%" height="15" fill="rgb(224,40,46)" fg:x="12055" fg:w="18"/><text x="95.6596%" y="559.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (2 samples, 0.02%)</title><rect x="95.5362%" y="533" width="0.0158%" height="15" fill="rgb(236,108,47)" fg:x="12071" fg:w="2"/><text x="95.7862%" y="543.50"></text></g><g><title>&lt;clip::processors::MainDistortionProcessor as clip::dsp::MonoProcessor&gt;::process_simd_4 (31 samples, 0.25%)</title><rect x="95.3304%" y="581" width="0.2454%" height="15" fill="rgb(234,93,0)" fg:x="12045" fg:w="31"/><text x="95.5804%" y="591.50"></text></g><g><title>clip::processors::MainDistortionProcessor::pre_gain (3 samples, 0.02%)</title><rect x="95.5520%" y="565" width="0.0237%" height="15" fill="rgb(224,213,32)" fg:x="12073" fg:w="3"/><text x="95.8020%" y="575.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_2x (10 samples, 0.08%)</title><rect x="95.5758%" y="581" width="0.0791%" height="15" fill="rgb(251,11,48)" fg:x="12076" fg:w="10"/><text x="95.8258%" y="591.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_2x (10 samples, 0.08%)</title><rect x="95.6549%" y="581" width="0.0791%" height="15" fill="rgb(236,173,5)" fg:x="12086" fg:w="10"/><text x="95.9049%" y="591.50"></text></g><g><title>&lt;clip::dsp::OversampleX4&lt;P&gt; as clip::dsp::MonoProcessor&gt;::step (87 samples, 0.69%)</title><rect x="95.0534%" y="597" width="0.6886%" height="15" fill="rgb(230,95,12)" fg:x="12010" fg:w="87"/><text x="95.3034%" y="607.50"></text></g><g><title>&lt;clip::params::ClipParams as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="95.7420%" y="597" width="0.0158%" height="15" fill="rgb(232,209,1)" fg:x="12097" fg:w="2"/><text x="95.9920%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="95.7578%" y="597" width="0.0237%" height="15" fill="rgb(232,6,1)" fg:x="12099" fg:w="3"/><text x="96.0078%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="95.7657%" y="581" width="0.0158%" height="15" fill="rgb(210,224,50)" fg:x="12100" fg:w="2"/><text x="96.0157%" y="591.50"></text></g><g><title>&lt;crossbeam_channel::flavors::zero::ZeroToken as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="95.7816%" y="597" width="0.0158%" height="15" fill="rgb(228,127,35)" fg:x="12102" fg:w="2"/><text x="96.0316%" y="607.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::ParamMut&gt;::modulate_value (3 samples, 0.02%)</title><rect x="95.7974%" y="597" width="0.0237%" height="15" fill="rgb(245,102,45)" fg:x="12104" fg:w="3"/><text x="96.0474%" y="607.50"></text></g><g><title>&lt;nih_plug::params::float::FloatParam as nih_plug::params::ParamMut&gt;::set_plain_value (2 samples, 0.02%)</title><rect x="95.8053%" y="581" width="0.0158%" height="15" fill="rgb(214,1,49)" fg:x="12105" fg:w="2"/><text x="96.0553%" y="591.50"></text></g><g><title>&lt;nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt; as nih_plug::event_loop::EventLoop&lt;nih_plug::wrapper::clap::wrapper::Task&lt;P&gt;,nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;&gt;&gt;::schedule_gui (4 samples, 0.03%)</title><rect x="95.8211%" y="597" width="0.0317%" height="15" fill="rgb(226,163,40)" fg:x="12107" fg:w="4"/><text x="96.0711%" y="607.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (37 samples, 0.29%)</title><rect x="95.8528%" y="597" width="0.2928%" height="15" fill="rgb(239,212,28)" fg:x="12111" fg:w="37"/><text x="96.1028%" y="607.50"></text></g><g><title>[libc.so.6] (8 samples, 0.06%)</title><rect x="96.1535%" y="597" width="0.0633%" height="15" fill="rgb(220,20,13)" fg:x="12149" fg:w="8"/><text x="96.4035%" y="607.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.2010%" y="581" width="0.0158%" height="15" fill="rgb(210,164,35)" fg:x="12155" fg:w="2"/><text x="96.4510%" y="591.50"></text></g><g><title>[libm.so.6] (21 samples, 0.17%)</title><rect x="96.2169%" y="597" width="0.1662%" height="15" fill="rgb(248,109,41)" fg:x="12157" fg:w="21"/><text x="96.4669%" y="607.50"></text></g><g><title>[unknown] (187 samples, 1.48%)</title><rect x="96.3831%" y="597" width="1.4800%" height="15" fill="rgb(238,23,50)" fg:x="12178" fg:w="187"/><text x="96.6331%" y="607.50"></text></g><g><title>[unknown] (186 samples, 1.47%)</title><rect x="96.3910%" y="581" width="1.4721%" height="15" fill="rgb(211,48,49)" fg:x="12179" fg:w="186"/><text x="96.6410%" y="591.50"></text></g><g><title>[unknown] (176 samples, 1.39%)</title><rect x="96.4701%" y="565" width="1.3930%" height="15" fill="rgb(223,36,21)" fg:x="12189" fg:w="176"/><text x="96.7201%" y="575.50"></text></g><g><title>[unknown] (152 samples, 1.20%)</title><rect x="96.6601%" y="549" width="1.2030%" height="15" fill="rgb(207,123,46)" fg:x="12213" fg:w="152"/><text x="96.9101%" y="559.50"></text></g><g><title>[unknown] (131 samples, 1.04%)</title><rect x="96.8263%" y="533" width="1.0368%" height="15" fill="rgb(240,218,32)" fg:x="12234" fg:w="131"/><text x="97.0763%" y="543.50"></text></g><g><title>[unknown] (105 samples, 0.83%)</title><rect x="97.0321%" y="517" width="0.8310%" height="15" fill="rgb(252,5,43)" fg:x="12260" fg:w="105"/><text x="97.2821%" y="527.50"></text></g><g><title>[unknown] (69 samples, 0.55%)</title><rect x="97.3170%" y="501" width="0.5461%" height="15" fill="rgb(252,84,19)" fg:x="12296" fg:w="69"/><text x="97.5670%" y="511.50"></text></g><g><title>[unknown] (53 samples, 0.42%)</title><rect x="97.4436%" y="485" width="0.4195%" height="15" fill="rgb(243,152,39)" fg:x="12312" fg:w="53"/><text x="97.6936%" y="495.50"></text></g><g><title>[unknown] (29 samples, 0.23%)</title><rect x="97.6336%" y="469" width="0.2295%" height="15" fill="rgb(234,160,15)" fg:x="12336" fg:w="29"/><text x="97.8836%" y="479.50"></text></g><g><title>[unknown] (24 samples, 0.19%)</title><rect x="97.6731%" y="453" width="0.1899%" height="15" fill="rgb(237,34,20)" fg:x="12341" fg:w="24"/><text x="97.9231%" y="463.50"></text></g><g><title>[unknown] (13 samples, 0.10%)</title><rect x="97.7602%" y="437" width="0.1029%" height="15" fill="rgb(229,97,13)" fg:x="12352" fg:w="13"/><text x="98.0102%" y="447.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="97.7839%" y="421" width="0.0791%" height="15" fill="rgb(234,71,50)" fg:x="12355" fg:w="10"/><text x="98.0339%" y="431.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="97.7998%" y="405" width="0.0633%" height="15" fill="rgb(253,155,4)" fg:x="12357" fg:w="8"/><text x="98.0498%" y="415.50"></text></g><g><title>[unknown] (8 samples, 0.06%)</title><rect x="97.7998%" y="389" width="0.0633%" height="15" fill="rgb(222,185,37)" fg:x="12357" fg:w="8"/><text x="98.0498%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.03%)</title><rect x="97.8314%" y="373" width="0.0317%" height="15" fill="rgb(251,177,13)" fg:x="12361" fg:w="4"/><text x="98.0814%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="97.8472%" y="357" width="0.0158%" height="15" fill="rgb(250,179,40)" fg:x="12363" fg:w="2"/><text x="98.0972%" y="367.50"></text></g><g><title>base::core::AbstractInputStream::readInt32 (2 samples, 0.02%)</title><rect x="97.8631%" y="597" width="0.0158%" height="15" fill="rgb(242,44,2)" fg:x="12365" fg:w="2"/><text x="98.1131%" y="607.50"></text></g><g><title>base::core::Object::decrementRefCount (2 samples, 0.02%)</title><rect x="97.8789%" y="597" width="0.0158%" height="15" fill="rgb(216,177,13)" fg:x="12367" fg:w="2"/><text x="98.1289%" y="607.50"></text></g><g><title>&lt;clip::dsp::DCBlock as clip::dsp::MonoProcessor&gt;::step (7 samples, 0.06%)</title><rect x="98.2430%" y="581" width="0.0554%" height="15" fill="rgb(216,106,43)" fg:x="12413" fg:w="7"/><text x="98.4930%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2984%" y="581" width="0.0237%" height="15" fill="rgb(216,183,2)" fg:x="12420" fg:w="3"/><text x="98.5484%" y="591.50"></text></g><g><title>&lt;nih_plug::buffer::samples::ChannelSamplesIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="98.2984%" y="565" width="0.0237%" height="15" fill="rgb(249,75,3)" fg:x="12420" fg:w="3"/><text x="98.5484%" y="575.50"></text></g><g><title>&lt;nih_plug::buffer::samples::ChannelSamples as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.03%)</title><rect x="98.3221%" y="581" width="0.0317%" height="15" fill="rgb(219,67,39)" fg:x="12423" fg:w="4"/><text x="98.5721%" y="591.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (18 samples, 0.14%)</title><rect x="98.3538%" y="581" width="0.1425%" height="15" fill="rgb(253,228,2)" fg:x="12427" fg:w="18"/><text x="98.6038%" y="591.50"></text></g><g><title>nih_plug::params::boolean::BoolParam::value (4 samples, 0.03%)</title><rect x="98.4962%" y="581" width="0.0317%" height="15" fill="rgb(235,138,27)" fg:x="12445" fg:w="4"/><text x="98.7462%" y="591.50"></text></g><g><title>&lt;nih_plug::params::boolean::BoolParam as nih_plug::params::Param&gt;::modulated_plain_value (4 samples, 0.03%)</title><rect x="98.4962%" y="565" width="0.0317%" height="15" fill="rgb(236,97,51)" fg:x="12445" fg:w="4"/><text x="98.7462%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.03%)</title><rect x="98.4962%" y="549" width="0.0317%" height="15" fill="rgb(240,80,30)" fg:x="12445" fg:w="4"/><text x="98.7462%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.03%)</title><rect x="98.4962%" y="533" width="0.0317%" height="15" fill="rgb(230,178,19)" fg:x="12445" fg:w="4"/><text x="98.7462%" y="543.50"></text></g><g><title>clip::Clip::audio_update (82 samples, 0.65%)</title><rect x="97.8947%" y="597" width="0.6490%" height="15" fill="rgb(210,190,27)" fg:x="12369" fg:w="82"/><text x="98.1447%" y="607.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::abs (2 samples, 0.02%)</title><rect x="98.5279%" y="581" width="0.0158%" height="15" fill="rgb(222,107,31)" fg:x="12449" fg:w="2"/><text x="98.7779%" y="591.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_down_4x (14 samples, 0.11%)</title><rect x="98.5516%" y="597" width="0.1108%" height="15" fill="rgb(216,127,34)" fg:x="12452" fg:w="14"/><text x="98.8016%" y="607.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (12 samples, 0.09%)</title><rect x="98.5675%" y="581" width="0.0950%" height="15" fill="rgb(234,116,52)" fg:x="12454" fg:w="12"/><text x="98.8175%" y="591.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::push (2 samples, 0.02%)</title><rect x="98.7574%" y="581" width="0.0158%" height="15" fill="rgb(222,124,15)" fg:x="12478" fg:w="2"/><text x="99.0074%" y="591.50"></text></g><g><title>clip::dsp::OversampleX4&lt;P&gt;::step_up_4x (20 samples, 0.16%)</title><rect x="98.6624%" y="597" width="0.1583%" height="15" fill="rgb(231,179,28)" fg:x="12466" fg:w="20"/><text x="98.9124%" y="607.50"></text></g><g><title>clip::dsp::ring_buffer::RingBuffer&lt;_&gt;::tap (6 samples, 0.05%)</title><rect x="98.7732%" y="581" width="0.0475%" height="15" fill="rgb(226,93,45)" fg:x="12480" fg:w="6"/><text x="99.0232%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.04%)</title><rect x="98.8207%" y="597" width="0.0396%" height="15" fill="rgb(215,8,51)" fg:x="12486" fg:w="5"/><text x="99.0707%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="98.8287%" y="581" width="0.0317%" height="15" fill="rgb(223,106,5)" fg:x="12487" fg:w="4"/><text x="99.0787%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="98.8287%" y="565" width="0.0317%" height="15" fill="rgb(250,191,5)" fg:x="12487" fg:w="4"/><text x="99.0787%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.03%)</title><rect x="98.8287%" y="549" width="0.0317%" height="15" fill="rgb(242,132,44)" fg:x="12487" fg:w="4"/><text x="99.0787%" y="559.50"></text></g><g><title>crossbeam_channel::flavors::zero::Channel&lt;T&gt;::try_recv (7 samples, 0.06%)</title><rect x="98.8682%" y="597" width="0.0554%" height="15" fill="rgb(251,152,29)" fg:x="12492" fg:w="7"/><text x="99.1182%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="98.9236%" y="581" width="0.0158%" height="15" fill="rgb(218,179,5)" fg:x="12499" fg:w="2"/><text x="99.1736%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="98.9236%" y="565" width="0.0158%" height="15" fill="rgb(227,67,19)" fg:x="12499" fg:w="2"/><text x="99.1736%" y="575.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (5 samples, 0.04%)</title><rect x="98.9236%" y="597" width="0.0396%" height="15" fill="rgb(233,119,31)" fg:x="12499" fg:w="5"/><text x="99.1736%" y="607.50"></text></g><g><title>core::sync::atomic::fence (3 samples, 0.02%)</title><rect x="98.9395%" y="581" width="0.0237%" height="15" fill="rgb(241,120,22)" fg:x="12501" fg:w="3"/><text x="99.1895%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="98.9790%" y="581" width="0.0158%" height="15" fill="rgb(224,102,30)" fg:x="12506" fg:w="2"/><text x="99.2290%" y="591.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="98.9790%" y="565" width="0.0158%" height="15" fill="rgb(210,164,37)" fg:x="12506" fg:w="2"/><text x="99.2290%" y="575.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push_or_else (5 samples, 0.04%)</title><rect x="98.9632%" y="597" width="0.0396%" height="15" fill="rgb(226,191,16)" fg:x="12504" fg:w="5"/><text x="99.2132%" y="607.50"></text></g><g><title>malloc (3 samples, 0.02%)</title><rect x="99.0028%" y="597" width="0.0237%" height="15" fill="rgb(214,40,45)" fg:x="12509" fg:w="3"/><text x="99.2528%" y="607.50"></text></g><g><title>nih_plug::context::process::Transport::bar_number (2 samples, 0.02%)</title><rect x="99.0265%" y="597" width="0.0158%" height="15" fill="rgb(244,29,26)" fg:x="12512" fg:w="2"/><text x="99.2765%" y="607.50"></text></g><g><title>nih_plug::params::range::FloatRange::normalize (2 samples, 0.02%)</title><rect x="99.0503%" y="597" width="0.0158%" height="15" fill="rgb(216,16,5)" fg:x="12515" fg:w="2"/><text x="99.3003%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="99.0977%" y="581" width="0.0158%" height="15" fill="rgb(249,76,35)" fg:x="12521" fg:w="2"/><text x="99.3477%" y="591.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_event (6 samples, 0.05%)</title><rect x="99.0740%" y="597" width="0.0475%" height="15" fill="rgb(207,11,44)" fg:x="12518" fg:w="6"/><text x="99.3240%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_in_events_until (4 samples, 0.03%)</title><rect x="99.1215%" y="597" width="0.0317%" height="15" fill="rgb(228,190,49)" fg:x="12524" fg:w="4"/><text x="99.3715%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::handle_out_events (3 samples, 0.02%)</title><rect x="99.1531%" y="597" width="0.0237%" height="15" fill="rgb(214,173,12)" fg:x="12528" fg:w="3"/><text x="99.4031%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::make_process_context (6 samples, 0.05%)</title><rect x="99.1769%" y="597" width="0.0475%" height="15" fill="rgb(218,26,35)" fg:x="12531" fg:w="6"/><text x="99.4269%" y="607.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (4 samples, 0.03%)</title><rect x="99.1927%" y="581" width="0.0317%" height="15" fill="rgb(220,200,19)" fg:x="12533" fg:w="4"/><text x="99.4427%" y="591.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (4 samples, 0.03%)</title><rect x="99.1927%" y="565" width="0.0317%" height="15" fill="rgb(239,95,49)" fg:x="12533" fg:w="4"/><text x="99.4427%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.03%)</title><rect x="99.1927%" y="549" width="0.0317%" height="15" fill="rgb(235,85,53)" fg:x="12533" fg:w="4"/><text x="99.4427%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.03%)</title><rect x="99.1927%" y="533" width="0.0317%" height="15" fill="rgb(233,133,31)" fg:x="12533" fg:w="4"/><text x="99.4427%" y="543.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::update_plain_value_by_hash (6 samples, 0.05%)</title><rect x="99.2323%" y="597" width="0.0475%" height="15" fill="rgb(218,25,20)" fg:x="12538" fg:w="6"/><text x="99.4823%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.02%)</title><rect x="99.2560%" y="581" width="0.0237%" height="15" fill="rgb(252,210,38)" fg:x="12541" fg:w="3"/><text x="99.5060%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.02%)</title><rect x="99.2560%" y="565" width="0.0237%" height="15" fill="rgb(242,134,21)" fg:x="12541" fg:w="3"/><text x="99.5060%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="99.2639%" y="549" width="0.0158%" height="15" fill="rgb(213,28,48)" fg:x="12542" fg:w="2"/><text x="99.5139%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="99.2639%" y="533" width="0.0158%" height="15" fill="rgb(250,196,2)" fg:x="12542" fg:w="2"/><text x="99.5139%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="99.2639%" y="517" width="0.0158%" height="15" fill="rgb(227,5,17)" fg:x="12542" fg:w="2"/><text x="99.5139%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.02%)</title><rect x="99.2639%" y="501" width="0.0158%" height="15" fill="rgb(221,226,24)" fg:x="12542" fg:w="2"/><text x="99.5139%" y="511.50"></text></g><g><title>nih_plug::wrapper::util::ScopedFtz::enable (4 samples, 0.03%)</title><rect x="99.2798%" y="597" width="0.0317%" height="15" fill="rgb(211,5,48)" fg:x="12544" fg:w="4"/><text x="99.5298%" y="607.50"></text></g><g><title>core::core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE (4 samples, 0.03%)</title><rect x="99.2798%" y="581" width="0.0317%" height="15" fill="rgb(219,150,6)" fg:x="12544" fg:w="4"/><text x="99.5298%" y="591.50"></text></g><g><title>core::core_arch::x86::sse::_mm_getcsr (4 samples, 0.03%)</title><rect x="99.2798%" y="565" width="0.0317%" height="15" fill="rgb(251,46,16)" fg:x="12544" fg:w="4"/><text x="99.5298%" y="575.50"></text></g><g><title>nih_plug::wrapper::util::buffer_management::BufferManager::create_buffers (7 samples, 0.06%)</title><rect x="99.3114%" y="597" width="0.0554%" height="15" fill="rgb(220,204,40)" fg:x="12548" fg:w="7"/><text x="99.5614%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="99.3510%" y="581" width="0.0158%" height="15" fill="rgb(211,85,2)" fg:x="12553" fg:w="2"/><text x="99.6010%" y="591.50"></text></g><g><title>nih_plug::wrapper::util::process_wrapper (5 samples, 0.04%)</title><rect x="99.3668%" y="597" width="0.0396%" height="15" fill="rgb(229,17,7)" fg:x="12555" fg:w="5"/><text x="99.6168%" y="607.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}} (5 samples, 0.04%)</title><rect x="99.3668%" y="581" width="0.0396%" height="15" fill="rgb(239,72,28)" fg:x="12555" fg:w="5"/><text x="99.6168%" y="591.50"></text></g><g><title>operator new (8 samples, 0.06%)</title><rect x="99.4064%" y="597" width="0.0633%" height="15" fill="rgb(230,47,54)" fg:x="12560" fg:w="8"/><text x="99.6564%" y="607.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Mul&gt;::mul (8 samples, 0.06%)</title><rect x="99.5093%" y="581" width="0.0633%" height="15" fill="rgb(214,50,8)" fg:x="12573" fg:w="8"/><text x="99.7593%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::mul_m128 (8 samples, 0.06%)</title><rect x="99.5093%" y="565" width="0.0633%" height="15" fill="rgb(216,198,43)" fg:x="12573" fg:w="8"/><text x="99.7593%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (8 samples, 0.06%)</title><rect x="99.5093%" y="549" width="0.0633%" height="15" fill="rgb(234,20,35)" fg:x="12573" fg:w="8"/><text x="99.7593%" y="559.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::bit::BitOr&gt;::bitor (2 samples, 0.02%)</title><rect x="99.5726%" y="581" width="0.0158%" height="15" fill="rgb(254,45,19)" fg:x="12581" fg:w="2"/><text x="99.8226%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse::bitor_m128 (2 samples, 0.02%)</title><rect x="99.5726%" y="565" width="0.0158%" height="15" fill="rgb(219,14,44)" fg:x="12581" fg:w="2"/><text x="99.8226%" y="575.50"></text></g><g><title>core::core_arch::x86::sse::_mm_or_ps (2 samples, 0.02%)</title><rect x="99.5726%" y="549" width="0.0158%" height="15" fill="rgb(217,220,26)" fg:x="12581" fg:w="2"/><text x="99.8226%" y="559.50"></text></g><g><title>&lt;wide::i32x4_::i32x4 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (2 samples, 0.02%)</title><rect x="99.6043%" y="581" width="0.0158%" height="15" fill="rgb(213,158,28)" fg:x="12585" fg:w="2"/><text x="99.8543%" y="591.50"></text></g><g><title>safe_arch::x86_x64::sse2::shr_all_i32_m128i (2 samples, 0.02%)</title><rect x="99.6043%" y="565" width="0.0158%" height="15" fill="rgb(252,51,52)" fg:x="12585" fg:w="2"/><text x="99.8543%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_sra_epi32 (2 samples, 0.02%)</title><rect x="99.6043%" y="549" width="0.0158%" height="15" fill="rgb(246,89,16)" fg:x="12585" fg:w="2"/><text x="99.8543%" y="559.50"></text></g><g><title>wide::f32x4_::f32x4::is_finite (3 samples, 0.02%)</title><rect x="99.6280%" y="581" width="0.0237%" height="15" fill="rgb(216,158,49)" fg:x="12588" fg:w="3"/><text x="99.8780%" y="591.50"></text></g><g><title>wide::u32x4_::u32x4::cmp_eq (3 samples, 0.02%)</title><rect x="99.6280%" y="565" width="0.0237%" height="15" fill="rgb(236,107,19)" fg:x="12588" fg:w="3"/><text x="99.8780%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse2::cmp_eq_mask_i32_m128i (3 samples, 0.02%)</title><rect x="99.6280%" y="549" width="0.0237%" height="15" fill="rgb(228,185,30)" fg:x="12588" fg:w="3"/><text x="99.8780%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi32 (3 samples, 0.02%)</title><rect x="99.6280%" y="533" width="0.0237%" height="15" fill="rgb(246,134,8)" fg:x="12588" fg:w="3"/><text x="99.8780%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::mul_add (2 samples, 0.02%)</title><rect x="99.6518%" y="581" width="0.0158%" height="15" fill="rgb(214,143,50)" fg:x="12591" fg:w="2"/><text x="99.9018%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Add&gt;::add (2 samples, 0.02%)</title><rect x="99.6518%" y="565" width="0.0158%" height="15" fill="rgb(228,75,8)" fg:x="12591" fg:w="2"/><text x="99.9018%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::add_m128 (2 samples, 0.02%)</title><rect x="99.6518%" y="549" width="0.0158%" height="15" fill="rgb(207,175,4)" fg:x="12591" fg:w="2"/><text x="99.9018%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_add_ps (2 samples, 0.02%)</title><rect x="99.6518%" y="533" width="0.0158%" height="15" fill="rgb(205,108,24)" fg:x="12591" fg:w="2"/><text x="99.9018%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::mul_neg_add (2 samples, 0.02%)</title><rect x="99.6676%" y="581" width="0.0158%" height="15" fill="rgb(244,120,49)" fg:x="12593" fg:w="2"/><text x="99.9176%" y="591.50"></text></g><g><title>&lt;wide::f32x4_::f32x4 as core::ops::arith::Sub&gt;::sub (2 samples, 0.02%)</title><rect x="99.6676%" y="565" width="0.0158%" height="15" fill="rgb(223,47,38)" fg:x="12593" fg:w="2"/><text x="99.9176%" y="575.50"></text></g><g><title>safe_arch::x86_x64::sse::sub_m128 (2 samples, 0.02%)</title><rect x="99.6676%" y="549" width="0.0158%" height="15" fill="rgb(229,179,11)" fg:x="12593" fg:w="2"/><text x="99.9176%" y="559.50"></text></g><g><title>core::core_arch::x86::sse::_mm_sub_ps (2 samples, 0.02%)</title><rect x="99.6676%" y="533" width="0.0158%" height="15" fill="rgb(231,122,1)" fg:x="12593" fg:w="2"/><text x="99.9176%" y="543.50"></text></g><g><title>wide::f32x4_::f32x4::pow_f32x4 (26 samples, 0.21%)</title><rect x="99.4935%" y="597" width="0.2058%" height="15" fill="rgb(245,119,9)" fg:x="12571" fg:w="26"/><text x="99.7435%" y="607.50"></text></g><g><title>[unknown] (630 samples, 4.99%)</title><rect x="94.7843%" y="613" width="4.9861%" height="15" fill="rgb(241,163,25)" fg:x="11976" fg:w="630"/><text x="95.0343%" y="623.50">[unkno..</text></g><g><title>write (9 samples, 0.07%)</title><rect x="99.6992%" y="597" width="0.0712%" height="15" fill="rgb(217,214,3)" fg:x="12597" fg:w="9"/><text x="99.9492%" y="607.50"></text></g><g><title>nih_plug::wrapper::util::buffer_management::BufferManager::create_buffers (3 samples, 0.02%)</title><rect x="99.7863%" y="613" width="0.0237%" height="15" fill="rgb(240,86,28)" fg:x="12608" fg:w="3"/><text x="100.0363%" y="623.50"></text></g><g><title>nih_plug::buffer::Buffer::set_slices (2 samples, 0.02%)</title><rect x="99.7942%" y="597" width="0.0158%" height="15" fill="rgb(215,47,9)" fg:x="12609" fg:w="2"/><text x="100.0442%" y="607.50"></text></g><g><title>nih_plug::wrapper::util::buffer_management::BufferManager::create_buffers::{{closure}} (2 samples, 0.02%)</title><rect x="99.7942%" y="581" width="0.0158%" height="15" fill="rgb(252,25,45)" fg:x="12609" fg:w="2"/><text x="100.0442%" y="591.50"></text></g><g><title>nih_plug::wrapper::util::process_wrapper (5 samples, 0.04%)</title><rect x="99.8101%" y="613" width="0.0396%" height="15" fill="rgb(251,164,9)" fg:x="12611" fg:w="5"/><text x="100.0601%" y="623.50"></text></g><g><title>nih_plug::wrapper::clap::wrapper::Wrapper&lt;P&gt;::process::{{closure}} (5 samples, 0.04%)</title><rect x="99.8101%" y="597" width="0.0396%" height="15" fill="rgb(233,194,0)" fg:x="12611" fg:w="5"/><text x="100.0601%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,clip::Clip&gt;&gt; (2 samples, 0.02%)</title><rect x="99.8338%" y="581" width="0.0158%" height="15" fill="rgb(249,111,24)" fg:x="12614" fg:w="2"/><text x="100.0838%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="99.8338%" y="565" width="0.0158%" height="15" fill="rgb(250,223,3)" fg:x="12614" fg:w="2"/><text x="100.0838%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="99.8338%" y="549" width="0.0158%" height="15" fill="rgb(236,178,37)" fg:x="12614" fg:w="2"/><text x="100.0838%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="99.8338%" y="533" width="0.0158%" height="15" fill="rgb(241,158,50)" fg:x="12614" fg:w="2"/><text x="100.0838%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="99.8338%" y="517" width="0.0158%" height="15" fill="rgb(213,121,41)" fg:x="12614" fg:w="2"/><text x="100.0838%" y="527.50"></text></g><g><title>bitwig-remote-p (11,208 samples, 88.71%)</title><rect x="11.1911%" y="629" width="88.7060%" height="15" fill="rgb(240,92,3)" fg:x="1414" fg:w="11208"/><text x="11.4411%" y="639.50">bitwig-remote-p</text></g><g><title>write (3 samples, 0.02%)</title><rect x="99.8734%" y="613" width="0.0237%" height="15" fill="rgb(205,123,3)" fg:x="12619" fg:w="3"/><text x="100.1234%" y="623.50"></text></g><g><title>all (12,635 samples, 100%)</title><rect x="0.0000%" y="645" width="100.0000%" height="15" fill="rgb(205,97,47)" fg:x="0" fg:w="12635"/><text x="0.2500%" y="655.50"></text></g><g><title>request-reader (13 samples, 0.10%)</title><rect x="99.8971%" y="629" width="0.1029%" height="15" fill="rgb(247,152,14)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="639.50"></text></g><g><title>[libc.so.6] (13 samples, 0.10%)</title><rect x="99.8971%" y="613" width="0.1029%" height="15" fill="rgb(248,195,53)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="623.50"></text></g><g><title>[libc.so.6] (13 samples, 0.10%)</title><rect x="99.8971%" y="597" width="0.1029%" height="15" fill="rgb(226,201,16)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="607.50"></text></g><g><title>base::core::Thread::thread_run_func (13 samples, 0.10%)</title><rect x="99.8971%" y="581" width="0.1029%" height="15" fill="rgb(205,98,0)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="591.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (13 samples, 0.10%)</title><rect x="99.8971%" y="565" width="0.1029%" height="15" fill="rgb(214,191,48)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="575.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (13 samples, 0.10%)</title><rect x="99.8971%" y="549" width="0.1029%" height="15" fill="rgb(237,112,39)" fg:x="12622" fg:w="13"/><text x="100.1471%" y="559.50"></text></g><g><title>base::core::AbstractInputStream::readByte (12 samples, 0.09%)</title><rect x="99.9050%" y="533" width="0.0950%" height="15" fill="rgb(247,203,27)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="543.50"></text></g><g><title>base::core::AbstractInputStream::readReqBytes (12 samples, 0.09%)</title><rect x="99.9050%" y="517" width="0.0950%" height="15" fill="rgb(235,124,28)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="527.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (12 samples, 0.09%)</title><rect x="99.9050%" y="501" width="0.0950%" height="15" fill="rgb(208,207,46)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="511.50"></text></g><g><title>[BitwigPluginHost-X64-SSE41] (12 samples, 0.09%)</title><rect x="99.9050%" y="485" width="0.0950%" height="15" fill="rgb(234,176,4)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="495.50"></text></g><g><title>read (12 samples, 0.09%)</title><rect x="99.9050%" y="469" width="0.0950%" height="15" fill="rgb(230,133,28)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="479.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="453" width="0.0950%" height="15" fill="rgb(211,137,40)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="463.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="437" width="0.0950%" height="15" fill="rgb(254,35,13)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="447.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="421" width="0.0950%" height="15" fill="rgb(225,49,51)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="431.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="405" width="0.0950%" height="15" fill="rgb(251,10,15)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="415.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="389" width="0.0950%" height="15" fill="rgb(228,207,15)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="399.50"></text></g><g><title>[unknown] (12 samples, 0.09%)</title><rect x="99.9050%" y="373" width="0.0950%" height="15" fill="rgb(241,99,19)" fg:x="12623" fg:w="12"/><text x="100.1550%" y="383.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="99.9209%" y="357" width="0.0791%" height="15" fill="rgb(207,104,49)" fg:x="12625" fg:w="10"/><text x="100.1709%" y="367.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="99.9209%" y="341" width="0.0791%" height="15" fill="rgb(234,99,18)" fg:x="12625" fg:w="10"/><text x="100.1709%" y="351.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="99.9209%" y="325" width="0.0791%" height="15" fill="rgb(213,191,49)" fg:x="12625" fg:w="10"/><text x="100.1709%" y="335.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="99.9209%" y="309" width="0.0791%" height="15" fill="rgb(210,226,19)" fg:x="12625" fg:w="10"/><text x="100.1709%" y="319.50"></text></g><g><title>[unknown] (10 samples, 0.08%)</title><rect x="99.9209%" y="293" width="0.0791%" height="15" fill="rgb(229,97,18)" fg:x="12625" fg:w="10"/><text x="100.1709%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.05%)</title><rect x="99.9525%" y="277" width="0.0475%" height="15" fill="rgb(211,167,15)" fg:x="12629" fg:w="6"/><text x="100.2025%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.05%)</title><rect x="99.9525%" y="261" width="0.0475%" height="15" fill="rgb(210,169,34)" fg:x="12629" fg:w="6"/><text x="100.2025%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="99.9604%" y="245" width="0.0396%" height="15" fill="rgb(241,121,31)" fg:x="12630" fg:w="5"/><text x="100.2104%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="99.9604%" y="229" width="0.0396%" height="15" fill="rgb(232,40,11)" fg:x="12630" fg:w="5"/><text x="100.2104%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="99.9604%" y="213" width="0.0396%" height="15" fill="rgb(205,86,26)" fg:x="12630" fg:w="5"/><text x="100.2104%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.04%)</title><rect x="99.9604%" y="197" width="0.0396%" height="15" fill="rgb(231,126,28)" fg:x="12630" fg:w="5"/><text x="100.2104%" y="207.50"></text></g></svg></svg>